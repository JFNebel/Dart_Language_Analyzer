Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    NOT
    OR
    PUT
    UPDATE
    VARBOOL
    VARDOUBLE

Grammar

Rule 0     S' -> expresion
Rule 1     expresion -> lista
Rule 2     expresion -> mapa
Rule 3     expresion -> variable
Rule 4     expresion -> expresionFor
Rule 5     expresion -> expresionWhile
Rule 6     expresion -> expresionIf
Rule 7     expresion -> concatenacion
Rule 8     expresion -> incremento
Rule 9     expresion -> decremento
Rule 10    expresion -> print
Rule 11    expresion -> funcion
Rule 12    expresion -> expresion expresion
Rule 13    variable -> VAR ID EQUALS expresionVar PUNTCOM
Rule 14    variable -> VAR ID PUNTCOM
Rule 15    variable -> VAR ID EQUALS expresionBool PUNTCOM
Rule 16    valorVar -> NUMBER
Rule 17    valorVar -> DOUBLE
Rule 18    valorVar -> CADENA
Rule 19    expresionVar -> valorVar
Rule 20    expresionVar -> ID
Rule 21    expresionVar -> expresionVar operadorA expresionVar
Rule 22    expresionFor -> FOR LPAREN forParameters RPAREN LCURLYB expresion RCURLYB
Rule 23    forParameters -> forIterator PUNTCOM forCondition PUNTCOM forAction
Rule 24    forIterator -> INT ID EQUALS NUMBER
Rule 25    forIterator -> ID EQUALS NUMBER
Rule 26    forCondition -> ID MAYORQUE NUMBER
Rule 27    forCondition -> ID MENORQUE NUMBER
Rule 28    forAction -> ID INCREMENTO
Rule 29    forAction -> ID DECREMENTO
Rule 30    forAction -> INCREMENTO ID
Rule 31    forAction -> DECREMENTO ID
Rule 32    expresionWhile -> WHILE LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB
Rule 33    expresionIf -> IF LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB
Rule 34    expresionBool -> booleano
Rule 35    expresionBool -> ID comparador ID
Rule 36    expresionBool -> ID comparador NUMBER
Rule 37    expresionBool -> NUMBER comparador ID
Rule 38    expresionBool -> NUMBER comparador NUMBER
Rule 39    expresionBool -> expresionBool EQUIVAL expresionBool
Rule 40    booleano -> TRUE
Rule 41    booleano -> FALSE
Rule 42    comparador -> MAYORQUE
Rule 43    comparador -> MENORQUE
Rule 44    comparador -> EQUIVAL
Rule 45    comparador -> MINEQ
Rule 46    comparador -> MAYEQ
Rule 47    lista -> expLista
Rule 48    lista -> add_lista
Rule 49    expLista -> VAR ID EQUALS NEW LISTA LPAREN inicializaLista RPAREN pto_coma
Rule 50    expLista -> VAR ID EQUALS LCORCHETE elementosLista RCORCHETE pto_coma
Rule 51    inicializaLista -> NUMBER
Rule 52    inicializaLista -> <empty>
Rule 53    add_lista -> ID LCORCHETE NUMBER RCORCHETE EQUALS num_cadena pto_coma
Rule 54    add_lista -> ID PTO ADD LPAREN elementoAddLista RPAREN pto_coma
Rule 55    elementoAddLista -> num_cadena
Rule 56    elementoAddLista -> booleano
Rule 57    num_cadena -> NUMBER
Rule 58    num_cadena -> CADENA
Rule 59    elementosLista -> CADENA
Rule 60    elementosLista -> NUMBER
Rule 61    elementosLista -> CADENA COMA elementosLista
Rule 62    elementosLista -> NUMBER COMA elementosLista
Rule 63    elementosLista -> <empty>
Rule 64    mapa -> expMapa
Rule 65    mapa -> add_mapa
Rule 66    expMapa -> VAR ID EQUALS NEW MAPA LPAREN RPAREN pto_coma
Rule 67    expMapa -> MAPA ID EQUALS LCURLYB elementosMapa RCURLYB pto_coma
Rule 68    elementosMapa -> num_cadena DOSPTO num_cadena
Rule 69    elementosMapa -> num_cadena DOSPTO num_cadena COMA elementosMapa
Rule 70    add_mapa -> ID LCORCHETE CADENA RCORCHETE EQUALS CADENA pto_coma
Rule 71    operadorA -> PLUS
Rule 72    operadorA -> MINUS
Rule 73    operadorA -> TIMES
Rule 74    operadorA -> DIVIDE
Rule 75    operadorA -> DIVIDE_E
Rule 76    incremento -> ID INCREMENTO pto_coma
Rule 77    decremento -> ID DECREMENTO pto_coma
Rule 78    concatenacion -> VAR ID EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN pto_coma
Rule 79    print -> PRINT LPAREN printVal RPAREN pto_coma
Rule 80    printVal -> ID
Rule 81    printVal -> valorVar
Rule 82    printVal -> expresionBool
Rule 83    funcion -> VOID ID LPAREN RPAREN final_key
Rule 84    final_key -> LCURLYB expresion RCURLYB
Rule 85    final_key -> LCURLYB RCURLYB
Rule 86    pto_coma -> PUNTCOM

Terminals, with rules where they appear

ADD                  : 54
AND                  : 
CADENA               : 18 58 59 61 70 70
COMA                 : 61 62 69 78
DECREMENTO           : 29 31 77
DIVIDE               : 74
DIVIDE_E             : 75
DOSPTO               : 68 69
DOUBLE               : 17
EQUALS               : 13 15 24 25 49 50 53 66 67 70 78
EQUIVAL              : 39 44
FALSE                : 41
FOR                  : 22
ID                   : 13 14 15 20 24 25 26 27 28 29 30 31 35 35 36 37 49 50 53 54 66 67 70 76 77 78 78 80 83
IF                   : 33
INCREMENTO           : 28 30 76
INT                  : 24
LCORCHETE            : 50 53 70
LCURLYB              : 22 32 33 67 84 85
LISTA                : 49
LPAREN               : 22 32 33 49 54 66 78 79 83
MAPA                 : 66 67
MAYEQ                : 46
MAYORQUE             : 26 42
MENORQUE             : 27 43
MINEQ                : 45
MINUS                : 72
NEW                  : 49 66
NOT                  : 
NUMBER               : 16 24 25 26 27 36 37 38 38 51 53 57 60 62 78 78
OR                   : 
PLUS                 : 71
PRINT                : 79
PTO                  : 54 78
PUNTCOM              : 13 14 15 23 23 86
PUT                  : 
RCORCHETE            : 50 53 70
RCURLYB              : 22 32 33 67 84 85
RPAREN               : 22 32 33 49 54 66 78 79 83
SUBSTRING            : 78
TIMES                : 73
TRUE                 : 40
UPDATE               : 
VAR                  : 13 14 15 49 50 66 78
VARBOOL              : 
VARDOUBLE            : 
VOID                 : 83
WHILE                : 32
error                : 

Nonterminals, with rules where they appear

add_lista            : 48
add_mapa             : 65
booleano             : 34 56
comparador           : 35 36 37 38
concatenacion        : 7
decremento           : 9
elementoAddLista     : 54
elementosLista       : 50 61 62
elementosMapa        : 67 69
expLista             : 47
expMapa              : 64
expresion            : 12 12 22 32 33 84 0
expresionBool        : 15 32 33 39 39 82
expresionFor         : 4
expresionIf          : 6
expresionVar         : 13 21 21
expresionWhile       : 5
final_key            : 83
forAction            : 23
forCondition         : 23
forIterator          : 23
forParameters        : 22
funcion              : 11
incremento           : 8
inicializaLista      : 49
lista                : 1
mapa                 : 2
num_cadena           : 53 55 68 68 69 69
operadorA            : 21
print                : 10
printVal             : 79
pto_coma             : 49 50 53 54 66 67 70 76 77 78 79
valorVar             : 19 81
variable             : 3

Parsing method: LALR

state 0

    (0) S' -> . expresion
    (1) expresion -> . lista
    (2) expresion -> . mapa
    (3) expresion -> . variable
    (4) expresion -> . expresionFor
    (5) expresion -> . expresionWhile
    (6) expresion -> . expresionIf
    (7) expresion -> . concatenacion
    (8) expresion -> . incremento
    (9) expresion -> . decremento
    (10) expresion -> . print
    (11) expresion -> . funcion
    (12) expresion -> . expresion expresion
    (47) lista -> . expLista
    (48) lista -> . add_lista
    (64) mapa -> . expMapa
    (65) mapa -> . add_mapa
    (13) variable -> . VAR ID EQUALS expresionVar PUNTCOM
    (14) variable -> . VAR ID PUNTCOM
    (15) variable -> . VAR ID EQUALS expresionBool PUNTCOM
    (22) expresionFor -> . FOR LPAREN forParameters RPAREN LCURLYB expresion RCURLYB
    (32) expresionWhile -> . WHILE LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB
    (33) expresionIf -> . IF LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB
    (78) concatenacion -> . VAR ID EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN pto_coma
    (76) incremento -> . ID INCREMENTO pto_coma
    (77) decremento -> . ID DECREMENTO pto_coma
    (79) print -> . PRINT LPAREN printVal RPAREN pto_coma
    (83) funcion -> . VOID ID LPAREN RPAREN final_key
    (49) expLista -> . VAR ID EQUALS NEW LISTA LPAREN inicializaLista RPAREN pto_coma
    (50) expLista -> . VAR ID EQUALS LCORCHETE elementosLista RCORCHETE pto_coma
    (53) add_lista -> . ID LCORCHETE NUMBER RCORCHETE EQUALS num_cadena pto_coma
    (54) add_lista -> . ID PTO ADD LPAREN elementoAddLista RPAREN pto_coma
    (66) expMapa -> . VAR ID EQUALS NEW MAPA LPAREN RPAREN pto_coma
    (67) expMapa -> . MAPA ID EQUALS LCURLYB elementosMapa RCURLYB pto_coma
    (70) add_mapa -> . ID LCORCHETE CADENA RCORCHETE EQUALS CADENA pto_coma

    VAR             shift and go to state 17
    FOR             shift and go to state 19
    WHILE           shift and go to state 20
    IF              shift and go to state 21
    ID              shift and go to state 18
    PRINT           shift and go to state 22
    VOID            shift and go to state 23
    MAPA            shift and go to state 24

    expresion                      shift and go to state 1
    lista                          shift and go to state 2
    mapa                           shift and go to state 3
    variable                       shift and go to state 4
    expresionFor                   shift and go to state 5
    expresionWhile                 shift and go to state 6
    expresionIf                    shift and go to state 7
    concatenacion                  shift and go to state 8
    incremento                     shift and go to state 9
    decremento                     shift and go to state 10
    print                          shift and go to state 11
    funcion                        shift and go to state 12
    expLista                       shift and go to state 13
    add_lista                      shift and go to state 14
    expMapa                        shift and go to state 15
    add_mapa                       shift and go to state 16

state 1

    (0) S' -> expresion .
    (12) expresion -> expresion . expresion
    (1) expresion -> . lista
    (2) expresion -> . mapa
    (3) expresion -> . variable
    (4) expresion -> . expresionFor
    (5) expresion -> . expresionWhile
    (6) expresion -> . expresionIf
    (7) expresion -> . concatenacion
    (8) expresion -> . incremento
    (9) expresion -> . decremento
    (10) expresion -> . print
    (11) expresion -> . funcion
    (12) expresion -> . expresion expresion
    (47) lista -> . expLista
    (48) lista -> . add_lista
    (64) mapa -> . expMapa
    (65) mapa -> . add_mapa
    (13) variable -> . VAR ID EQUALS expresionVar PUNTCOM
    (14) variable -> . VAR ID PUNTCOM
    (15) variable -> . VAR ID EQUALS expresionBool PUNTCOM
    (22) expresionFor -> . FOR LPAREN forParameters RPAREN LCURLYB expresion RCURLYB
    (32) expresionWhile -> . WHILE LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB
    (33) expresionIf -> . IF LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB
    (78) concatenacion -> . VAR ID EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN pto_coma
    (76) incremento -> . ID INCREMENTO pto_coma
    (77) decremento -> . ID DECREMENTO pto_coma
    (79) print -> . PRINT LPAREN printVal RPAREN pto_coma
    (83) funcion -> . VOID ID LPAREN RPAREN final_key
    (49) expLista -> . VAR ID EQUALS NEW LISTA LPAREN inicializaLista RPAREN pto_coma
    (50) expLista -> . VAR ID EQUALS LCORCHETE elementosLista RCORCHETE pto_coma
    (53) add_lista -> . ID LCORCHETE NUMBER RCORCHETE EQUALS num_cadena pto_coma
    (54) add_lista -> . ID PTO ADD LPAREN elementoAddLista RPAREN pto_coma
    (66) expMapa -> . VAR ID EQUALS NEW MAPA LPAREN RPAREN pto_coma
    (67) expMapa -> . MAPA ID EQUALS LCURLYB elementosMapa RCURLYB pto_coma
    (70) add_mapa -> . ID LCORCHETE CADENA RCORCHETE EQUALS CADENA pto_coma

    VAR             shift and go to state 17
    FOR             shift and go to state 19
    WHILE           shift and go to state 20
    IF              shift and go to state 21
    ID              shift and go to state 18
    PRINT           shift and go to state 22
    VOID            shift and go to state 23
    MAPA            shift and go to state 24

    expresion                      shift and go to state 25
    lista                          shift and go to state 2
    mapa                           shift and go to state 3
    variable                       shift and go to state 4
    expresionFor                   shift and go to state 5
    expresionWhile                 shift and go to state 6
    expresionIf                    shift and go to state 7
    concatenacion                  shift and go to state 8
    incremento                     shift and go to state 9
    decremento                     shift and go to state 10
    print                          shift and go to state 11
    funcion                        shift and go to state 12
    expLista                       shift and go to state 13
    add_lista                      shift and go to state 14
    expMapa                        shift and go to state 15
    add_mapa                       shift and go to state 16

state 2

    (1) expresion -> lista .

    VAR             reduce using rule 1 (expresion -> lista .)
    FOR             reduce using rule 1 (expresion -> lista .)
    WHILE           reduce using rule 1 (expresion -> lista .)
    IF              reduce using rule 1 (expresion -> lista .)
    ID              reduce using rule 1 (expresion -> lista .)
    PRINT           reduce using rule 1 (expresion -> lista .)
    VOID            reduce using rule 1 (expresion -> lista .)
    MAPA            reduce using rule 1 (expresion -> lista .)
    $end            reduce using rule 1 (expresion -> lista .)
    RCURLYB         reduce using rule 1 (expresion -> lista .)


state 3

    (2) expresion -> mapa .

    VAR             reduce using rule 2 (expresion -> mapa .)
    FOR             reduce using rule 2 (expresion -> mapa .)
    WHILE           reduce using rule 2 (expresion -> mapa .)
    IF              reduce using rule 2 (expresion -> mapa .)
    ID              reduce using rule 2 (expresion -> mapa .)
    PRINT           reduce using rule 2 (expresion -> mapa .)
    VOID            reduce using rule 2 (expresion -> mapa .)
    MAPA            reduce using rule 2 (expresion -> mapa .)
    $end            reduce using rule 2 (expresion -> mapa .)
    RCURLYB         reduce using rule 2 (expresion -> mapa .)


state 4

    (3) expresion -> variable .

    VAR             reduce using rule 3 (expresion -> variable .)
    FOR             reduce using rule 3 (expresion -> variable .)
    WHILE           reduce using rule 3 (expresion -> variable .)
    IF              reduce using rule 3 (expresion -> variable .)
    ID              reduce using rule 3 (expresion -> variable .)
    PRINT           reduce using rule 3 (expresion -> variable .)
    VOID            reduce using rule 3 (expresion -> variable .)
    MAPA            reduce using rule 3 (expresion -> variable .)
    $end            reduce using rule 3 (expresion -> variable .)
    RCURLYB         reduce using rule 3 (expresion -> variable .)


state 5

    (4) expresion -> expresionFor .

    VAR             reduce using rule 4 (expresion -> expresionFor .)
    FOR             reduce using rule 4 (expresion -> expresionFor .)
    WHILE           reduce using rule 4 (expresion -> expresionFor .)
    IF              reduce using rule 4 (expresion -> expresionFor .)
    ID              reduce using rule 4 (expresion -> expresionFor .)
    PRINT           reduce using rule 4 (expresion -> expresionFor .)
    VOID            reduce using rule 4 (expresion -> expresionFor .)
    MAPA            reduce using rule 4 (expresion -> expresionFor .)
    $end            reduce using rule 4 (expresion -> expresionFor .)
    RCURLYB         reduce using rule 4 (expresion -> expresionFor .)


state 6

    (5) expresion -> expresionWhile .

    VAR             reduce using rule 5 (expresion -> expresionWhile .)
    FOR             reduce using rule 5 (expresion -> expresionWhile .)
    WHILE           reduce using rule 5 (expresion -> expresionWhile .)
    IF              reduce using rule 5 (expresion -> expresionWhile .)
    ID              reduce using rule 5 (expresion -> expresionWhile .)
    PRINT           reduce using rule 5 (expresion -> expresionWhile .)
    VOID            reduce using rule 5 (expresion -> expresionWhile .)
    MAPA            reduce using rule 5 (expresion -> expresionWhile .)
    $end            reduce using rule 5 (expresion -> expresionWhile .)
    RCURLYB         reduce using rule 5 (expresion -> expresionWhile .)


state 7

    (6) expresion -> expresionIf .

    VAR             reduce using rule 6 (expresion -> expresionIf .)
    FOR             reduce using rule 6 (expresion -> expresionIf .)
    WHILE           reduce using rule 6 (expresion -> expresionIf .)
    IF              reduce using rule 6 (expresion -> expresionIf .)
    ID              reduce using rule 6 (expresion -> expresionIf .)
    PRINT           reduce using rule 6 (expresion -> expresionIf .)
    VOID            reduce using rule 6 (expresion -> expresionIf .)
    MAPA            reduce using rule 6 (expresion -> expresionIf .)
    $end            reduce using rule 6 (expresion -> expresionIf .)
    RCURLYB         reduce using rule 6 (expresion -> expresionIf .)


state 8

    (7) expresion -> concatenacion .

    VAR             reduce using rule 7 (expresion -> concatenacion .)
    FOR             reduce using rule 7 (expresion -> concatenacion .)
    WHILE           reduce using rule 7 (expresion -> concatenacion .)
    IF              reduce using rule 7 (expresion -> concatenacion .)
    ID              reduce using rule 7 (expresion -> concatenacion .)
    PRINT           reduce using rule 7 (expresion -> concatenacion .)
    VOID            reduce using rule 7 (expresion -> concatenacion .)
    MAPA            reduce using rule 7 (expresion -> concatenacion .)
    $end            reduce using rule 7 (expresion -> concatenacion .)
    RCURLYB         reduce using rule 7 (expresion -> concatenacion .)


state 9

    (8) expresion -> incremento .

    VAR             reduce using rule 8 (expresion -> incremento .)
    FOR             reduce using rule 8 (expresion -> incremento .)
    WHILE           reduce using rule 8 (expresion -> incremento .)
    IF              reduce using rule 8 (expresion -> incremento .)
    ID              reduce using rule 8 (expresion -> incremento .)
    PRINT           reduce using rule 8 (expresion -> incremento .)
    VOID            reduce using rule 8 (expresion -> incremento .)
    MAPA            reduce using rule 8 (expresion -> incremento .)
    $end            reduce using rule 8 (expresion -> incremento .)
    RCURLYB         reduce using rule 8 (expresion -> incremento .)


state 10

    (9) expresion -> decremento .

    VAR             reduce using rule 9 (expresion -> decremento .)
    FOR             reduce using rule 9 (expresion -> decremento .)
    WHILE           reduce using rule 9 (expresion -> decremento .)
    IF              reduce using rule 9 (expresion -> decremento .)
    ID              reduce using rule 9 (expresion -> decremento .)
    PRINT           reduce using rule 9 (expresion -> decremento .)
    VOID            reduce using rule 9 (expresion -> decremento .)
    MAPA            reduce using rule 9 (expresion -> decremento .)
    $end            reduce using rule 9 (expresion -> decremento .)
    RCURLYB         reduce using rule 9 (expresion -> decremento .)


state 11

    (10) expresion -> print .

    VAR             reduce using rule 10 (expresion -> print .)
    FOR             reduce using rule 10 (expresion -> print .)
    WHILE           reduce using rule 10 (expresion -> print .)
    IF              reduce using rule 10 (expresion -> print .)
    ID              reduce using rule 10 (expresion -> print .)
    PRINT           reduce using rule 10 (expresion -> print .)
    VOID            reduce using rule 10 (expresion -> print .)
    MAPA            reduce using rule 10 (expresion -> print .)
    $end            reduce using rule 10 (expresion -> print .)
    RCURLYB         reduce using rule 10 (expresion -> print .)


state 12

    (11) expresion -> funcion .

    VAR             reduce using rule 11 (expresion -> funcion .)
    FOR             reduce using rule 11 (expresion -> funcion .)
    WHILE           reduce using rule 11 (expresion -> funcion .)
    IF              reduce using rule 11 (expresion -> funcion .)
    ID              reduce using rule 11 (expresion -> funcion .)
    PRINT           reduce using rule 11 (expresion -> funcion .)
    VOID            reduce using rule 11 (expresion -> funcion .)
    MAPA            reduce using rule 11 (expresion -> funcion .)
    $end            reduce using rule 11 (expresion -> funcion .)
    RCURLYB         reduce using rule 11 (expresion -> funcion .)


state 13

    (47) lista -> expLista .

    VAR             reduce using rule 47 (lista -> expLista .)
    FOR             reduce using rule 47 (lista -> expLista .)
    WHILE           reduce using rule 47 (lista -> expLista .)
    IF              reduce using rule 47 (lista -> expLista .)
    ID              reduce using rule 47 (lista -> expLista .)
    PRINT           reduce using rule 47 (lista -> expLista .)
    VOID            reduce using rule 47 (lista -> expLista .)
    MAPA            reduce using rule 47 (lista -> expLista .)
    $end            reduce using rule 47 (lista -> expLista .)
    RCURLYB         reduce using rule 47 (lista -> expLista .)


state 14

    (48) lista -> add_lista .

    VAR             reduce using rule 48 (lista -> add_lista .)
    FOR             reduce using rule 48 (lista -> add_lista .)
    WHILE           reduce using rule 48 (lista -> add_lista .)
    IF              reduce using rule 48 (lista -> add_lista .)
    ID              reduce using rule 48 (lista -> add_lista .)
    PRINT           reduce using rule 48 (lista -> add_lista .)
    VOID            reduce using rule 48 (lista -> add_lista .)
    MAPA            reduce using rule 48 (lista -> add_lista .)
    $end            reduce using rule 48 (lista -> add_lista .)
    RCURLYB         reduce using rule 48 (lista -> add_lista .)


state 15

    (64) mapa -> expMapa .

    VAR             reduce using rule 64 (mapa -> expMapa .)
    FOR             reduce using rule 64 (mapa -> expMapa .)
    WHILE           reduce using rule 64 (mapa -> expMapa .)
    IF              reduce using rule 64 (mapa -> expMapa .)
    ID              reduce using rule 64 (mapa -> expMapa .)
    PRINT           reduce using rule 64 (mapa -> expMapa .)
    VOID            reduce using rule 64 (mapa -> expMapa .)
    MAPA            reduce using rule 64 (mapa -> expMapa .)
    $end            reduce using rule 64 (mapa -> expMapa .)
    RCURLYB         reduce using rule 64 (mapa -> expMapa .)


state 16

    (65) mapa -> add_mapa .

    VAR             reduce using rule 65 (mapa -> add_mapa .)
    FOR             reduce using rule 65 (mapa -> add_mapa .)
    WHILE           reduce using rule 65 (mapa -> add_mapa .)
    IF              reduce using rule 65 (mapa -> add_mapa .)
    ID              reduce using rule 65 (mapa -> add_mapa .)
    PRINT           reduce using rule 65 (mapa -> add_mapa .)
    VOID            reduce using rule 65 (mapa -> add_mapa .)
    MAPA            reduce using rule 65 (mapa -> add_mapa .)
    $end            reduce using rule 65 (mapa -> add_mapa .)
    RCURLYB         reduce using rule 65 (mapa -> add_mapa .)


state 17

    (13) variable -> VAR . ID EQUALS expresionVar PUNTCOM
    (14) variable -> VAR . ID PUNTCOM
    (15) variable -> VAR . ID EQUALS expresionBool PUNTCOM
    (78) concatenacion -> VAR . ID EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN pto_coma
    (49) expLista -> VAR . ID EQUALS NEW LISTA LPAREN inicializaLista RPAREN pto_coma
    (50) expLista -> VAR . ID EQUALS LCORCHETE elementosLista RCORCHETE pto_coma
    (66) expMapa -> VAR . ID EQUALS NEW MAPA LPAREN RPAREN pto_coma

    ID              shift and go to state 26


state 18

    (76) incremento -> ID . INCREMENTO pto_coma
    (77) decremento -> ID . DECREMENTO pto_coma
    (53) add_lista -> ID . LCORCHETE NUMBER RCORCHETE EQUALS num_cadena pto_coma
    (54) add_lista -> ID . PTO ADD LPAREN elementoAddLista RPAREN pto_coma
    (70) add_mapa -> ID . LCORCHETE CADENA RCORCHETE EQUALS CADENA pto_coma

    INCREMENTO      shift and go to state 27
    DECREMENTO      shift and go to state 28
    LCORCHETE       shift and go to state 29
    PTO             shift and go to state 30


state 19

    (22) expresionFor -> FOR . LPAREN forParameters RPAREN LCURLYB expresion RCURLYB

    LPAREN          shift and go to state 31


state 20

    (32) expresionWhile -> WHILE . LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB

    LPAREN          shift and go to state 32


state 21

    (33) expresionIf -> IF . LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB

    LPAREN          shift and go to state 33


state 22

    (79) print -> PRINT . LPAREN printVal RPAREN pto_coma

    LPAREN          shift and go to state 34


state 23

    (83) funcion -> VOID . ID LPAREN RPAREN final_key

    ID              shift and go to state 35


state 24

    (67) expMapa -> MAPA . ID EQUALS LCURLYB elementosMapa RCURLYB pto_coma

    ID              shift and go to state 36


state 25

    (12) expresion -> expresion expresion .
    (12) expresion -> expresion . expresion
    (1) expresion -> . lista
    (2) expresion -> . mapa
    (3) expresion -> . variable
    (4) expresion -> . expresionFor
    (5) expresion -> . expresionWhile
    (6) expresion -> . expresionIf
    (7) expresion -> . concatenacion
    (8) expresion -> . incremento
    (9) expresion -> . decremento
    (10) expresion -> . print
    (11) expresion -> . funcion
    (12) expresion -> . expresion expresion
    (47) lista -> . expLista
    (48) lista -> . add_lista
    (64) mapa -> . expMapa
    (65) mapa -> . add_mapa
    (13) variable -> . VAR ID EQUALS expresionVar PUNTCOM
    (14) variable -> . VAR ID PUNTCOM
    (15) variable -> . VAR ID EQUALS expresionBool PUNTCOM
    (22) expresionFor -> . FOR LPAREN forParameters RPAREN LCURLYB expresion RCURLYB
    (32) expresionWhile -> . WHILE LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB
    (33) expresionIf -> . IF LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB
    (78) concatenacion -> . VAR ID EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN pto_coma
    (76) incremento -> . ID INCREMENTO pto_coma
    (77) decremento -> . ID DECREMENTO pto_coma
    (79) print -> . PRINT LPAREN printVal RPAREN pto_coma
    (83) funcion -> . VOID ID LPAREN RPAREN final_key
    (49) expLista -> . VAR ID EQUALS NEW LISTA LPAREN inicializaLista RPAREN pto_coma
    (50) expLista -> . VAR ID EQUALS LCORCHETE elementosLista RCORCHETE pto_coma
    (53) add_lista -> . ID LCORCHETE NUMBER RCORCHETE EQUALS num_cadena pto_coma
    (54) add_lista -> . ID PTO ADD LPAREN elementoAddLista RPAREN pto_coma
    (66) expMapa -> . VAR ID EQUALS NEW MAPA LPAREN RPAREN pto_coma
    (67) expMapa -> . MAPA ID EQUALS LCURLYB elementosMapa RCURLYB pto_coma
    (70) add_mapa -> . ID LCORCHETE CADENA RCORCHETE EQUALS CADENA pto_coma

  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for MAPA resolved as shift
    $end            reduce using rule 12 (expresion -> expresion expresion .)
    RCURLYB         reduce using rule 12 (expresion -> expresion expresion .)
    VAR             shift and go to state 17
    FOR             shift and go to state 19
    WHILE           shift and go to state 20
    IF              shift and go to state 21
    ID              shift and go to state 18
    PRINT           shift and go to state 22
    VOID            shift and go to state 23
    MAPA            shift and go to state 24

  ! VAR             [ reduce using rule 12 (expresion -> expresion expresion .) ]
  ! FOR             [ reduce using rule 12 (expresion -> expresion expresion .) ]
  ! WHILE           [ reduce using rule 12 (expresion -> expresion expresion .) ]
  ! IF              [ reduce using rule 12 (expresion -> expresion expresion .) ]
  ! ID              [ reduce using rule 12 (expresion -> expresion expresion .) ]
  ! PRINT           [ reduce using rule 12 (expresion -> expresion expresion .) ]
  ! VOID            [ reduce using rule 12 (expresion -> expresion expresion .) ]
  ! MAPA            [ reduce using rule 12 (expresion -> expresion expresion .) ]

    expresion                      shift and go to state 25
    lista                          shift and go to state 2
    mapa                           shift and go to state 3
    variable                       shift and go to state 4
    expresionFor                   shift and go to state 5
    expresionWhile                 shift and go to state 6
    expresionIf                    shift and go to state 7
    concatenacion                  shift and go to state 8
    incremento                     shift and go to state 9
    decremento                     shift and go to state 10
    print                          shift and go to state 11
    funcion                        shift and go to state 12
    expLista                       shift and go to state 13
    add_lista                      shift and go to state 14
    expMapa                        shift and go to state 15
    add_mapa                       shift and go to state 16

state 26

    (13) variable -> VAR ID . EQUALS expresionVar PUNTCOM
    (14) variable -> VAR ID . PUNTCOM
    (15) variable -> VAR ID . EQUALS expresionBool PUNTCOM
    (78) concatenacion -> VAR ID . EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN pto_coma
    (49) expLista -> VAR ID . EQUALS NEW LISTA LPAREN inicializaLista RPAREN pto_coma
    (50) expLista -> VAR ID . EQUALS LCORCHETE elementosLista RCORCHETE pto_coma
    (66) expMapa -> VAR ID . EQUALS NEW MAPA LPAREN RPAREN pto_coma

    EQUALS          shift and go to state 37
    PUNTCOM         shift and go to state 38


state 27

    (76) incremento -> ID INCREMENTO . pto_coma
    (86) pto_coma -> . PUNTCOM

    PUNTCOM         shift and go to state 40

    pto_coma                       shift and go to state 39

state 28

    (77) decremento -> ID DECREMENTO . pto_coma
    (86) pto_coma -> . PUNTCOM

    PUNTCOM         shift and go to state 40

    pto_coma                       shift and go to state 41

state 29

    (53) add_lista -> ID LCORCHETE . NUMBER RCORCHETE EQUALS num_cadena pto_coma
    (70) add_mapa -> ID LCORCHETE . CADENA RCORCHETE EQUALS CADENA pto_coma

    NUMBER          shift and go to state 42
    CADENA          shift and go to state 43


state 30

    (54) add_lista -> ID PTO . ADD LPAREN elementoAddLista RPAREN pto_coma

    ADD             shift and go to state 44


state 31

    (22) expresionFor -> FOR LPAREN . forParameters RPAREN LCURLYB expresion RCURLYB
    (23) forParameters -> . forIterator PUNTCOM forCondition PUNTCOM forAction
    (24) forIterator -> . INT ID EQUALS NUMBER
    (25) forIterator -> . ID EQUALS NUMBER

    INT             shift and go to state 47
    ID              shift and go to state 48

    forParameters                  shift and go to state 45
    forIterator                    shift and go to state 46

state 32

    (32) expresionWhile -> WHILE LPAREN . expresionBool RPAREN LCURLYB expresion RCURLYB
    (34) expresionBool -> . booleano
    (35) expresionBool -> . ID comparador ID
    (36) expresionBool -> . ID comparador NUMBER
    (37) expresionBool -> . NUMBER comparador ID
    (38) expresionBool -> . NUMBER comparador NUMBER
    (39) expresionBool -> . expresionBool EQUIVAL expresionBool
    (40) booleano -> . TRUE
    (41) booleano -> . FALSE

    ID              shift and go to state 51
    NUMBER          shift and go to state 52
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54

    expresionBool                  shift and go to state 49
    booleano                       shift and go to state 50

state 33

    (33) expresionIf -> IF LPAREN . expresionBool RPAREN LCURLYB expresion RCURLYB
    (34) expresionBool -> . booleano
    (35) expresionBool -> . ID comparador ID
    (36) expresionBool -> . ID comparador NUMBER
    (37) expresionBool -> . NUMBER comparador ID
    (38) expresionBool -> . NUMBER comparador NUMBER
    (39) expresionBool -> . expresionBool EQUIVAL expresionBool
    (40) booleano -> . TRUE
    (41) booleano -> . FALSE

    ID              shift and go to state 51
    NUMBER          shift and go to state 52
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54

    expresionBool                  shift and go to state 55
    booleano                       shift and go to state 50

state 34

    (79) print -> PRINT LPAREN . printVal RPAREN pto_coma
    (80) printVal -> . ID
    (81) printVal -> . valorVar
    (82) printVal -> . expresionBool
    (16) valorVar -> . NUMBER
    (17) valorVar -> . DOUBLE
    (18) valorVar -> . CADENA
    (34) expresionBool -> . booleano
    (35) expresionBool -> . ID comparador ID
    (36) expresionBool -> . ID comparador NUMBER
    (37) expresionBool -> . NUMBER comparador ID
    (38) expresionBool -> . NUMBER comparador NUMBER
    (39) expresionBool -> . expresionBool EQUIVAL expresionBool
    (40) booleano -> . TRUE
    (41) booleano -> . FALSE

    ID              shift and go to state 57
    NUMBER          shift and go to state 60
    DOUBLE          shift and go to state 61
    CADENA          shift and go to state 62
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54

    printVal                       shift and go to state 56
    valorVar                       shift and go to state 58
    expresionBool                  shift and go to state 59
    booleano                       shift and go to state 50

state 35

    (83) funcion -> VOID ID . LPAREN RPAREN final_key

    LPAREN          shift and go to state 63


state 36

    (67) expMapa -> MAPA ID . EQUALS LCURLYB elementosMapa RCURLYB pto_coma

    EQUALS          shift and go to state 64


state 37

    (13) variable -> VAR ID EQUALS . expresionVar PUNTCOM
    (15) variable -> VAR ID EQUALS . expresionBool PUNTCOM
    (78) concatenacion -> VAR ID EQUALS . ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN pto_coma
    (49) expLista -> VAR ID EQUALS . NEW LISTA LPAREN inicializaLista RPAREN pto_coma
    (50) expLista -> VAR ID EQUALS . LCORCHETE elementosLista RCORCHETE pto_coma
    (66) expMapa -> VAR ID EQUALS . NEW MAPA LPAREN RPAREN pto_coma
    (19) expresionVar -> . valorVar
    (20) expresionVar -> . ID
    (21) expresionVar -> . expresionVar operadorA expresionVar
    (34) expresionBool -> . booleano
    (35) expresionBool -> . ID comparador ID
    (36) expresionBool -> . ID comparador NUMBER
    (37) expresionBool -> . NUMBER comparador ID
    (38) expresionBool -> . NUMBER comparador NUMBER
    (39) expresionBool -> . expresionBool EQUIVAL expresionBool
    (16) valorVar -> . NUMBER
    (17) valorVar -> . DOUBLE
    (18) valorVar -> . CADENA
    (40) booleano -> . TRUE
    (41) booleano -> . FALSE

    ID              shift and go to state 65
    NEW             shift and go to state 69
    LCORCHETE       shift and go to state 70
    NUMBER          shift and go to state 68
    DOUBLE          shift and go to state 61
    CADENA          shift and go to state 62
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54

    expresionVar                   shift and go to state 66
    expresionBool                  shift and go to state 67
    valorVar                       shift and go to state 71
    booleano                       shift and go to state 50

state 38

    (14) variable -> VAR ID PUNTCOM .

    VAR             reduce using rule 14 (variable -> VAR ID PUNTCOM .)
    FOR             reduce using rule 14 (variable -> VAR ID PUNTCOM .)
    WHILE           reduce using rule 14 (variable -> VAR ID PUNTCOM .)
    IF              reduce using rule 14 (variable -> VAR ID PUNTCOM .)
    ID              reduce using rule 14 (variable -> VAR ID PUNTCOM .)
    PRINT           reduce using rule 14 (variable -> VAR ID PUNTCOM .)
    VOID            reduce using rule 14 (variable -> VAR ID PUNTCOM .)
    MAPA            reduce using rule 14 (variable -> VAR ID PUNTCOM .)
    $end            reduce using rule 14 (variable -> VAR ID PUNTCOM .)
    RCURLYB         reduce using rule 14 (variable -> VAR ID PUNTCOM .)


state 39

    (76) incremento -> ID INCREMENTO pto_coma .

    VAR             reduce using rule 76 (incremento -> ID INCREMENTO pto_coma .)
    FOR             reduce using rule 76 (incremento -> ID INCREMENTO pto_coma .)
    WHILE           reduce using rule 76 (incremento -> ID INCREMENTO pto_coma .)
    IF              reduce using rule 76 (incremento -> ID INCREMENTO pto_coma .)
    ID              reduce using rule 76 (incremento -> ID INCREMENTO pto_coma .)
    PRINT           reduce using rule 76 (incremento -> ID INCREMENTO pto_coma .)
    VOID            reduce using rule 76 (incremento -> ID INCREMENTO pto_coma .)
    MAPA            reduce using rule 76 (incremento -> ID INCREMENTO pto_coma .)
    $end            reduce using rule 76 (incremento -> ID INCREMENTO pto_coma .)
    RCURLYB         reduce using rule 76 (incremento -> ID INCREMENTO pto_coma .)


state 40

    (86) pto_coma -> PUNTCOM .

    VAR             reduce using rule 86 (pto_coma -> PUNTCOM .)
    FOR             reduce using rule 86 (pto_coma -> PUNTCOM .)
    WHILE           reduce using rule 86 (pto_coma -> PUNTCOM .)
    IF              reduce using rule 86 (pto_coma -> PUNTCOM .)
    ID              reduce using rule 86 (pto_coma -> PUNTCOM .)
    PRINT           reduce using rule 86 (pto_coma -> PUNTCOM .)
    VOID            reduce using rule 86 (pto_coma -> PUNTCOM .)
    MAPA            reduce using rule 86 (pto_coma -> PUNTCOM .)
    $end            reduce using rule 86 (pto_coma -> PUNTCOM .)
    RCURLYB         reduce using rule 86 (pto_coma -> PUNTCOM .)


state 41

    (77) decremento -> ID DECREMENTO pto_coma .

    VAR             reduce using rule 77 (decremento -> ID DECREMENTO pto_coma .)
    FOR             reduce using rule 77 (decremento -> ID DECREMENTO pto_coma .)
    WHILE           reduce using rule 77 (decremento -> ID DECREMENTO pto_coma .)
    IF              reduce using rule 77 (decremento -> ID DECREMENTO pto_coma .)
    ID              reduce using rule 77 (decremento -> ID DECREMENTO pto_coma .)
    PRINT           reduce using rule 77 (decremento -> ID DECREMENTO pto_coma .)
    VOID            reduce using rule 77 (decremento -> ID DECREMENTO pto_coma .)
    MAPA            reduce using rule 77 (decremento -> ID DECREMENTO pto_coma .)
    $end            reduce using rule 77 (decremento -> ID DECREMENTO pto_coma .)
    RCURLYB         reduce using rule 77 (decremento -> ID DECREMENTO pto_coma .)


state 42

    (53) add_lista -> ID LCORCHETE NUMBER . RCORCHETE EQUALS num_cadena pto_coma

    RCORCHETE       shift and go to state 72


state 43

    (70) add_mapa -> ID LCORCHETE CADENA . RCORCHETE EQUALS CADENA pto_coma

    RCORCHETE       shift and go to state 73


state 44

    (54) add_lista -> ID PTO ADD . LPAREN elementoAddLista RPAREN pto_coma

    LPAREN          shift and go to state 74


state 45

    (22) expresionFor -> FOR LPAREN forParameters . RPAREN LCURLYB expresion RCURLYB

    RPAREN          shift and go to state 75


state 46

    (23) forParameters -> forIterator . PUNTCOM forCondition PUNTCOM forAction

    PUNTCOM         shift and go to state 76


state 47

    (24) forIterator -> INT . ID EQUALS NUMBER

    ID              shift and go to state 77


state 48

    (25) forIterator -> ID . EQUALS NUMBER

    EQUALS          shift and go to state 78


state 49

    (32) expresionWhile -> WHILE LPAREN expresionBool . RPAREN LCURLYB expresion RCURLYB
    (39) expresionBool -> expresionBool . EQUIVAL expresionBool

    RPAREN          shift and go to state 79
    EQUIVAL         shift and go to state 80


state 50

    (34) expresionBool -> booleano .

    RPAREN          reduce using rule 34 (expresionBool -> booleano .)
    EQUIVAL         reduce using rule 34 (expresionBool -> booleano .)
    PUNTCOM         reduce using rule 34 (expresionBool -> booleano .)


state 51

    (35) expresionBool -> ID . comparador ID
    (36) expresionBool -> ID . comparador NUMBER
    (42) comparador -> . MAYORQUE
    (43) comparador -> . MENORQUE
    (44) comparador -> . EQUIVAL
    (45) comparador -> . MINEQ
    (46) comparador -> . MAYEQ

    MAYORQUE        shift and go to state 82
    MENORQUE        shift and go to state 83
    EQUIVAL         shift and go to state 84
    MINEQ           shift and go to state 85
    MAYEQ           shift and go to state 86

    comparador                     shift and go to state 81

state 52

    (37) expresionBool -> NUMBER . comparador ID
    (38) expresionBool -> NUMBER . comparador NUMBER
    (42) comparador -> . MAYORQUE
    (43) comparador -> . MENORQUE
    (44) comparador -> . EQUIVAL
    (45) comparador -> . MINEQ
    (46) comparador -> . MAYEQ

    MAYORQUE        shift and go to state 82
    MENORQUE        shift and go to state 83
    EQUIVAL         shift and go to state 84
    MINEQ           shift and go to state 85
    MAYEQ           shift and go to state 86

    comparador                     shift and go to state 87

state 53

    (40) booleano -> TRUE .

    RPAREN          reduce using rule 40 (booleano -> TRUE .)
    EQUIVAL         reduce using rule 40 (booleano -> TRUE .)
    PUNTCOM         reduce using rule 40 (booleano -> TRUE .)


state 54

    (41) booleano -> FALSE .

    RPAREN          reduce using rule 41 (booleano -> FALSE .)
    EQUIVAL         reduce using rule 41 (booleano -> FALSE .)
    PUNTCOM         reduce using rule 41 (booleano -> FALSE .)


state 55

    (33) expresionIf -> IF LPAREN expresionBool . RPAREN LCURLYB expresion RCURLYB
    (39) expresionBool -> expresionBool . EQUIVAL expresionBool

    RPAREN          shift and go to state 88
    EQUIVAL         shift and go to state 80


state 56

    (79) print -> PRINT LPAREN printVal . RPAREN pto_coma

    RPAREN          shift and go to state 89


state 57

    (80) printVal -> ID .
    (35) expresionBool -> ID . comparador ID
    (36) expresionBool -> ID . comparador NUMBER
    (42) comparador -> . MAYORQUE
    (43) comparador -> . MENORQUE
    (44) comparador -> . EQUIVAL
    (45) comparador -> . MINEQ
    (46) comparador -> . MAYEQ

    RPAREN          reduce using rule 80 (printVal -> ID .)
    MAYORQUE        shift and go to state 82
    MENORQUE        shift and go to state 83
    EQUIVAL         shift and go to state 84
    MINEQ           shift and go to state 85
    MAYEQ           shift and go to state 86

    comparador                     shift and go to state 81

state 58

    (81) printVal -> valorVar .

    RPAREN          reduce using rule 81 (printVal -> valorVar .)


state 59

    (82) printVal -> expresionBool .
    (39) expresionBool -> expresionBool . EQUIVAL expresionBool

    RPAREN          reduce using rule 82 (printVal -> expresionBool .)
    EQUIVAL         shift and go to state 80


state 60

    (16) valorVar -> NUMBER .
    (37) expresionBool -> NUMBER . comparador ID
    (38) expresionBool -> NUMBER . comparador NUMBER
    (42) comparador -> . MAYORQUE
    (43) comparador -> . MENORQUE
    (44) comparador -> . EQUIVAL
    (45) comparador -> . MINEQ
    (46) comparador -> . MAYEQ

    RPAREN          reduce using rule 16 (valorVar -> NUMBER .)
    MAYORQUE        shift and go to state 82
    MENORQUE        shift and go to state 83
    EQUIVAL         shift and go to state 84
    MINEQ           shift and go to state 85
    MAYEQ           shift and go to state 86

    comparador                     shift and go to state 87

state 61

    (17) valorVar -> DOUBLE .

    RPAREN          reduce using rule 17 (valorVar -> DOUBLE .)
    PUNTCOM         reduce using rule 17 (valorVar -> DOUBLE .)
    PLUS            reduce using rule 17 (valorVar -> DOUBLE .)
    MINUS           reduce using rule 17 (valorVar -> DOUBLE .)
    TIMES           reduce using rule 17 (valorVar -> DOUBLE .)
    DIVIDE          reduce using rule 17 (valorVar -> DOUBLE .)
    DIVIDE_E        reduce using rule 17 (valorVar -> DOUBLE .)


state 62

    (18) valorVar -> CADENA .

    RPAREN          reduce using rule 18 (valorVar -> CADENA .)
    PUNTCOM         reduce using rule 18 (valorVar -> CADENA .)
    PLUS            reduce using rule 18 (valorVar -> CADENA .)
    MINUS           reduce using rule 18 (valorVar -> CADENA .)
    TIMES           reduce using rule 18 (valorVar -> CADENA .)
    DIVIDE          reduce using rule 18 (valorVar -> CADENA .)
    DIVIDE_E        reduce using rule 18 (valorVar -> CADENA .)


state 63

    (83) funcion -> VOID ID LPAREN . RPAREN final_key

    RPAREN          shift and go to state 90


state 64

    (67) expMapa -> MAPA ID EQUALS . LCURLYB elementosMapa RCURLYB pto_coma

    LCURLYB         shift and go to state 91


state 65

    (78) concatenacion -> VAR ID EQUALS ID . PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN pto_coma
    (20) expresionVar -> ID .
    (35) expresionBool -> ID . comparador ID
    (36) expresionBool -> ID . comparador NUMBER
    (42) comparador -> . MAYORQUE
    (43) comparador -> . MENORQUE
    (44) comparador -> . EQUIVAL
    (45) comparador -> . MINEQ
    (46) comparador -> . MAYEQ

    PTO             shift and go to state 92
    PUNTCOM         reduce using rule 20 (expresionVar -> ID .)
    PLUS            reduce using rule 20 (expresionVar -> ID .)
    MINUS           reduce using rule 20 (expresionVar -> ID .)
    TIMES           reduce using rule 20 (expresionVar -> ID .)
    DIVIDE          reduce using rule 20 (expresionVar -> ID .)
    DIVIDE_E        reduce using rule 20 (expresionVar -> ID .)
    MAYORQUE        shift and go to state 82
    MENORQUE        shift and go to state 83
    EQUIVAL         shift and go to state 84
    MINEQ           shift and go to state 85
    MAYEQ           shift and go to state 86

    comparador                     shift and go to state 81

state 66

    (13) variable -> VAR ID EQUALS expresionVar . PUNTCOM
    (21) expresionVar -> expresionVar . operadorA expresionVar
    (71) operadorA -> . PLUS
    (72) operadorA -> . MINUS
    (73) operadorA -> . TIMES
    (74) operadorA -> . DIVIDE
    (75) operadorA -> . DIVIDE_E

    PUNTCOM         shift and go to state 93
    PLUS            shift and go to state 95
    MINUS           shift and go to state 96
    TIMES           shift and go to state 97
    DIVIDE          shift and go to state 98
    DIVIDE_E        shift and go to state 99

    operadorA                      shift and go to state 94

state 67

    (15) variable -> VAR ID EQUALS expresionBool . PUNTCOM
    (39) expresionBool -> expresionBool . EQUIVAL expresionBool

    PUNTCOM         shift and go to state 100
    EQUIVAL         shift and go to state 80


state 68

    (37) expresionBool -> NUMBER . comparador ID
    (38) expresionBool -> NUMBER . comparador NUMBER
    (16) valorVar -> NUMBER .
    (42) comparador -> . MAYORQUE
    (43) comparador -> . MENORQUE
    (44) comparador -> . EQUIVAL
    (45) comparador -> . MINEQ
    (46) comparador -> . MAYEQ

    PUNTCOM         reduce using rule 16 (valorVar -> NUMBER .)
    PLUS            reduce using rule 16 (valorVar -> NUMBER .)
    MINUS           reduce using rule 16 (valorVar -> NUMBER .)
    TIMES           reduce using rule 16 (valorVar -> NUMBER .)
    DIVIDE          reduce using rule 16 (valorVar -> NUMBER .)
    DIVIDE_E        reduce using rule 16 (valorVar -> NUMBER .)
    MAYORQUE        shift and go to state 82
    MENORQUE        shift and go to state 83
    EQUIVAL         shift and go to state 84
    MINEQ           shift and go to state 85
    MAYEQ           shift and go to state 86

    comparador                     shift and go to state 87

state 69

    (49) expLista -> VAR ID EQUALS NEW . LISTA LPAREN inicializaLista RPAREN pto_coma
    (66) expMapa -> VAR ID EQUALS NEW . MAPA LPAREN RPAREN pto_coma

    LISTA           shift and go to state 101
    MAPA            shift and go to state 102


state 70

    (50) expLista -> VAR ID EQUALS LCORCHETE . elementosLista RCORCHETE pto_coma
    (59) elementosLista -> . CADENA
    (60) elementosLista -> . NUMBER
    (61) elementosLista -> . CADENA COMA elementosLista
    (62) elementosLista -> . NUMBER COMA elementosLista
    (63) elementosLista -> .

    CADENA          shift and go to state 104
    NUMBER          shift and go to state 105
    RCORCHETE       reduce using rule 63 (elementosLista -> .)

    elementosLista                 shift and go to state 103

state 71

    (19) expresionVar -> valorVar .

    PUNTCOM         reduce using rule 19 (expresionVar -> valorVar .)
    PLUS            reduce using rule 19 (expresionVar -> valorVar .)
    MINUS           reduce using rule 19 (expresionVar -> valorVar .)
    TIMES           reduce using rule 19 (expresionVar -> valorVar .)
    DIVIDE          reduce using rule 19 (expresionVar -> valorVar .)
    DIVIDE_E        reduce using rule 19 (expresionVar -> valorVar .)


state 72

    (53) add_lista -> ID LCORCHETE NUMBER RCORCHETE . EQUALS num_cadena pto_coma

    EQUALS          shift and go to state 106


state 73

    (70) add_mapa -> ID LCORCHETE CADENA RCORCHETE . EQUALS CADENA pto_coma

    EQUALS          shift and go to state 107


state 74

    (54) add_lista -> ID PTO ADD LPAREN . elementoAddLista RPAREN pto_coma
    (55) elementoAddLista -> . num_cadena
    (56) elementoAddLista -> . booleano
    (57) num_cadena -> . NUMBER
    (58) num_cadena -> . CADENA
    (40) booleano -> . TRUE
    (41) booleano -> . FALSE

    NUMBER          shift and go to state 111
    CADENA          shift and go to state 112
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54

    elementoAddLista               shift and go to state 108
    num_cadena                     shift and go to state 109
    booleano                       shift and go to state 110

state 75

    (22) expresionFor -> FOR LPAREN forParameters RPAREN . LCURLYB expresion RCURLYB

    LCURLYB         shift and go to state 113


state 76

    (23) forParameters -> forIterator PUNTCOM . forCondition PUNTCOM forAction
    (26) forCondition -> . ID MAYORQUE NUMBER
    (27) forCondition -> . ID MENORQUE NUMBER

    ID              shift and go to state 115

    forCondition                   shift and go to state 114

state 77

    (24) forIterator -> INT ID . EQUALS NUMBER

    EQUALS          shift and go to state 116


state 78

    (25) forIterator -> ID EQUALS . NUMBER

    NUMBER          shift and go to state 117


state 79

    (32) expresionWhile -> WHILE LPAREN expresionBool RPAREN . LCURLYB expresion RCURLYB

    LCURLYB         shift and go to state 118


state 80

    (39) expresionBool -> expresionBool EQUIVAL . expresionBool
    (34) expresionBool -> . booleano
    (35) expresionBool -> . ID comparador ID
    (36) expresionBool -> . ID comparador NUMBER
    (37) expresionBool -> . NUMBER comparador ID
    (38) expresionBool -> . NUMBER comparador NUMBER
    (39) expresionBool -> . expresionBool EQUIVAL expresionBool
    (40) booleano -> . TRUE
    (41) booleano -> . FALSE

    ID              shift and go to state 51
    NUMBER          shift and go to state 52
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54

    expresionBool                  shift and go to state 119
    booleano                       shift and go to state 50

state 81

    (35) expresionBool -> ID comparador . ID
    (36) expresionBool -> ID comparador . NUMBER

    ID              shift and go to state 120
    NUMBER          shift and go to state 121


state 82

    (42) comparador -> MAYORQUE .

    ID              reduce using rule 42 (comparador -> MAYORQUE .)
    NUMBER          reduce using rule 42 (comparador -> MAYORQUE .)


state 83

    (43) comparador -> MENORQUE .

    ID              reduce using rule 43 (comparador -> MENORQUE .)
    NUMBER          reduce using rule 43 (comparador -> MENORQUE .)


state 84

    (44) comparador -> EQUIVAL .

    ID              reduce using rule 44 (comparador -> EQUIVAL .)
    NUMBER          reduce using rule 44 (comparador -> EQUIVAL .)


state 85

    (45) comparador -> MINEQ .

    ID              reduce using rule 45 (comparador -> MINEQ .)
    NUMBER          reduce using rule 45 (comparador -> MINEQ .)


state 86

    (46) comparador -> MAYEQ .

    ID              reduce using rule 46 (comparador -> MAYEQ .)
    NUMBER          reduce using rule 46 (comparador -> MAYEQ .)


state 87

    (37) expresionBool -> NUMBER comparador . ID
    (38) expresionBool -> NUMBER comparador . NUMBER

    ID              shift and go to state 123
    NUMBER          shift and go to state 122


state 88

    (33) expresionIf -> IF LPAREN expresionBool RPAREN . LCURLYB expresion RCURLYB

    LCURLYB         shift and go to state 124


state 89

    (79) print -> PRINT LPAREN printVal RPAREN . pto_coma
    (86) pto_coma -> . PUNTCOM

    PUNTCOM         shift and go to state 40

    pto_coma                       shift and go to state 125

state 90

    (83) funcion -> VOID ID LPAREN RPAREN . final_key
    (84) final_key -> . LCURLYB expresion RCURLYB
    (85) final_key -> . LCURLYB RCURLYB

    LCURLYB         shift and go to state 127

    final_key                      shift and go to state 126

state 91

    (67) expMapa -> MAPA ID EQUALS LCURLYB . elementosMapa RCURLYB pto_coma
    (68) elementosMapa -> . num_cadena DOSPTO num_cadena
    (69) elementosMapa -> . num_cadena DOSPTO num_cadena COMA elementosMapa
    (57) num_cadena -> . NUMBER
    (58) num_cadena -> . CADENA

    NUMBER          shift and go to state 111
    CADENA          shift and go to state 112

    elementosMapa                  shift and go to state 128
    num_cadena                     shift and go to state 129

state 92

    (78) concatenacion -> VAR ID EQUALS ID PTO . SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN pto_coma

    SUBSTRING       shift and go to state 130


state 93

    (13) variable -> VAR ID EQUALS expresionVar PUNTCOM .

    VAR             reduce using rule 13 (variable -> VAR ID EQUALS expresionVar PUNTCOM .)
    FOR             reduce using rule 13 (variable -> VAR ID EQUALS expresionVar PUNTCOM .)
    WHILE           reduce using rule 13 (variable -> VAR ID EQUALS expresionVar PUNTCOM .)
    IF              reduce using rule 13 (variable -> VAR ID EQUALS expresionVar PUNTCOM .)
    ID              reduce using rule 13 (variable -> VAR ID EQUALS expresionVar PUNTCOM .)
    PRINT           reduce using rule 13 (variable -> VAR ID EQUALS expresionVar PUNTCOM .)
    VOID            reduce using rule 13 (variable -> VAR ID EQUALS expresionVar PUNTCOM .)
    MAPA            reduce using rule 13 (variable -> VAR ID EQUALS expresionVar PUNTCOM .)
    $end            reduce using rule 13 (variable -> VAR ID EQUALS expresionVar PUNTCOM .)
    RCURLYB         reduce using rule 13 (variable -> VAR ID EQUALS expresionVar PUNTCOM .)


state 94

    (21) expresionVar -> expresionVar operadorA . expresionVar
    (19) expresionVar -> . valorVar
    (20) expresionVar -> . ID
    (21) expresionVar -> . expresionVar operadorA expresionVar
    (16) valorVar -> . NUMBER
    (17) valorVar -> . DOUBLE
    (18) valorVar -> . CADENA

    ID              shift and go to state 132
    NUMBER          shift and go to state 133
    DOUBLE          shift and go to state 61
    CADENA          shift and go to state 62

    expresionVar                   shift and go to state 131
    valorVar                       shift and go to state 71

state 95

    (71) operadorA -> PLUS .

    ID              reduce using rule 71 (operadorA -> PLUS .)
    NUMBER          reduce using rule 71 (operadorA -> PLUS .)
    DOUBLE          reduce using rule 71 (operadorA -> PLUS .)
    CADENA          reduce using rule 71 (operadorA -> PLUS .)


state 96

    (72) operadorA -> MINUS .

    ID              reduce using rule 72 (operadorA -> MINUS .)
    NUMBER          reduce using rule 72 (operadorA -> MINUS .)
    DOUBLE          reduce using rule 72 (operadorA -> MINUS .)
    CADENA          reduce using rule 72 (operadorA -> MINUS .)


state 97

    (73) operadorA -> TIMES .

    ID              reduce using rule 73 (operadorA -> TIMES .)
    NUMBER          reduce using rule 73 (operadorA -> TIMES .)
    DOUBLE          reduce using rule 73 (operadorA -> TIMES .)
    CADENA          reduce using rule 73 (operadorA -> TIMES .)


state 98

    (74) operadorA -> DIVIDE .

    ID              reduce using rule 74 (operadorA -> DIVIDE .)
    NUMBER          reduce using rule 74 (operadorA -> DIVIDE .)
    DOUBLE          reduce using rule 74 (operadorA -> DIVIDE .)
    CADENA          reduce using rule 74 (operadorA -> DIVIDE .)


state 99

    (75) operadorA -> DIVIDE_E .

    ID              reduce using rule 75 (operadorA -> DIVIDE_E .)
    NUMBER          reduce using rule 75 (operadorA -> DIVIDE_E .)
    DOUBLE          reduce using rule 75 (operadorA -> DIVIDE_E .)
    CADENA          reduce using rule 75 (operadorA -> DIVIDE_E .)


state 100

    (15) variable -> VAR ID EQUALS expresionBool PUNTCOM .

    VAR             reduce using rule 15 (variable -> VAR ID EQUALS expresionBool PUNTCOM .)
    FOR             reduce using rule 15 (variable -> VAR ID EQUALS expresionBool PUNTCOM .)
    WHILE           reduce using rule 15 (variable -> VAR ID EQUALS expresionBool PUNTCOM .)
    IF              reduce using rule 15 (variable -> VAR ID EQUALS expresionBool PUNTCOM .)
    ID              reduce using rule 15 (variable -> VAR ID EQUALS expresionBool PUNTCOM .)
    PRINT           reduce using rule 15 (variable -> VAR ID EQUALS expresionBool PUNTCOM .)
    VOID            reduce using rule 15 (variable -> VAR ID EQUALS expresionBool PUNTCOM .)
    MAPA            reduce using rule 15 (variable -> VAR ID EQUALS expresionBool PUNTCOM .)
    $end            reduce using rule 15 (variable -> VAR ID EQUALS expresionBool PUNTCOM .)
    RCURLYB         reduce using rule 15 (variable -> VAR ID EQUALS expresionBool PUNTCOM .)


state 101

    (49) expLista -> VAR ID EQUALS NEW LISTA . LPAREN inicializaLista RPAREN pto_coma

    LPAREN          shift and go to state 134


state 102

    (66) expMapa -> VAR ID EQUALS NEW MAPA . LPAREN RPAREN pto_coma

    LPAREN          shift and go to state 135


state 103

    (50) expLista -> VAR ID EQUALS LCORCHETE elementosLista . RCORCHETE pto_coma

    RCORCHETE       shift and go to state 136


state 104

    (59) elementosLista -> CADENA .
    (61) elementosLista -> CADENA . COMA elementosLista

    RCORCHETE       reduce using rule 59 (elementosLista -> CADENA .)
    COMA            shift and go to state 137


state 105

    (60) elementosLista -> NUMBER .
    (62) elementosLista -> NUMBER . COMA elementosLista

    RCORCHETE       reduce using rule 60 (elementosLista -> NUMBER .)
    COMA            shift and go to state 138


state 106

    (53) add_lista -> ID LCORCHETE NUMBER RCORCHETE EQUALS . num_cadena pto_coma
    (57) num_cadena -> . NUMBER
    (58) num_cadena -> . CADENA

    NUMBER          shift and go to state 111
    CADENA          shift and go to state 112

    num_cadena                     shift and go to state 139

state 107

    (70) add_mapa -> ID LCORCHETE CADENA RCORCHETE EQUALS . CADENA pto_coma

    CADENA          shift and go to state 140


state 108

    (54) add_lista -> ID PTO ADD LPAREN elementoAddLista . RPAREN pto_coma

    RPAREN          shift and go to state 141


state 109

    (55) elementoAddLista -> num_cadena .

    RPAREN          reduce using rule 55 (elementoAddLista -> num_cadena .)


state 110

    (56) elementoAddLista -> booleano .

    RPAREN          reduce using rule 56 (elementoAddLista -> booleano .)


state 111

    (57) num_cadena -> NUMBER .

    RPAREN          reduce using rule 57 (num_cadena -> NUMBER .)
    DOSPTO          reduce using rule 57 (num_cadena -> NUMBER .)
    PUNTCOM         reduce using rule 57 (num_cadena -> NUMBER .)
    COMA            reduce using rule 57 (num_cadena -> NUMBER .)
    RCURLYB         reduce using rule 57 (num_cadena -> NUMBER .)


state 112

    (58) num_cadena -> CADENA .

    RPAREN          reduce using rule 58 (num_cadena -> CADENA .)
    DOSPTO          reduce using rule 58 (num_cadena -> CADENA .)
    PUNTCOM         reduce using rule 58 (num_cadena -> CADENA .)
    COMA            reduce using rule 58 (num_cadena -> CADENA .)
    RCURLYB         reduce using rule 58 (num_cadena -> CADENA .)


state 113

    (22) expresionFor -> FOR LPAREN forParameters RPAREN LCURLYB . expresion RCURLYB
    (1) expresion -> . lista
    (2) expresion -> . mapa
    (3) expresion -> . variable
    (4) expresion -> . expresionFor
    (5) expresion -> . expresionWhile
    (6) expresion -> . expresionIf
    (7) expresion -> . concatenacion
    (8) expresion -> . incremento
    (9) expresion -> . decremento
    (10) expresion -> . print
    (11) expresion -> . funcion
    (12) expresion -> . expresion expresion
    (47) lista -> . expLista
    (48) lista -> . add_lista
    (64) mapa -> . expMapa
    (65) mapa -> . add_mapa
    (13) variable -> . VAR ID EQUALS expresionVar PUNTCOM
    (14) variable -> . VAR ID PUNTCOM
    (15) variable -> . VAR ID EQUALS expresionBool PUNTCOM
    (22) expresionFor -> . FOR LPAREN forParameters RPAREN LCURLYB expresion RCURLYB
    (32) expresionWhile -> . WHILE LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB
    (33) expresionIf -> . IF LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB
    (78) concatenacion -> . VAR ID EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN pto_coma
    (76) incremento -> . ID INCREMENTO pto_coma
    (77) decremento -> . ID DECREMENTO pto_coma
    (79) print -> . PRINT LPAREN printVal RPAREN pto_coma
    (83) funcion -> . VOID ID LPAREN RPAREN final_key
    (49) expLista -> . VAR ID EQUALS NEW LISTA LPAREN inicializaLista RPAREN pto_coma
    (50) expLista -> . VAR ID EQUALS LCORCHETE elementosLista RCORCHETE pto_coma
    (53) add_lista -> . ID LCORCHETE NUMBER RCORCHETE EQUALS num_cadena pto_coma
    (54) add_lista -> . ID PTO ADD LPAREN elementoAddLista RPAREN pto_coma
    (66) expMapa -> . VAR ID EQUALS NEW MAPA LPAREN RPAREN pto_coma
    (67) expMapa -> . MAPA ID EQUALS LCURLYB elementosMapa RCURLYB pto_coma
    (70) add_mapa -> . ID LCORCHETE CADENA RCORCHETE EQUALS CADENA pto_coma

    VAR             shift and go to state 17
    FOR             shift and go to state 19
    WHILE           shift and go to state 20
    IF              shift and go to state 21
    ID              shift and go to state 18
    PRINT           shift and go to state 22
    VOID            shift and go to state 23
    MAPA            shift and go to state 24

    expresion                      shift and go to state 142
    lista                          shift and go to state 2
    mapa                           shift and go to state 3
    variable                       shift and go to state 4
    expresionFor                   shift and go to state 5
    expresionWhile                 shift and go to state 6
    expresionIf                    shift and go to state 7
    concatenacion                  shift and go to state 8
    incremento                     shift and go to state 9
    decremento                     shift and go to state 10
    print                          shift and go to state 11
    funcion                        shift and go to state 12
    expLista                       shift and go to state 13
    add_lista                      shift and go to state 14
    expMapa                        shift and go to state 15
    add_mapa                       shift and go to state 16

state 114

    (23) forParameters -> forIterator PUNTCOM forCondition . PUNTCOM forAction

    PUNTCOM         shift and go to state 143


state 115

    (26) forCondition -> ID . MAYORQUE NUMBER
    (27) forCondition -> ID . MENORQUE NUMBER

    MAYORQUE        shift and go to state 144
    MENORQUE        shift and go to state 145


state 116

    (24) forIterator -> INT ID EQUALS . NUMBER

    NUMBER          shift and go to state 146


state 117

    (25) forIterator -> ID EQUALS NUMBER .

    PUNTCOM         reduce using rule 25 (forIterator -> ID EQUALS NUMBER .)


state 118

    (32) expresionWhile -> WHILE LPAREN expresionBool RPAREN LCURLYB . expresion RCURLYB
    (1) expresion -> . lista
    (2) expresion -> . mapa
    (3) expresion -> . variable
    (4) expresion -> . expresionFor
    (5) expresion -> . expresionWhile
    (6) expresion -> . expresionIf
    (7) expresion -> . concatenacion
    (8) expresion -> . incremento
    (9) expresion -> . decremento
    (10) expresion -> . print
    (11) expresion -> . funcion
    (12) expresion -> . expresion expresion
    (47) lista -> . expLista
    (48) lista -> . add_lista
    (64) mapa -> . expMapa
    (65) mapa -> . add_mapa
    (13) variable -> . VAR ID EQUALS expresionVar PUNTCOM
    (14) variable -> . VAR ID PUNTCOM
    (15) variable -> . VAR ID EQUALS expresionBool PUNTCOM
    (22) expresionFor -> . FOR LPAREN forParameters RPAREN LCURLYB expresion RCURLYB
    (32) expresionWhile -> . WHILE LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB
    (33) expresionIf -> . IF LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB
    (78) concatenacion -> . VAR ID EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN pto_coma
    (76) incremento -> . ID INCREMENTO pto_coma
    (77) decremento -> . ID DECREMENTO pto_coma
    (79) print -> . PRINT LPAREN printVal RPAREN pto_coma
    (83) funcion -> . VOID ID LPAREN RPAREN final_key
    (49) expLista -> . VAR ID EQUALS NEW LISTA LPAREN inicializaLista RPAREN pto_coma
    (50) expLista -> . VAR ID EQUALS LCORCHETE elementosLista RCORCHETE pto_coma
    (53) add_lista -> . ID LCORCHETE NUMBER RCORCHETE EQUALS num_cadena pto_coma
    (54) add_lista -> . ID PTO ADD LPAREN elementoAddLista RPAREN pto_coma
    (66) expMapa -> . VAR ID EQUALS NEW MAPA LPAREN RPAREN pto_coma
    (67) expMapa -> . MAPA ID EQUALS LCURLYB elementosMapa RCURLYB pto_coma
    (70) add_mapa -> . ID LCORCHETE CADENA RCORCHETE EQUALS CADENA pto_coma

    VAR             shift and go to state 17
    FOR             shift and go to state 19
    WHILE           shift and go to state 20
    IF              shift and go to state 21
    ID              shift and go to state 18
    PRINT           shift and go to state 22
    VOID            shift and go to state 23
    MAPA            shift and go to state 24

    expresion                      shift and go to state 147
    lista                          shift and go to state 2
    mapa                           shift and go to state 3
    variable                       shift and go to state 4
    expresionFor                   shift and go to state 5
    expresionWhile                 shift and go to state 6
    expresionIf                    shift and go to state 7
    concatenacion                  shift and go to state 8
    incremento                     shift and go to state 9
    decremento                     shift and go to state 10
    print                          shift and go to state 11
    funcion                        shift and go to state 12
    expLista                       shift and go to state 13
    add_lista                      shift and go to state 14
    expMapa                        shift and go to state 15
    add_mapa                       shift and go to state 16

state 119

    (39) expresionBool -> expresionBool EQUIVAL expresionBool .
    (39) expresionBool -> expresionBool . EQUIVAL expresionBool

  ! shift/reduce conflict for EQUIVAL resolved as shift
    RPAREN          reduce using rule 39 (expresionBool -> expresionBool EQUIVAL expresionBool .)
    PUNTCOM         reduce using rule 39 (expresionBool -> expresionBool EQUIVAL expresionBool .)
    EQUIVAL         shift and go to state 80

  ! EQUIVAL         [ reduce using rule 39 (expresionBool -> expresionBool EQUIVAL expresionBool .) ]


state 120

    (35) expresionBool -> ID comparador ID .

    RPAREN          reduce using rule 35 (expresionBool -> ID comparador ID .)
    EQUIVAL         reduce using rule 35 (expresionBool -> ID comparador ID .)
    PUNTCOM         reduce using rule 35 (expresionBool -> ID comparador ID .)


state 121

    (36) expresionBool -> ID comparador NUMBER .

    RPAREN          reduce using rule 36 (expresionBool -> ID comparador NUMBER .)
    EQUIVAL         reduce using rule 36 (expresionBool -> ID comparador NUMBER .)
    PUNTCOM         reduce using rule 36 (expresionBool -> ID comparador NUMBER .)


state 122

    (38) expresionBool -> NUMBER comparador NUMBER .

    RPAREN          reduce using rule 38 (expresionBool -> NUMBER comparador NUMBER .)
    EQUIVAL         reduce using rule 38 (expresionBool -> NUMBER comparador NUMBER .)
    PUNTCOM         reduce using rule 38 (expresionBool -> NUMBER comparador NUMBER .)


state 123

    (37) expresionBool -> NUMBER comparador ID .

    RPAREN          reduce using rule 37 (expresionBool -> NUMBER comparador ID .)
    EQUIVAL         reduce using rule 37 (expresionBool -> NUMBER comparador ID .)
    PUNTCOM         reduce using rule 37 (expresionBool -> NUMBER comparador ID .)


state 124

    (33) expresionIf -> IF LPAREN expresionBool RPAREN LCURLYB . expresion RCURLYB
    (1) expresion -> . lista
    (2) expresion -> . mapa
    (3) expresion -> . variable
    (4) expresion -> . expresionFor
    (5) expresion -> . expresionWhile
    (6) expresion -> . expresionIf
    (7) expresion -> . concatenacion
    (8) expresion -> . incremento
    (9) expresion -> . decremento
    (10) expresion -> . print
    (11) expresion -> . funcion
    (12) expresion -> . expresion expresion
    (47) lista -> . expLista
    (48) lista -> . add_lista
    (64) mapa -> . expMapa
    (65) mapa -> . add_mapa
    (13) variable -> . VAR ID EQUALS expresionVar PUNTCOM
    (14) variable -> . VAR ID PUNTCOM
    (15) variable -> . VAR ID EQUALS expresionBool PUNTCOM
    (22) expresionFor -> . FOR LPAREN forParameters RPAREN LCURLYB expresion RCURLYB
    (32) expresionWhile -> . WHILE LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB
    (33) expresionIf -> . IF LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB
    (78) concatenacion -> . VAR ID EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN pto_coma
    (76) incremento -> . ID INCREMENTO pto_coma
    (77) decremento -> . ID DECREMENTO pto_coma
    (79) print -> . PRINT LPAREN printVal RPAREN pto_coma
    (83) funcion -> . VOID ID LPAREN RPAREN final_key
    (49) expLista -> . VAR ID EQUALS NEW LISTA LPAREN inicializaLista RPAREN pto_coma
    (50) expLista -> . VAR ID EQUALS LCORCHETE elementosLista RCORCHETE pto_coma
    (53) add_lista -> . ID LCORCHETE NUMBER RCORCHETE EQUALS num_cadena pto_coma
    (54) add_lista -> . ID PTO ADD LPAREN elementoAddLista RPAREN pto_coma
    (66) expMapa -> . VAR ID EQUALS NEW MAPA LPAREN RPAREN pto_coma
    (67) expMapa -> . MAPA ID EQUALS LCURLYB elementosMapa RCURLYB pto_coma
    (70) add_mapa -> . ID LCORCHETE CADENA RCORCHETE EQUALS CADENA pto_coma

    VAR             shift and go to state 17
    FOR             shift and go to state 19
    WHILE           shift and go to state 20
    IF              shift and go to state 21
    ID              shift and go to state 18
    PRINT           shift and go to state 22
    VOID            shift and go to state 23
    MAPA            shift and go to state 24

    expresion                      shift and go to state 148
    lista                          shift and go to state 2
    mapa                           shift and go to state 3
    variable                       shift and go to state 4
    expresionFor                   shift and go to state 5
    expresionWhile                 shift and go to state 6
    expresionIf                    shift and go to state 7
    concatenacion                  shift and go to state 8
    incremento                     shift and go to state 9
    decremento                     shift and go to state 10
    print                          shift and go to state 11
    funcion                        shift and go to state 12
    expLista                       shift and go to state 13
    add_lista                      shift and go to state 14
    expMapa                        shift and go to state 15
    add_mapa                       shift and go to state 16

state 125

    (79) print -> PRINT LPAREN printVal RPAREN pto_coma .

    VAR             reduce using rule 79 (print -> PRINT LPAREN printVal RPAREN pto_coma .)
    FOR             reduce using rule 79 (print -> PRINT LPAREN printVal RPAREN pto_coma .)
    WHILE           reduce using rule 79 (print -> PRINT LPAREN printVal RPAREN pto_coma .)
    IF              reduce using rule 79 (print -> PRINT LPAREN printVal RPAREN pto_coma .)
    ID              reduce using rule 79 (print -> PRINT LPAREN printVal RPAREN pto_coma .)
    PRINT           reduce using rule 79 (print -> PRINT LPAREN printVal RPAREN pto_coma .)
    VOID            reduce using rule 79 (print -> PRINT LPAREN printVal RPAREN pto_coma .)
    MAPA            reduce using rule 79 (print -> PRINT LPAREN printVal RPAREN pto_coma .)
    $end            reduce using rule 79 (print -> PRINT LPAREN printVal RPAREN pto_coma .)
    RCURLYB         reduce using rule 79 (print -> PRINT LPAREN printVal RPAREN pto_coma .)


state 126

    (83) funcion -> VOID ID LPAREN RPAREN final_key .

    VAR             reduce using rule 83 (funcion -> VOID ID LPAREN RPAREN final_key .)
    FOR             reduce using rule 83 (funcion -> VOID ID LPAREN RPAREN final_key .)
    WHILE           reduce using rule 83 (funcion -> VOID ID LPAREN RPAREN final_key .)
    IF              reduce using rule 83 (funcion -> VOID ID LPAREN RPAREN final_key .)
    ID              reduce using rule 83 (funcion -> VOID ID LPAREN RPAREN final_key .)
    PRINT           reduce using rule 83 (funcion -> VOID ID LPAREN RPAREN final_key .)
    VOID            reduce using rule 83 (funcion -> VOID ID LPAREN RPAREN final_key .)
    MAPA            reduce using rule 83 (funcion -> VOID ID LPAREN RPAREN final_key .)
    $end            reduce using rule 83 (funcion -> VOID ID LPAREN RPAREN final_key .)
    RCURLYB         reduce using rule 83 (funcion -> VOID ID LPAREN RPAREN final_key .)


state 127

    (84) final_key -> LCURLYB . expresion RCURLYB
    (85) final_key -> LCURLYB . RCURLYB
    (1) expresion -> . lista
    (2) expresion -> . mapa
    (3) expresion -> . variable
    (4) expresion -> . expresionFor
    (5) expresion -> . expresionWhile
    (6) expresion -> . expresionIf
    (7) expresion -> . concatenacion
    (8) expresion -> . incremento
    (9) expresion -> . decremento
    (10) expresion -> . print
    (11) expresion -> . funcion
    (12) expresion -> . expresion expresion
    (47) lista -> . expLista
    (48) lista -> . add_lista
    (64) mapa -> . expMapa
    (65) mapa -> . add_mapa
    (13) variable -> . VAR ID EQUALS expresionVar PUNTCOM
    (14) variable -> . VAR ID PUNTCOM
    (15) variable -> . VAR ID EQUALS expresionBool PUNTCOM
    (22) expresionFor -> . FOR LPAREN forParameters RPAREN LCURLYB expresion RCURLYB
    (32) expresionWhile -> . WHILE LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB
    (33) expresionIf -> . IF LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB
    (78) concatenacion -> . VAR ID EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN pto_coma
    (76) incremento -> . ID INCREMENTO pto_coma
    (77) decremento -> . ID DECREMENTO pto_coma
    (79) print -> . PRINT LPAREN printVal RPAREN pto_coma
    (83) funcion -> . VOID ID LPAREN RPAREN final_key
    (49) expLista -> . VAR ID EQUALS NEW LISTA LPAREN inicializaLista RPAREN pto_coma
    (50) expLista -> . VAR ID EQUALS LCORCHETE elementosLista RCORCHETE pto_coma
    (53) add_lista -> . ID LCORCHETE NUMBER RCORCHETE EQUALS num_cadena pto_coma
    (54) add_lista -> . ID PTO ADD LPAREN elementoAddLista RPAREN pto_coma
    (66) expMapa -> . VAR ID EQUALS NEW MAPA LPAREN RPAREN pto_coma
    (67) expMapa -> . MAPA ID EQUALS LCURLYB elementosMapa RCURLYB pto_coma
    (70) add_mapa -> . ID LCORCHETE CADENA RCORCHETE EQUALS CADENA pto_coma

    RCURLYB         shift and go to state 150
    VAR             shift and go to state 17
    FOR             shift and go to state 19
    WHILE           shift and go to state 20
    IF              shift and go to state 21
    ID              shift and go to state 18
    PRINT           shift and go to state 22
    VOID            shift and go to state 23
    MAPA            shift and go to state 24

    expresion                      shift and go to state 149
    lista                          shift and go to state 2
    mapa                           shift and go to state 3
    variable                       shift and go to state 4
    expresionFor                   shift and go to state 5
    expresionWhile                 shift and go to state 6
    expresionIf                    shift and go to state 7
    concatenacion                  shift and go to state 8
    incremento                     shift and go to state 9
    decremento                     shift and go to state 10
    print                          shift and go to state 11
    funcion                        shift and go to state 12
    expLista                       shift and go to state 13
    add_lista                      shift and go to state 14
    expMapa                        shift and go to state 15
    add_mapa                       shift and go to state 16

state 128

    (67) expMapa -> MAPA ID EQUALS LCURLYB elementosMapa . RCURLYB pto_coma

    RCURLYB         shift and go to state 151


state 129

    (68) elementosMapa -> num_cadena . DOSPTO num_cadena
    (69) elementosMapa -> num_cadena . DOSPTO num_cadena COMA elementosMapa

    DOSPTO          shift and go to state 152


state 130

    (78) concatenacion -> VAR ID EQUALS ID PTO SUBSTRING . LPAREN NUMBER COMA NUMBER RPAREN pto_coma

    LPAREN          shift and go to state 153


state 131

    (21) expresionVar -> expresionVar operadorA expresionVar .
    (21) expresionVar -> expresionVar . operadorA expresionVar
    (71) operadorA -> . PLUS
    (72) operadorA -> . MINUS
    (73) operadorA -> . TIMES
    (74) operadorA -> . DIVIDE
    (75) operadorA -> . DIVIDE_E

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DIVIDE_E resolved as shift
    PUNTCOM         reduce using rule 21 (expresionVar -> expresionVar operadorA expresionVar .)
    PLUS            shift and go to state 95
    MINUS           shift and go to state 96
    TIMES           shift and go to state 97
    DIVIDE          shift and go to state 98
    DIVIDE_E        shift and go to state 99

  ! PLUS            [ reduce using rule 21 (expresionVar -> expresionVar operadorA expresionVar .) ]
  ! MINUS           [ reduce using rule 21 (expresionVar -> expresionVar operadorA expresionVar .) ]
  ! TIMES           [ reduce using rule 21 (expresionVar -> expresionVar operadorA expresionVar .) ]
  ! DIVIDE          [ reduce using rule 21 (expresionVar -> expresionVar operadorA expresionVar .) ]
  ! DIVIDE_E        [ reduce using rule 21 (expresionVar -> expresionVar operadorA expresionVar .) ]

    operadorA                      shift and go to state 94

state 132

    (20) expresionVar -> ID .

    PLUS            reduce using rule 20 (expresionVar -> ID .)
    MINUS           reduce using rule 20 (expresionVar -> ID .)
    TIMES           reduce using rule 20 (expresionVar -> ID .)
    DIVIDE          reduce using rule 20 (expresionVar -> ID .)
    DIVIDE_E        reduce using rule 20 (expresionVar -> ID .)
    PUNTCOM         reduce using rule 20 (expresionVar -> ID .)


state 133

    (16) valorVar -> NUMBER .

    PLUS            reduce using rule 16 (valorVar -> NUMBER .)
    MINUS           reduce using rule 16 (valorVar -> NUMBER .)
    TIMES           reduce using rule 16 (valorVar -> NUMBER .)
    DIVIDE          reduce using rule 16 (valorVar -> NUMBER .)
    DIVIDE_E        reduce using rule 16 (valorVar -> NUMBER .)
    PUNTCOM         reduce using rule 16 (valorVar -> NUMBER .)


state 134

    (49) expLista -> VAR ID EQUALS NEW LISTA LPAREN . inicializaLista RPAREN pto_coma
    (51) inicializaLista -> . NUMBER
    (52) inicializaLista -> .

    NUMBER          shift and go to state 155
    RPAREN          reduce using rule 52 (inicializaLista -> .)

    inicializaLista                shift and go to state 154

state 135

    (66) expMapa -> VAR ID EQUALS NEW MAPA LPAREN . RPAREN pto_coma

    RPAREN          shift and go to state 156


state 136

    (50) expLista -> VAR ID EQUALS LCORCHETE elementosLista RCORCHETE . pto_coma
    (86) pto_coma -> . PUNTCOM

    PUNTCOM         shift and go to state 40

    pto_coma                       shift and go to state 157

state 137

    (61) elementosLista -> CADENA COMA . elementosLista
    (59) elementosLista -> . CADENA
    (60) elementosLista -> . NUMBER
    (61) elementosLista -> . CADENA COMA elementosLista
    (62) elementosLista -> . NUMBER COMA elementosLista
    (63) elementosLista -> .

    CADENA          shift and go to state 104
    NUMBER          shift and go to state 105
    RCORCHETE       reduce using rule 63 (elementosLista -> .)

    elementosLista                 shift and go to state 158

state 138

    (62) elementosLista -> NUMBER COMA . elementosLista
    (59) elementosLista -> . CADENA
    (60) elementosLista -> . NUMBER
    (61) elementosLista -> . CADENA COMA elementosLista
    (62) elementosLista -> . NUMBER COMA elementosLista
    (63) elementosLista -> .

    CADENA          shift and go to state 104
    NUMBER          shift and go to state 105
    RCORCHETE       reduce using rule 63 (elementosLista -> .)

    elementosLista                 shift and go to state 159

state 139

    (53) add_lista -> ID LCORCHETE NUMBER RCORCHETE EQUALS num_cadena . pto_coma
    (86) pto_coma -> . PUNTCOM

    PUNTCOM         shift and go to state 40

    pto_coma                       shift and go to state 160

state 140

    (70) add_mapa -> ID LCORCHETE CADENA RCORCHETE EQUALS CADENA . pto_coma
    (86) pto_coma -> . PUNTCOM

    PUNTCOM         shift and go to state 40

    pto_coma                       shift and go to state 161

state 141

    (54) add_lista -> ID PTO ADD LPAREN elementoAddLista RPAREN . pto_coma
    (86) pto_coma -> . PUNTCOM

    PUNTCOM         shift and go to state 40

    pto_coma                       shift and go to state 162

state 142

    (22) expresionFor -> FOR LPAREN forParameters RPAREN LCURLYB expresion . RCURLYB
    (12) expresion -> expresion . expresion
    (1) expresion -> . lista
    (2) expresion -> . mapa
    (3) expresion -> . variable
    (4) expresion -> . expresionFor
    (5) expresion -> . expresionWhile
    (6) expresion -> . expresionIf
    (7) expresion -> . concatenacion
    (8) expresion -> . incremento
    (9) expresion -> . decremento
    (10) expresion -> . print
    (11) expresion -> . funcion
    (12) expresion -> . expresion expresion
    (47) lista -> . expLista
    (48) lista -> . add_lista
    (64) mapa -> . expMapa
    (65) mapa -> . add_mapa
    (13) variable -> . VAR ID EQUALS expresionVar PUNTCOM
    (14) variable -> . VAR ID PUNTCOM
    (15) variable -> . VAR ID EQUALS expresionBool PUNTCOM
    (22) expresionFor -> . FOR LPAREN forParameters RPAREN LCURLYB expresion RCURLYB
    (32) expresionWhile -> . WHILE LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB
    (33) expresionIf -> . IF LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB
    (78) concatenacion -> . VAR ID EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN pto_coma
    (76) incremento -> . ID INCREMENTO pto_coma
    (77) decremento -> . ID DECREMENTO pto_coma
    (79) print -> . PRINT LPAREN printVal RPAREN pto_coma
    (83) funcion -> . VOID ID LPAREN RPAREN final_key
    (49) expLista -> . VAR ID EQUALS NEW LISTA LPAREN inicializaLista RPAREN pto_coma
    (50) expLista -> . VAR ID EQUALS LCORCHETE elementosLista RCORCHETE pto_coma
    (53) add_lista -> . ID LCORCHETE NUMBER RCORCHETE EQUALS num_cadena pto_coma
    (54) add_lista -> . ID PTO ADD LPAREN elementoAddLista RPAREN pto_coma
    (66) expMapa -> . VAR ID EQUALS NEW MAPA LPAREN RPAREN pto_coma
    (67) expMapa -> . MAPA ID EQUALS LCURLYB elementosMapa RCURLYB pto_coma
    (70) add_mapa -> . ID LCORCHETE CADENA RCORCHETE EQUALS CADENA pto_coma

    RCURLYB         shift and go to state 163
    VAR             shift and go to state 17
    FOR             shift and go to state 19
    WHILE           shift and go to state 20
    IF              shift and go to state 21
    ID              shift and go to state 18
    PRINT           shift and go to state 22
    VOID            shift and go to state 23
    MAPA            shift and go to state 24

    expresion                      shift and go to state 25
    lista                          shift and go to state 2
    mapa                           shift and go to state 3
    variable                       shift and go to state 4
    expresionFor                   shift and go to state 5
    expresionWhile                 shift and go to state 6
    expresionIf                    shift and go to state 7
    concatenacion                  shift and go to state 8
    incremento                     shift and go to state 9
    decremento                     shift and go to state 10
    print                          shift and go to state 11
    funcion                        shift and go to state 12
    expLista                       shift and go to state 13
    add_lista                      shift and go to state 14
    expMapa                        shift and go to state 15
    add_mapa                       shift and go to state 16

state 143

    (23) forParameters -> forIterator PUNTCOM forCondition PUNTCOM . forAction
    (28) forAction -> . ID INCREMENTO
    (29) forAction -> . ID DECREMENTO
    (30) forAction -> . INCREMENTO ID
    (31) forAction -> . DECREMENTO ID

    ID              shift and go to state 165
    INCREMENTO      shift and go to state 166
    DECREMENTO      shift and go to state 167

    forAction                      shift and go to state 164

state 144

    (26) forCondition -> ID MAYORQUE . NUMBER

    NUMBER          shift and go to state 168


state 145

    (27) forCondition -> ID MENORQUE . NUMBER

    NUMBER          shift and go to state 169


state 146

    (24) forIterator -> INT ID EQUALS NUMBER .

    PUNTCOM         reduce using rule 24 (forIterator -> INT ID EQUALS NUMBER .)


state 147

    (32) expresionWhile -> WHILE LPAREN expresionBool RPAREN LCURLYB expresion . RCURLYB
    (12) expresion -> expresion . expresion
    (1) expresion -> . lista
    (2) expresion -> . mapa
    (3) expresion -> . variable
    (4) expresion -> . expresionFor
    (5) expresion -> . expresionWhile
    (6) expresion -> . expresionIf
    (7) expresion -> . concatenacion
    (8) expresion -> . incremento
    (9) expresion -> . decremento
    (10) expresion -> . print
    (11) expresion -> . funcion
    (12) expresion -> . expresion expresion
    (47) lista -> . expLista
    (48) lista -> . add_lista
    (64) mapa -> . expMapa
    (65) mapa -> . add_mapa
    (13) variable -> . VAR ID EQUALS expresionVar PUNTCOM
    (14) variable -> . VAR ID PUNTCOM
    (15) variable -> . VAR ID EQUALS expresionBool PUNTCOM
    (22) expresionFor -> . FOR LPAREN forParameters RPAREN LCURLYB expresion RCURLYB
    (32) expresionWhile -> . WHILE LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB
    (33) expresionIf -> . IF LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB
    (78) concatenacion -> . VAR ID EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN pto_coma
    (76) incremento -> . ID INCREMENTO pto_coma
    (77) decremento -> . ID DECREMENTO pto_coma
    (79) print -> . PRINT LPAREN printVal RPAREN pto_coma
    (83) funcion -> . VOID ID LPAREN RPAREN final_key
    (49) expLista -> . VAR ID EQUALS NEW LISTA LPAREN inicializaLista RPAREN pto_coma
    (50) expLista -> . VAR ID EQUALS LCORCHETE elementosLista RCORCHETE pto_coma
    (53) add_lista -> . ID LCORCHETE NUMBER RCORCHETE EQUALS num_cadena pto_coma
    (54) add_lista -> . ID PTO ADD LPAREN elementoAddLista RPAREN pto_coma
    (66) expMapa -> . VAR ID EQUALS NEW MAPA LPAREN RPAREN pto_coma
    (67) expMapa -> . MAPA ID EQUALS LCURLYB elementosMapa RCURLYB pto_coma
    (70) add_mapa -> . ID LCORCHETE CADENA RCORCHETE EQUALS CADENA pto_coma

    RCURLYB         shift and go to state 170
    VAR             shift and go to state 17
    FOR             shift and go to state 19
    WHILE           shift and go to state 20
    IF              shift and go to state 21
    ID              shift and go to state 18
    PRINT           shift and go to state 22
    VOID            shift and go to state 23
    MAPA            shift and go to state 24

    expresion                      shift and go to state 25
    lista                          shift and go to state 2
    mapa                           shift and go to state 3
    variable                       shift and go to state 4
    expresionFor                   shift and go to state 5
    expresionWhile                 shift and go to state 6
    expresionIf                    shift and go to state 7
    concatenacion                  shift and go to state 8
    incremento                     shift and go to state 9
    decremento                     shift and go to state 10
    print                          shift and go to state 11
    funcion                        shift and go to state 12
    expLista                       shift and go to state 13
    add_lista                      shift and go to state 14
    expMapa                        shift and go to state 15
    add_mapa                       shift and go to state 16

state 148

    (33) expresionIf -> IF LPAREN expresionBool RPAREN LCURLYB expresion . RCURLYB
    (12) expresion -> expresion . expresion
    (1) expresion -> . lista
    (2) expresion -> . mapa
    (3) expresion -> . variable
    (4) expresion -> . expresionFor
    (5) expresion -> . expresionWhile
    (6) expresion -> . expresionIf
    (7) expresion -> . concatenacion
    (8) expresion -> . incremento
    (9) expresion -> . decremento
    (10) expresion -> . print
    (11) expresion -> . funcion
    (12) expresion -> . expresion expresion
    (47) lista -> . expLista
    (48) lista -> . add_lista
    (64) mapa -> . expMapa
    (65) mapa -> . add_mapa
    (13) variable -> . VAR ID EQUALS expresionVar PUNTCOM
    (14) variable -> . VAR ID PUNTCOM
    (15) variable -> . VAR ID EQUALS expresionBool PUNTCOM
    (22) expresionFor -> . FOR LPAREN forParameters RPAREN LCURLYB expresion RCURLYB
    (32) expresionWhile -> . WHILE LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB
    (33) expresionIf -> . IF LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB
    (78) concatenacion -> . VAR ID EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN pto_coma
    (76) incremento -> . ID INCREMENTO pto_coma
    (77) decremento -> . ID DECREMENTO pto_coma
    (79) print -> . PRINT LPAREN printVal RPAREN pto_coma
    (83) funcion -> . VOID ID LPAREN RPAREN final_key
    (49) expLista -> . VAR ID EQUALS NEW LISTA LPAREN inicializaLista RPAREN pto_coma
    (50) expLista -> . VAR ID EQUALS LCORCHETE elementosLista RCORCHETE pto_coma
    (53) add_lista -> . ID LCORCHETE NUMBER RCORCHETE EQUALS num_cadena pto_coma
    (54) add_lista -> . ID PTO ADD LPAREN elementoAddLista RPAREN pto_coma
    (66) expMapa -> . VAR ID EQUALS NEW MAPA LPAREN RPAREN pto_coma
    (67) expMapa -> . MAPA ID EQUALS LCURLYB elementosMapa RCURLYB pto_coma
    (70) add_mapa -> . ID LCORCHETE CADENA RCORCHETE EQUALS CADENA pto_coma

    RCURLYB         shift and go to state 171
    VAR             shift and go to state 17
    FOR             shift and go to state 19
    WHILE           shift and go to state 20
    IF              shift and go to state 21
    ID              shift and go to state 18
    PRINT           shift and go to state 22
    VOID            shift and go to state 23
    MAPA            shift and go to state 24

    expresion                      shift and go to state 25
    lista                          shift and go to state 2
    mapa                           shift and go to state 3
    variable                       shift and go to state 4
    expresionFor                   shift and go to state 5
    expresionWhile                 shift and go to state 6
    expresionIf                    shift and go to state 7
    concatenacion                  shift and go to state 8
    incremento                     shift and go to state 9
    decremento                     shift and go to state 10
    print                          shift and go to state 11
    funcion                        shift and go to state 12
    expLista                       shift and go to state 13
    add_lista                      shift and go to state 14
    expMapa                        shift and go to state 15
    add_mapa                       shift and go to state 16

state 149

    (84) final_key -> LCURLYB expresion . RCURLYB
    (12) expresion -> expresion . expresion
    (1) expresion -> . lista
    (2) expresion -> . mapa
    (3) expresion -> . variable
    (4) expresion -> . expresionFor
    (5) expresion -> . expresionWhile
    (6) expresion -> . expresionIf
    (7) expresion -> . concatenacion
    (8) expresion -> . incremento
    (9) expresion -> . decremento
    (10) expresion -> . print
    (11) expresion -> . funcion
    (12) expresion -> . expresion expresion
    (47) lista -> . expLista
    (48) lista -> . add_lista
    (64) mapa -> . expMapa
    (65) mapa -> . add_mapa
    (13) variable -> . VAR ID EQUALS expresionVar PUNTCOM
    (14) variable -> . VAR ID PUNTCOM
    (15) variable -> . VAR ID EQUALS expresionBool PUNTCOM
    (22) expresionFor -> . FOR LPAREN forParameters RPAREN LCURLYB expresion RCURLYB
    (32) expresionWhile -> . WHILE LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB
    (33) expresionIf -> . IF LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB
    (78) concatenacion -> . VAR ID EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN pto_coma
    (76) incremento -> . ID INCREMENTO pto_coma
    (77) decremento -> . ID DECREMENTO pto_coma
    (79) print -> . PRINT LPAREN printVal RPAREN pto_coma
    (83) funcion -> . VOID ID LPAREN RPAREN final_key
    (49) expLista -> . VAR ID EQUALS NEW LISTA LPAREN inicializaLista RPAREN pto_coma
    (50) expLista -> . VAR ID EQUALS LCORCHETE elementosLista RCORCHETE pto_coma
    (53) add_lista -> . ID LCORCHETE NUMBER RCORCHETE EQUALS num_cadena pto_coma
    (54) add_lista -> . ID PTO ADD LPAREN elementoAddLista RPAREN pto_coma
    (66) expMapa -> . VAR ID EQUALS NEW MAPA LPAREN RPAREN pto_coma
    (67) expMapa -> . MAPA ID EQUALS LCURLYB elementosMapa RCURLYB pto_coma
    (70) add_mapa -> . ID LCORCHETE CADENA RCORCHETE EQUALS CADENA pto_coma

    RCURLYB         shift and go to state 172
    VAR             shift and go to state 17
    FOR             shift and go to state 19
    WHILE           shift and go to state 20
    IF              shift and go to state 21
    ID              shift and go to state 18
    PRINT           shift and go to state 22
    VOID            shift and go to state 23
    MAPA            shift and go to state 24

    expresion                      shift and go to state 25
    lista                          shift and go to state 2
    mapa                           shift and go to state 3
    variable                       shift and go to state 4
    expresionFor                   shift and go to state 5
    expresionWhile                 shift and go to state 6
    expresionIf                    shift and go to state 7
    concatenacion                  shift and go to state 8
    incremento                     shift and go to state 9
    decremento                     shift and go to state 10
    print                          shift and go to state 11
    funcion                        shift and go to state 12
    expLista                       shift and go to state 13
    add_lista                      shift and go to state 14
    expMapa                        shift and go to state 15
    add_mapa                       shift and go to state 16

state 150

    (85) final_key -> LCURLYB RCURLYB .

    VAR             reduce using rule 85 (final_key -> LCURLYB RCURLYB .)
    FOR             reduce using rule 85 (final_key -> LCURLYB RCURLYB .)
    WHILE           reduce using rule 85 (final_key -> LCURLYB RCURLYB .)
    IF              reduce using rule 85 (final_key -> LCURLYB RCURLYB .)
    ID              reduce using rule 85 (final_key -> LCURLYB RCURLYB .)
    PRINT           reduce using rule 85 (final_key -> LCURLYB RCURLYB .)
    VOID            reduce using rule 85 (final_key -> LCURLYB RCURLYB .)
    MAPA            reduce using rule 85 (final_key -> LCURLYB RCURLYB .)
    $end            reduce using rule 85 (final_key -> LCURLYB RCURLYB .)
    RCURLYB         reduce using rule 85 (final_key -> LCURLYB RCURLYB .)


state 151

    (67) expMapa -> MAPA ID EQUALS LCURLYB elementosMapa RCURLYB . pto_coma
    (86) pto_coma -> . PUNTCOM

    PUNTCOM         shift and go to state 40

    pto_coma                       shift and go to state 173

state 152

    (68) elementosMapa -> num_cadena DOSPTO . num_cadena
    (69) elementosMapa -> num_cadena DOSPTO . num_cadena COMA elementosMapa
    (57) num_cadena -> . NUMBER
    (58) num_cadena -> . CADENA

    NUMBER          shift and go to state 111
    CADENA          shift and go to state 112

    num_cadena                     shift and go to state 174

state 153

    (78) concatenacion -> VAR ID EQUALS ID PTO SUBSTRING LPAREN . NUMBER COMA NUMBER RPAREN pto_coma

    NUMBER          shift and go to state 175


state 154

    (49) expLista -> VAR ID EQUALS NEW LISTA LPAREN inicializaLista . RPAREN pto_coma

    RPAREN          shift and go to state 176


state 155

    (51) inicializaLista -> NUMBER .

    RPAREN          reduce using rule 51 (inicializaLista -> NUMBER .)


state 156

    (66) expMapa -> VAR ID EQUALS NEW MAPA LPAREN RPAREN . pto_coma
    (86) pto_coma -> . PUNTCOM

    PUNTCOM         shift and go to state 40

    pto_coma                       shift and go to state 177

state 157

    (50) expLista -> VAR ID EQUALS LCORCHETE elementosLista RCORCHETE pto_coma .

    VAR             reduce using rule 50 (expLista -> VAR ID EQUALS LCORCHETE elementosLista RCORCHETE pto_coma .)
    FOR             reduce using rule 50 (expLista -> VAR ID EQUALS LCORCHETE elementosLista RCORCHETE pto_coma .)
    WHILE           reduce using rule 50 (expLista -> VAR ID EQUALS LCORCHETE elementosLista RCORCHETE pto_coma .)
    IF              reduce using rule 50 (expLista -> VAR ID EQUALS LCORCHETE elementosLista RCORCHETE pto_coma .)
    ID              reduce using rule 50 (expLista -> VAR ID EQUALS LCORCHETE elementosLista RCORCHETE pto_coma .)
    PRINT           reduce using rule 50 (expLista -> VAR ID EQUALS LCORCHETE elementosLista RCORCHETE pto_coma .)
    VOID            reduce using rule 50 (expLista -> VAR ID EQUALS LCORCHETE elementosLista RCORCHETE pto_coma .)
    MAPA            reduce using rule 50 (expLista -> VAR ID EQUALS LCORCHETE elementosLista RCORCHETE pto_coma .)
    $end            reduce using rule 50 (expLista -> VAR ID EQUALS LCORCHETE elementosLista RCORCHETE pto_coma .)
    RCURLYB         reduce using rule 50 (expLista -> VAR ID EQUALS LCORCHETE elementosLista RCORCHETE pto_coma .)


state 158

    (61) elementosLista -> CADENA COMA elementosLista .

    RCORCHETE       reduce using rule 61 (elementosLista -> CADENA COMA elementosLista .)


state 159

    (62) elementosLista -> NUMBER COMA elementosLista .

    RCORCHETE       reduce using rule 62 (elementosLista -> NUMBER COMA elementosLista .)


state 160

    (53) add_lista -> ID LCORCHETE NUMBER RCORCHETE EQUALS num_cadena pto_coma .

    VAR             reduce using rule 53 (add_lista -> ID LCORCHETE NUMBER RCORCHETE EQUALS num_cadena pto_coma .)
    FOR             reduce using rule 53 (add_lista -> ID LCORCHETE NUMBER RCORCHETE EQUALS num_cadena pto_coma .)
    WHILE           reduce using rule 53 (add_lista -> ID LCORCHETE NUMBER RCORCHETE EQUALS num_cadena pto_coma .)
    IF              reduce using rule 53 (add_lista -> ID LCORCHETE NUMBER RCORCHETE EQUALS num_cadena pto_coma .)
    ID              reduce using rule 53 (add_lista -> ID LCORCHETE NUMBER RCORCHETE EQUALS num_cadena pto_coma .)
    PRINT           reduce using rule 53 (add_lista -> ID LCORCHETE NUMBER RCORCHETE EQUALS num_cadena pto_coma .)
    VOID            reduce using rule 53 (add_lista -> ID LCORCHETE NUMBER RCORCHETE EQUALS num_cadena pto_coma .)
    MAPA            reduce using rule 53 (add_lista -> ID LCORCHETE NUMBER RCORCHETE EQUALS num_cadena pto_coma .)
    $end            reduce using rule 53 (add_lista -> ID LCORCHETE NUMBER RCORCHETE EQUALS num_cadena pto_coma .)
    RCURLYB         reduce using rule 53 (add_lista -> ID LCORCHETE NUMBER RCORCHETE EQUALS num_cadena pto_coma .)


state 161

    (70) add_mapa -> ID LCORCHETE CADENA RCORCHETE EQUALS CADENA pto_coma .

    VAR             reduce using rule 70 (add_mapa -> ID LCORCHETE CADENA RCORCHETE EQUALS CADENA pto_coma .)
    FOR             reduce using rule 70 (add_mapa -> ID LCORCHETE CADENA RCORCHETE EQUALS CADENA pto_coma .)
    WHILE           reduce using rule 70 (add_mapa -> ID LCORCHETE CADENA RCORCHETE EQUALS CADENA pto_coma .)
    IF              reduce using rule 70 (add_mapa -> ID LCORCHETE CADENA RCORCHETE EQUALS CADENA pto_coma .)
    ID              reduce using rule 70 (add_mapa -> ID LCORCHETE CADENA RCORCHETE EQUALS CADENA pto_coma .)
    PRINT           reduce using rule 70 (add_mapa -> ID LCORCHETE CADENA RCORCHETE EQUALS CADENA pto_coma .)
    VOID            reduce using rule 70 (add_mapa -> ID LCORCHETE CADENA RCORCHETE EQUALS CADENA pto_coma .)
    MAPA            reduce using rule 70 (add_mapa -> ID LCORCHETE CADENA RCORCHETE EQUALS CADENA pto_coma .)
    $end            reduce using rule 70 (add_mapa -> ID LCORCHETE CADENA RCORCHETE EQUALS CADENA pto_coma .)
    RCURLYB         reduce using rule 70 (add_mapa -> ID LCORCHETE CADENA RCORCHETE EQUALS CADENA pto_coma .)


state 162

    (54) add_lista -> ID PTO ADD LPAREN elementoAddLista RPAREN pto_coma .

    VAR             reduce using rule 54 (add_lista -> ID PTO ADD LPAREN elementoAddLista RPAREN pto_coma .)
    FOR             reduce using rule 54 (add_lista -> ID PTO ADD LPAREN elementoAddLista RPAREN pto_coma .)
    WHILE           reduce using rule 54 (add_lista -> ID PTO ADD LPAREN elementoAddLista RPAREN pto_coma .)
    IF              reduce using rule 54 (add_lista -> ID PTO ADD LPAREN elementoAddLista RPAREN pto_coma .)
    ID              reduce using rule 54 (add_lista -> ID PTO ADD LPAREN elementoAddLista RPAREN pto_coma .)
    PRINT           reduce using rule 54 (add_lista -> ID PTO ADD LPAREN elementoAddLista RPAREN pto_coma .)
    VOID            reduce using rule 54 (add_lista -> ID PTO ADD LPAREN elementoAddLista RPAREN pto_coma .)
    MAPA            reduce using rule 54 (add_lista -> ID PTO ADD LPAREN elementoAddLista RPAREN pto_coma .)
    $end            reduce using rule 54 (add_lista -> ID PTO ADD LPAREN elementoAddLista RPAREN pto_coma .)
    RCURLYB         reduce using rule 54 (add_lista -> ID PTO ADD LPAREN elementoAddLista RPAREN pto_coma .)


state 163

    (22) expresionFor -> FOR LPAREN forParameters RPAREN LCURLYB expresion RCURLYB .

    VAR             reduce using rule 22 (expresionFor -> FOR LPAREN forParameters RPAREN LCURLYB expresion RCURLYB .)
    FOR             reduce using rule 22 (expresionFor -> FOR LPAREN forParameters RPAREN LCURLYB expresion RCURLYB .)
    WHILE           reduce using rule 22 (expresionFor -> FOR LPAREN forParameters RPAREN LCURLYB expresion RCURLYB .)
    IF              reduce using rule 22 (expresionFor -> FOR LPAREN forParameters RPAREN LCURLYB expresion RCURLYB .)
    ID              reduce using rule 22 (expresionFor -> FOR LPAREN forParameters RPAREN LCURLYB expresion RCURLYB .)
    PRINT           reduce using rule 22 (expresionFor -> FOR LPAREN forParameters RPAREN LCURLYB expresion RCURLYB .)
    VOID            reduce using rule 22 (expresionFor -> FOR LPAREN forParameters RPAREN LCURLYB expresion RCURLYB .)
    MAPA            reduce using rule 22 (expresionFor -> FOR LPAREN forParameters RPAREN LCURLYB expresion RCURLYB .)
    $end            reduce using rule 22 (expresionFor -> FOR LPAREN forParameters RPAREN LCURLYB expresion RCURLYB .)
    RCURLYB         reduce using rule 22 (expresionFor -> FOR LPAREN forParameters RPAREN LCURLYB expresion RCURLYB .)


state 164

    (23) forParameters -> forIterator PUNTCOM forCondition PUNTCOM forAction .

    RPAREN          reduce using rule 23 (forParameters -> forIterator PUNTCOM forCondition PUNTCOM forAction .)


state 165

    (28) forAction -> ID . INCREMENTO
    (29) forAction -> ID . DECREMENTO

    INCREMENTO      shift and go to state 178
    DECREMENTO      shift and go to state 179


state 166

    (30) forAction -> INCREMENTO . ID

    ID              shift and go to state 180


state 167

    (31) forAction -> DECREMENTO . ID

    ID              shift and go to state 181


state 168

    (26) forCondition -> ID MAYORQUE NUMBER .

    PUNTCOM         reduce using rule 26 (forCondition -> ID MAYORQUE NUMBER .)


state 169

    (27) forCondition -> ID MENORQUE NUMBER .

    PUNTCOM         reduce using rule 27 (forCondition -> ID MENORQUE NUMBER .)


state 170

    (32) expresionWhile -> WHILE LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB .

    VAR             reduce using rule 32 (expresionWhile -> WHILE LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB .)
    FOR             reduce using rule 32 (expresionWhile -> WHILE LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB .)
    WHILE           reduce using rule 32 (expresionWhile -> WHILE LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB .)
    IF              reduce using rule 32 (expresionWhile -> WHILE LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB .)
    ID              reduce using rule 32 (expresionWhile -> WHILE LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB .)
    PRINT           reduce using rule 32 (expresionWhile -> WHILE LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB .)
    VOID            reduce using rule 32 (expresionWhile -> WHILE LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB .)
    MAPA            reduce using rule 32 (expresionWhile -> WHILE LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB .)
    $end            reduce using rule 32 (expresionWhile -> WHILE LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB .)
    RCURLYB         reduce using rule 32 (expresionWhile -> WHILE LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB .)


state 171

    (33) expresionIf -> IF LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB .

    VAR             reduce using rule 33 (expresionIf -> IF LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB .)
    FOR             reduce using rule 33 (expresionIf -> IF LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB .)
    WHILE           reduce using rule 33 (expresionIf -> IF LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB .)
    IF              reduce using rule 33 (expresionIf -> IF LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB .)
    ID              reduce using rule 33 (expresionIf -> IF LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB .)
    PRINT           reduce using rule 33 (expresionIf -> IF LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB .)
    VOID            reduce using rule 33 (expresionIf -> IF LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB .)
    MAPA            reduce using rule 33 (expresionIf -> IF LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB .)
    $end            reduce using rule 33 (expresionIf -> IF LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB .)
    RCURLYB         reduce using rule 33 (expresionIf -> IF LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB .)


state 172

    (84) final_key -> LCURLYB expresion RCURLYB .

    VAR             reduce using rule 84 (final_key -> LCURLYB expresion RCURLYB .)
    FOR             reduce using rule 84 (final_key -> LCURLYB expresion RCURLYB .)
    WHILE           reduce using rule 84 (final_key -> LCURLYB expresion RCURLYB .)
    IF              reduce using rule 84 (final_key -> LCURLYB expresion RCURLYB .)
    ID              reduce using rule 84 (final_key -> LCURLYB expresion RCURLYB .)
    PRINT           reduce using rule 84 (final_key -> LCURLYB expresion RCURLYB .)
    VOID            reduce using rule 84 (final_key -> LCURLYB expresion RCURLYB .)
    MAPA            reduce using rule 84 (final_key -> LCURLYB expresion RCURLYB .)
    $end            reduce using rule 84 (final_key -> LCURLYB expresion RCURLYB .)
    RCURLYB         reduce using rule 84 (final_key -> LCURLYB expresion RCURLYB .)


state 173

    (67) expMapa -> MAPA ID EQUALS LCURLYB elementosMapa RCURLYB pto_coma .

    VAR             reduce using rule 67 (expMapa -> MAPA ID EQUALS LCURLYB elementosMapa RCURLYB pto_coma .)
    FOR             reduce using rule 67 (expMapa -> MAPA ID EQUALS LCURLYB elementosMapa RCURLYB pto_coma .)
    WHILE           reduce using rule 67 (expMapa -> MAPA ID EQUALS LCURLYB elementosMapa RCURLYB pto_coma .)
    IF              reduce using rule 67 (expMapa -> MAPA ID EQUALS LCURLYB elementosMapa RCURLYB pto_coma .)
    ID              reduce using rule 67 (expMapa -> MAPA ID EQUALS LCURLYB elementosMapa RCURLYB pto_coma .)
    PRINT           reduce using rule 67 (expMapa -> MAPA ID EQUALS LCURLYB elementosMapa RCURLYB pto_coma .)
    VOID            reduce using rule 67 (expMapa -> MAPA ID EQUALS LCURLYB elementosMapa RCURLYB pto_coma .)
    MAPA            reduce using rule 67 (expMapa -> MAPA ID EQUALS LCURLYB elementosMapa RCURLYB pto_coma .)
    $end            reduce using rule 67 (expMapa -> MAPA ID EQUALS LCURLYB elementosMapa RCURLYB pto_coma .)
    RCURLYB         reduce using rule 67 (expMapa -> MAPA ID EQUALS LCURLYB elementosMapa RCURLYB pto_coma .)


state 174

    (68) elementosMapa -> num_cadena DOSPTO num_cadena .
    (69) elementosMapa -> num_cadena DOSPTO num_cadena . COMA elementosMapa

    RCURLYB         reduce using rule 68 (elementosMapa -> num_cadena DOSPTO num_cadena .)
    COMA            shift and go to state 182


state 175

    (78) concatenacion -> VAR ID EQUALS ID PTO SUBSTRING LPAREN NUMBER . COMA NUMBER RPAREN pto_coma

    COMA            shift and go to state 183


state 176

    (49) expLista -> VAR ID EQUALS NEW LISTA LPAREN inicializaLista RPAREN . pto_coma
    (86) pto_coma -> . PUNTCOM

    PUNTCOM         shift and go to state 40

    pto_coma                       shift and go to state 184

state 177

    (66) expMapa -> VAR ID EQUALS NEW MAPA LPAREN RPAREN pto_coma .

    VAR             reduce using rule 66 (expMapa -> VAR ID EQUALS NEW MAPA LPAREN RPAREN pto_coma .)
    FOR             reduce using rule 66 (expMapa -> VAR ID EQUALS NEW MAPA LPAREN RPAREN pto_coma .)
    WHILE           reduce using rule 66 (expMapa -> VAR ID EQUALS NEW MAPA LPAREN RPAREN pto_coma .)
    IF              reduce using rule 66 (expMapa -> VAR ID EQUALS NEW MAPA LPAREN RPAREN pto_coma .)
    ID              reduce using rule 66 (expMapa -> VAR ID EQUALS NEW MAPA LPAREN RPAREN pto_coma .)
    PRINT           reduce using rule 66 (expMapa -> VAR ID EQUALS NEW MAPA LPAREN RPAREN pto_coma .)
    VOID            reduce using rule 66 (expMapa -> VAR ID EQUALS NEW MAPA LPAREN RPAREN pto_coma .)
    MAPA            reduce using rule 66 (expMapa -> VAR ID EQUALS NEW MAPA LPAREN RPAREN pto_coma .)
    $end            reduce using rule 66 (expMapa -> VAR ID EQUALS NEW MAPA LPAREN RPAREN pto_coma .)
    RCURLYB         reduce using rule 66 (expMapa -> VAR ID EQUALS NEW MAPA LPAREN RPAREN pto_coma .)


state 178

    (28) forAction -> ID INCREMENTO .

    RPAREN          reduce using rule 28 (forAction -> ID INCREMENTO .)


state 179

    (29) forAction -> ID DECREMENTO .

    RPAREN          reduce using rule 29 (forAction -> ID DECREMENTO .)


state 180

    (30) forAction -> INCREMENTO ID .

    RPAREN          reduce using rule 30 (forAction -> INCREMENTO ID .)


state 181

    (31) forAction -> DECREMENTO ID .

    RPAREN          reduce using rule 31 (forAction -> DECREMENTO ID .)


state 182

    (69) elementosMapa -> num_cadena DOSPTO num_cadena COMA . elementosMapa
    (68) elementosMapa -> . num_cadena DOSPTO num_cadena
    (69) elementosMapa -> . num_cadena DOSPTO num_cadena COMA elementosMapa
    (57) num_cadena -> . NUMBER
    (58) num_cadena -> . CADENA

    NUMBER          shift and go to state 111
    CADENA          shift and go to state 112

    num_cadena                     shift and go to state 129
    elementosMapa                  shift and go to state 185

state 183

    (78) concatenacion -> VAR ID EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA . NUMBER RPAREN pto_coma

    NUMBER          shift and go to state 186


state 184

    (49) expLista -> VAR ID EQUALS NEW LISTA LPAREN inicializaLista RPAREN pto_coma .

    VAR             reduce using rule 49 (expLista -> VAR ID EQUALS NEW LISTA LPAREN inicializaLista RPAREN pto_coma .)
    FOR             reduce using rule 49 (expLista -> VAR ID EQUALS NEW LISTA LPAREN inicializaLista RPAREN pto_coma .)
    WHILE           reduce using rule 49 (expLista -> VAR ID EQUALS NEW LISTA LPAREN inicializaLista RPAREN pto_coma .)
    IF              reduce using rule 49 (expLista -> VAR ID EQUALS NEW LISTA LPAREN inicializaLista RPAREN pto_coma .)
    ID              reduce using rule 49 (expLista -> VAR ID EQUALS NEW LISTA LPAREN inicializaLista RPAREN pto_coma .)
    PRINT           reduce using rule 49 (expLista -> VAR ID EQUALS NEW LISTA LPAREN inicializaLista RPAREN pto_coma .)
    VOID            reduce using rule 49 (expLista -> VAR ID EQUALS NEW LISTA LPAREN inicializaLista RPAREN pto_coma .)
    MAPA            reduce using rule 49 (expLista -> VAR ID EQUALS NEW LISTA LPAREN inicializaLista RPAREN pto_coma .)
    $end            reduce using rule 49 (expLista -> VAR ID EQUALS NEW LISTA LPAREN inicializaLista RPAREN pto_coma .)
    RCURLYB         reduce using rule 49 (expLista -> VAR ID EQUALS NEW LISTA LPAREN inicializaLista RPAREN pto_coma .)


state 185

    (69) elementosMapa -> num_cadena DOSPTO num_cadena COMA elementosMapa .

    RCURLYB         reduce using rule 69 (elementosMapa -> num_cadena DOSPTO num_cadena COMA elementosMapa .)


state 186

    (78) concatenacion -> VAR ID EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER . RPAREN pto_coma

    RPAREN          shift and go to state 187


state 187

    (78) concatenacion -> VAR ID EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN . pto_coma
    (86) pto_coma -> . PUNTCOM

    PUNTCOM         shift and go to state 40

    pto_coma                       shift and go to state 188

state 188

    (78) concatenacion -> VAR ID EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN pto_coma .

    VAR             reduce using rule 78 (concatenacion -> VAR ID EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN pto_coma .)
    FOR             reduce using rule 78 (concatenacion -> VAR ID EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN pto_coma .)
    WHILE           reduce using rule 78 (concatenacion -> VAR ID EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN pto_coma .)
    IF              reduce using rule 78 (concatenacion -> VAR ID EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN pto_coma .)
    ID              reduce using rule 78 (concatenacion -> VAR ID EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN pto_coma .)
    PRINT           reduce using rule 78 (concatenacion -> VAR ID EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN pto_coma .)
    VOID            reduce using rule 78 (concatenacion -> VAR ID EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN pto_coma .)
    MAPA            reduce using rule 78 (concatenacion -> VAR ID EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN pto_coma .)
    $end            reduce using rule 78 (concatenacion -> VAR ID EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN pto_coma .)
    RCURLYB         reduce using rule 78 (concatenacion -> VAR ID EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN pto_coma .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for VAR in state 25 resolved as shift
WARNING: shift/reduce conflict for FOR in state 25 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 25 resolved as shift
WARNING: shift/reduce conflict for IF in state 25 resolved as shift
WARNING: shift/reduce conflict for ID in state 25 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 25 resolved as shift
WARNING: shift/reduce conflict for VOID in state 25 resolved as shift
WARNING: shift/reduce conflict for MAPA in state 25 resolved as shift
WARNING: shift/reduce conflict for EQUIVAL in state 119 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 131 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 131 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 131 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 131 resolved as shift
WARNING: shift/reduce conflict for DIVIDE_E in state 131 resolved as shift
