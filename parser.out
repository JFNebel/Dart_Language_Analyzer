Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    COMIILLATS
    COMILLAD
    COMILLAS
    COMILLATD
    NOT
    OR
    PRINT
    PUT
    UPDATE
    VARBOOL
    VARDOUBLE

Grammar

Rule 0     S' -> expresion
Rule 1     expresion -> lista
Rule 2     expresion -> mapa
Rule 3     expresion -> variable
Rule 4     expresion -> expresionFor
Rule 5     expresion -> expresionWhile
Rule 6     expresion -> concatenacion
Rule 7     expresion -> incremento
Rule 8     expresion -> decremento
Rule 9     variable -> VAR ID EQUALS expresionVar PUNTCOM
Rule 10    variable -> VAR ID PUNTCOM
Rule 11    variable -> VAR ID EQUALS expresionBool PUNTCOM
Rule 12    valorVar -> NUMBER
Rule 13    valorVar -> DOUBLE
Rule 14    valorVar -> CADENA
Rule 15    expresionVar -> valorVar
Rule 16    expresionVar -> ID
Rule 17    expresionVar -> expresionVar operadorA expresionVar
Rule 18    expresionFor -> FOR LPAREN forParameters RPAREN LCURLYB RCURLYB
Rule 19    forParameters -> forIterator PUNTCOM forCondition PUNTCOM forAction
Rule 20    forIterator -> INT ID EQUALS NUMBER
Rule 21    forIterator -> ID EQUALS NUMBER
Rule 22    forCondition -> ID MAYORQUE NUMBER
Rule 23    forCondition -> ID MENORQUE NUMBER
Rule 24    forAction -> ID INCREMENTO
Rule 25    forAction -> ID DECREMENTO
Rule 26    forAction -> INCREMENTO ID
Rule 27    forAction -> DECREMENTO ID
Rule 28    expresionWhile -> WHILE LPAREN expresionBool RPAREN LCURLYB RCURLYB
Rule 29    expresionBool -> booleano
Rule 30    expresionBool -> ID comparador ID
Rule 31    expresionBool -> ID comparador NUMBER
Rule 32    expresionBool -> NUMBER comparador ID
Rule 33    expresionBool -> NUMBER comparador NUMBER
Rule 34    booleano -> TRUE
Rule 35    booleano -> FALSE
Rule 36    comparador -> MAYORQUE
Rule 37    comparador -> MENORQUE
Rule 38    comparador -> EQUIVAL
Rule 39    comparador -> MINEQ
Rule 40    comparador -> MAYEQ
Rule 41    lista -> expLista
Rule 42    lista -> add_lista
Rule 43    expLista -> VAR ID EQUALS NEW LISTA LPAREN NUMBER RPAREN pto_coma
Rule 44    expLista -> VAR ID EQUALS NEW LISTA LPAREN RPAREN pto_coma
Rule 45    expLista -> VAR ID EQUALS LCORCHETE elementosLista RCORCHETE pto_coma
Rule 46    add_lista -> ID LCORCHETE NUMBER RCORCHETE EQUALS num_cadena pto_coma
Rule 47    add_lista -> ID PTO ADD LPAREN num_cadena RPAREN pto_coma
Rule 48    num_cadena -> NUMBER
Rule 49    num_cadena -> CADENA
Rule 50    elementosLista -> CADENA
Rule 51    elementosLista -> NUMBER
Rule 52    elementosLista -> CADENA COMA elementosLista
Rule 53    elementosLista -> NUMBER COMA elementosLista
Rule 54    elementosLista -> <empty>
Rule 55    mapa -> expMapa
Rule 56    mapa -> add_mapa
Rule 57    expMapa -> VAR ID EQUALS NEW MAPA LPAREN RPAREN pto_coma
Rule 58    expMapa -> MAPA ID EQUALS LCURLYB elementosMapa RCURLYB pto_coma
Rule 59    elementosMapa -> num_cadena DOSPTO num_cadena
Rule 60    elementosMapa -> num_cadena DOSPTO num_cadena COMA elementosMapa
Rule 61    add_mapa -> ID LCORCHETE CADENA RCORCHETE EQUALS CADENA pto_coma
Rule 62    operadorA -> PLUS
Rule 63    operadorA -> MINUS
Rule 64    operadorA -> TIMES
Rule 65    operadorA -> DIVIDE
Rule 66    operadorA -> DIVIDE_E
Rule 67    incremento -> ID INCREMENTO pto_coma
Rule 68    decremento -> ID DECREMENTO pto_coma
Rule 69    concatenacion -> VAR ID EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN pto_coma
Rule 70    pto_coma -> PUNTCOM

Terminals, with rules where they appear

ADD                  : 47
AND                  : 
CADENA               : 14 49 50 52 61 61
COMA                 : 52 53 60 69
COMIILLATS           : 
COMILLAD             : 
COMILLAS             : 
COMILLATD            : 
DECREMENTO           : 25 27 68
DIVIDE               : 65
DIVIDE_E             : 66
DOSPTO               : 59 60
DOUBLE               : 13
EQUALS               : 9 11 20 21 43 44 45 46 57 58 61 69
EQUIVAL              : 38
FALSE                : 35
FOR                  : 18
ID                   : 9 10 11 16 20 21 22 23 24 25 26 27 30 30 31 32 43 44 45 46 47 57 58 61 67 68 69 69
INCREMENTO           : 24 26 67
INT                  : 20
LCORCHETE            : 45 46 61
LCURLYB              : 18 28 58
LISTA                : 43 44
LPAREN               : 18 28 43 44 47 57 69
MAPA                 : 57 58
MAYEQ                : 40
MAYORQUE             : 22 36
MENORQUE             : 23 37
MINEQ                : 39
MINUS                : 63
NEW                  : 43 44 57
NOT                  : 
NUMBER               : 12 20 21 22 23 31 32 33 33 43 46 48 51 53 69 69
OR                   : 
PLUS                 : 62
PRINT                : 
PTO                  : 47 69
PUNTCOM              : 9 10 11 19 19 70
PUT                  : 
RCORCHETE            : 45 46 61
RCURLYB              : 18 28 58
RPAREN               : 18 28 43 44 47 57 69
SUBSTRING            : 69
TIMES                : 64
TRUE                 : 34
UPDATE               : 
VAR                  : 9 10 11 43 44 45 57 69
VARBOOL              : 
VARDOUBLE            : 
WHILE                : 28
error                : 

Nonterminals, with rules where they appear

add_lista            : 42
add_mapa             : 56
booleano             : 29
comparador           : 30 31 32 33
concatenacion        : 6
decremento           : 8
elementosLista       : 45 52 53
elementosMapa        : 58 60
expLista             : 41
expMapa              : 55
expresion            : 0
expresionBool        : 11 28
expresionFor         : 4
expresionVar         : 9 17 17
expresionWhile       : 5
forAction            : 19
forCondition         : 19
forIterator          : 19
forParameters        : 18
incremento           : 7
lista                : 1
mapa                 : 2
num_cadena           : 46 47 59 59 60 60
operadorA            : 17
pto_coma             : 43 44 45 46 47 57 58 61 67 68 69
valorVar             : 15
variable             : 3

Parsing method: LALR

state 0

    (0) S' -> . expresion
    (1) expresion -> . lista
    (2) expresion -> . mapa
    (3) expresion -> . variable
    (4) expresion -> . expresionFor
    (5) expresion -> . expresionWhile
    (6) expresion -> . concatenacion
    (7) expresion -> . incremento
    (8) expresion -> . decremento
    (41) lista -> . expLista
    (42) lista -> . add_lista
    (55) mapa -> . expMapa
    (56) mapa -> . add_mapa
    (9) variable -> . VAR ID EQUALS expresionVar PUNTCOM
    (10) variable -> . VAR ID PUNTCOM
    (11) variable -> . VAR ID EQUALS expresionBool PUNTCOM
    (18) expresionFor -> . FOR LPAREN forParameters RPAREN LCURLYB RCURLYB
    (28) expresionWhile -> . WHILE LPAREN expresionBool RPAREN LCURLYB RCURLYB
    (69) concatenacion -> . VAR ID EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN pto_coma
    (67) incremento -> . ID INCREMENTO pto_coma
    (68) decremento -> . ID DECREMENTO pto_coma
    (43) expLista -> . VAR ID EQUALS NEW LISTA LPAREN NUMBER RPAREN pto_coma
    (44) expLista -> . VAR ID EQUALS NEW LISTA LPAREN RPAREN pto_coma
    (45) expLista -> . VAR ID EQUALS LCORCHETE elementosLista RCORCHETE pto_coma
    (46) add_lista -> . ID LCORCHETE NUMBER RCORCHETE EQUALS num_cadena pto_coma
    (47) add_lista -> . ID PTO ADD LPAREN num_cadena RPAREN pto_coma
    (57) expMapa -> . VAR ID EQUALS NEW MAPA LPAREN RPAREN pto_coma
    (58) expMapa -> . MAPA ID EQUALS LCURLYB elementosMapa RCURLYB pto_coma
    (61) add_mapa -> . ID LCORCHETE CADENA RCORCHETE EQUALS CADENA pto_coma

    VAR             shift and go to state 14
    FOR             shift and go to state 16
    WHILE           shift and go to state 17
    ID              shift and go to state 15
    MAPA            shift and go to state 18

    expresion                      shift and go to state 1
    lista                          shift and go to state 2
    mapa                           shift and go to state 3
    variable                       shift and go to state 4
    expresionFor                   shift and go to state 5
    expresionWhile                 shift and go to state 6
    concatenacion                  shift and go to state 7
    incremento                     shift and go to state 8
    decremento                     shift and go to state 9
    expLista                       shift and go to state 10
    add_lista                      shift and go to state 11
    expMapa                        shift and go to state 12
    add_mapa                       shift and go to state 13

state 1

    (0) S' -> expresion .



state 2

    (1) expresion -> lista .

    $end            reduce using rule 1 (expresion -> lista .)


state 3

    (2) expresion -> mapa .

    $end            reduce using rule 2 (expresion -> mapa .)


state 4

    (3) expresion -> variable .

    $end            reduce using rule 3 (expresion -> variable .)


state 5

    (4) expresion -> expresionFor .

    $end            reduce using rule 4 (expresion -> expresionFor .)


state 6

    (5) expresion -> expresionWhile .

    $end            reduce using rule 5 (expresion -> expresionWhile .)


state 7

    (6) expresion -> concatenacion .

    $end            reduce using rule 6 (expresion -> concatenacion .)


state 8

    (7) expresion -> incremento .

    $end            reduce using rule 7 (expresion -> incremento .)


state 9

    (8) expresion -> decremento .

    $end            reduce using rule 8 (expresion -> decremento .)


state 10

    (41) lista -> expLista .

    $end            reduce using rule 41 (lista -> expLista .)


state 11

    (42) lista -> add_lista .

    $end            reduce using rule 42 (lista -> add_lista .)


state 12

    (55) mapa -> expMapa .

    $end            reduce using rule 55 (mapa -> expMapa .)


state 13

    (56) mapa -> add_mapa .

    $end            reduce using rule 56 (mapa -> add_mapa .)


state 14

    (9) variable -> VAR . ID EQUALS expresionVar PUNTCOM
    (10) variable -> VAR . ID PUNTCOM
    (11) variable -> VAR . ID EQUALS expresionBool PUNTCOM
    (69) concatenacion -> VAR . ID EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN pto_coma
    (43) expLista -> VAR . ID EQUALS NEW LISTA LPAREN NUMBER RPAREN pto_coma
    (44) expLista -> VAR . ID EQUALS NEW LISTA LPAREN RPAREN pto_coma
    (45) expLista -> VAR . ID EQUALS LCORCHETE elementosLista RCORCHETE pto_coma
    (57) expMapa -> VAR . ID EQUALS NEW MAPA LPAREN RPAREN pto_coma

    ID              shift and go to state 19


state 15

    (67) incremento -> ID . INCREMENTO pto_coma
    (68) decremento -> ID . DECREMENTO pto_coma
    (46) add_lista -> ID . LCORCHETE NUMBER RCORCHETE EQUALS num_cadena pto_coma
    (47) add_lista -> ID . PTO ADD LPAREN num_cadena RPAREN pto_coma
    (61) add_mapa -> ID . LCORCHETE CADENA RCORCHETE EQUALS CADENA pto_coma

    INCREMENTO      shift and go to state 20
    DECREMENTO      shift and go to state 21
    LCORCHETE       shift and go to state 22
    PTO             shift and go to state 23


state 16

    (18) expresionFor -> FOR . LPAREN forParameters RPAREN LCURLYB RCURLYB

    LPAREN          shift and go to state 24


state 17

    (28) expresionWhile -> WHILE . LPAREN expresionBool RPAREN LCURLYB RCURLYB

    LPAREN          shift and go to state 25


state 18

    (58) expMapa -> MAPA . ID EQUALS LCURLYB elementosMapa RCURLYB pto_coma

    ID              shift and go to state 26


state 19

    (9) variable -> VAR ID . EQUALS expresionVar PUNTCOM
    (10) variable -> VAR ID . PUNTCOM
    (11) variable -> VAR ID . EQUALS expresionBool PUNTCOM
    (69) concatenacion -> VAR ID . EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN pto_coma
    (43) expLista -> VAR ID . EQUALS NEW LISTA LPAREN NUMBER RPAREN pto_coma
    (44) expLista -> VAR ID . EQUALS NEW LISTA LPAREN RPAREN pto_coma
    (45) expLista -> VAR ID . EQUALS LCORCHETE elementosLista RCORCHETE pto_coma
    (57) expMapa -> VAR ID . EQUALS NEW MAPA LPAREN RPAREN pto_coma

    EQUALS          shift and go to state 27
    PUNTCOM         shift and go to state 28


state 20

    (67) incremento -> ID INCREMENTO . pto_coma
    (70) pto_coma -> . PUNTCOM

    PUNTCOM         shift and go to state 30

    pto_coma                       shift and go to state 29

state 21

    (68) decremento -> ID DECREMENTO . pto_coma
    (70) pto_coma -> . PUNTCOM

    PUNTCOM         shift and go to state 30

    pto_coma                       shift and go to state 31

state 22

    (46) add_lista -> ID LCORCHETE . NUMBER RCORCHETE EQUALS num_cadena pto_coma
    (61) add_mapa -> ID LCORCHETE . CADENA RCORCHETE EQUALS CADENA pto_coma

    NUMBER          shift and go to state 32
    CADENA          shift and go to state 33


state 23

    (47) add_lista -> ID PTO . ADD LPAREN num_cadena RPAREN pto_coma

    ADD             shift and go to state 34


state 24

    (18) expresionFor -> FOR LPAREN . forParameters RPAREN LCURLYB RCURLYB
    (19) forParameters -> . forIterator PUNTCOM forCondition PUNTCOM forAction
    (20) forIterator -> . INT ID EQUALS NUMBER
    (21) forIterator -> . ID EQUALS NUMBER

    INT             shift and go to state 37
    ID              shift and go to state 38

    forParameters                  shift and go to state 35
    forIterator                    shift and go to state 36

state 25

    (28) expresionWhile -> WHILE LPAREN . expresionBool RPAREN LCURLYB RCURLYB
    (29) expresionBool -> . booleano
    (30) expresionBool -> . ID comparador ID
    (31) expresionBool -> . ID comparador NUMBER
    (32) expresionBool -> . NUMBER comparador ID
    (33) expresionBool -> . NUMBER comparador NUMBER
    (34) booleano -> . TRUE
    (35) booleano -> . FALSE

    ID              shift and go to state 41
    NUMBER          shift and go to state 42
    TRUE            shift and go to state 43
    FALSE           shift and go to state 44

    expresionBool                  shift and go to state 39
    booleano                       shift and go to state 40

state 26

    (58) expMapa -> MAPA ID . EQUALS LCURLYB elementosMapa RCURLYB pto_coma

    EQUALS          shift and go to state 45


state 27

    (9) variable -> VAR ID EQUALS . expresionVar PUNTCOM
    (11) variable -> VAR ID EQUALS . expresionBool PUNTCOM
    (69) concatenacion -> VAR ID EQUALS . ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN pto_coma
    (43) expLista -> VAR ID EQUALS . NEW LISTA LPAREN NUMBER RPAREN pto_coma
    (44) expLista -> VAR ID EQUALS . NEW LISTA LPAREN RPAREN pto_coma
    (45) expLista -> VAR ID EQUALS . LCORCHETE elementosLista RCORCHETE pto_coma
    (57) expMapa -> VAR ID EQUALS . NEW MAPA LPAREN RPAREN pto_coma
    (15) expresionVar -> . valorVar
    (16) expresionVar -> . ID
    (17) expresionVar -> . expresionVar operadorA expresionVar
    (29) expresionBool -> . booleano
    (30) expresionBool -> . ID comparador ID
    (31) expresionBool -> . ID comparador NUMBER
    (32) expresionBool -> . NUMBER comparador ID
    (33) expresionBool -> . NUMBER comparador NUMBER
    (12) valorVar -> . NUMBER
    (13) valorVar -> . DOUBLE
    (14) valorVar -> . CADENA
    (34) booleano -> . TRUE
    (35) booleano -> . FALSE

    ID              shift and go to state 46
    NEW             shift and go to state 50
    LCORCHETE       shift and go to state 51
    NUMBER          shift and go to state 49
    DOUBLE          shift and go to state 53
    CADENA          shift and go to state 54
    TRUE            shift and go to state 43
    FALSE           shift and go to state 44

    expresionVar                   shift and go to state 47
    expresionBool                  shift and go to state 48
    valorVar                       shift and go to state 52
    booleano                       shift and go to state 40

state 28

    (10) variable -> VAR ID PUNTCOM .

    $end            reduce using rule 10 (variable -> VAR ID PUNTCOM .)


state 29

    (67) incremento -> ID INCREMENTO pto_coma .

    $end            reduce using rule 67 (incremento -> ID INCREMENTO pto_coma .)


state 30

    (70) pto_coma -> PUNTCOM .

    $end            reduce using rule 70 (pto_coma -> PUNTCOM .)


state 31

    (68) decremento -> ID DECREMENTO pto_coma .

    $end            reduce using rule 68 (decremento -> ID DECREMENTO pto_coma .)


state 32

    (46) add_lista -> ID LCORCHETE NUMBER . RCORCHETE EQUALS num_cadena pto_coma

    RCORCHETE       shift and go to state 55


state 33

    (61) add_mapa -> ID LCORCHETE CADENA . RCORCHETE EQUALS CADENA pto_coma

    RCORCHETE       shift and go to state 56


state 34

    (47) add_lista -> ID PTO ADD . LPAREN num_cadena RPAREN pto_coma

    LPAREN          shift and go to state 57


state 35

    (18) expresionFor -> FOR LPAREN forParameters . RPAREN LCURLYB RCURLYB

    RPAREN          shift and go to state 58


state 36

    (19) forParameters -> forIterator . PUNTCOM forCondition PUNTCOM forAction

    PUNTCOM         shift and go to state 59


state 37

    (20) forIterator -> INT . ID EQUALS NUMBER

    ID              shift and go to state 60


state 38

    (21) forIterator -> ID . EQUALS NUMBER

    EQUALS          shift and go to state 61


state 39

    (28) expresionWhile -> WHILE LPAREN expresionBool . RPAREN LCURLYB RCURLYB

    RPAREN          shift and go to state 62


state 40

    (29) expresionBool -> booleano .

    RPAREN          reduce using rule 29 (expresionBool -> booleano .)
    PUNTCOM         reduce using rule 29 (expresionBool -> booleano .)


state 41

    (30) expresionBool -> ID . comparador ID
    (31) expresionBool -> ID . comparador NUMBER
    (36) comparador -> . MAYORQUE
    (37) comparador -> . MENORQUE
    (38) comparador -> . EQUIVAL
    (39) comparador -> . MINEQ
    (40) comparador -> . MAYEQ

    MAYORQUE        shift and go to state 64
    MENORQUE        shift and go to state 65
    EQUIVAL         shift and go to state 66
    MINEQ           shift and go to state 67
    MAYEQ           shift and go to state 68

    comparador                     shift and go to state 63

state 42

    (32) expresionBool -> NUMBER . comparador ID
    (33) expresionBool -> NUMBER . comparador NUMBER
    (36) comparador -> . MAYORQUE
    (37) comparador -> . MENORQUE
    (38) comparador -> . EQUIVAL
    (39) comparador -> . MINEQ
    (40) comparador -> . MAYEQ

    MAYORQUE        shift and go to state 64
    MENORQUE        shift and go to state 65
    EQUIVAL         shift and go to state 66
    MINEQ           shift and go to state 67
    MAYEQ           shift and go to state 68

    comparador                     shift and go to state 69

state 43

    (34) booleano -> TRUE .

    RPAREN          reduce using rule 34 (booleano -> TRUE .)
    PUNTCOM         reduce using rule 34 (booleano -> TRUE .)


state 44

    (35) booleano -> FALSE .

    RPAREN          reduce using rule 35 (booleano -> FALSE .)
    PUNTCOM         reduce using rule 35 (booleano -> FALSE .)


state 45

    (58) expMapa -> MAPA ID EQUALS . LCURLYB elementosMapa RCURLYB pto_coma

    LCURLYB         shift and go to state 70


state 46

    (69) concatenacion -> VAR ID EQUALS ID . PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN pto_coma
    (16) expresionVar -> ID .
    (30) expresionBool -> ID . comparador ID
    (31) expresionBool -> ID . comparador NUMBER
    (36) comparador -> . MAYORQUE
    (37) comparador -> . MENORQUE
    (38) comparador -> . EQUIVAL
    (39) comparador -> . MINEQ
    (40) comparador -> . MAYEQ

    PTO             shift and go to state 71
    PUNTCOM         reduce using rule 16 (expresionVar -> ID .)
    PLUS            reduce using rule 16 (expresionVar -> ID .)
    MINUS           reduce using rule 16 (expresionVar -> ID .)
    TIMES           reduce using rule 16 (expresionVar -> ID .)
    DIVIDE          reduce using rule 16 (expresionVar -> ID .)
    DIVIDE_E        reduce using rule 16 (expresionVar -> ID .)
    MAYORQUE        shift and go to state 64
    MENORQUE        shift and go to state 65
    EQUIVAL         shift and go to state 66
    MINEQ           shift and go to state 67
    MAYEQ           shift and go to state 68

    comparador                     shift and go to state 63

state 47

    (9) variable -> VAR ID EQUALS expresionVar . PUNTCOM
    (17) expresionVar -> expresionVar . operadorA expresionVar
    (62) operadorA -> . PLUS
    (63) operadorA -> . MINUS
    (64) operadorA -> . TIMES
    (65) operadorA -> . DIVIDE
    (66) operadorA -> . DIVIDE_E

    PUNTCOM         shift and go to state 72
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    TIMES           shift and go to state 76
    DIVIDE          shift and go to state 77
    DIVIDE_E        shift and go to state 78

    operadorA                      shift and go to state 73

state 48

    (11) variable -> VAR ID EQUALS expresionBool . PUNTCOM

    PUNTCOM         shift and go to state 79


state 49

    (32) expresionBool -> NUMBER . comparador ID
    (33) expresionBool -> NUMBER . comparador NUMBER
    (12) valorVar -> NUMBER .
    (36) comparador -> . MAYORQUE
    (37) comparador -> . MENORQUE
    (38) comparador -> . EQUIVAL
    (39) comparador -> . MINEQ
    (40) comparador -> . MAYEQ

    PUNTCOM         reduce using rule 12 (valorVar -> NUMBER .)
    PLUS            reduce using rule 12 (valorVar -> NUMBER .)
    MINUS           reduce using rule 12 (valorVar -> NUMBER .)
    TIMES           reduce using rule 12 (valorVar -> NUMBER .)
    DIVIDE          reduce using rule 12 (valorVar -> NUMBER .)
    DIVIDE_E        reduce using rule 12 (valorVar -> NUMBER .)
    MAYORQUE        shift and go to state 64
    MENORQUE        shift and go to state 65
    EQUIVAL         shift and go to state 66
    MINEQ           shift and go to state 67
    MAYEQ           shift and go to state 68

    comparador                     shift and go to state 69

state 50

    (43) expLista -> VAR ID EQUALS NEW . LISTA LPAREN NUMBER RPAREN pto_coma
    (44) expLista -> VAR ID EQUALS NEW . LISTA LPAREN RPAREN pto_coma
    (57) expMapa -> VAR ID EQUALS NEW . MAPA LPAREN RPAREN pto_coma

    LISTA           shift and go to state 80
    MAPA            shift and go to state 81


state 51

    (45) expLista -> VAR ID EQUALS LCORCHETE . elementosLista RCORCHETE pto_coma
    (50) elementosLista -> . CADENA
    (51) elementosLista -> . NUMBER
    (52) elementosLista -> . CADENA COMA elementosLista
    (53) elementosLista -> . NUMBER COMA elementosLista
    (54) elementosLista -> .

    CADENA          shift and go to state 83
    NUMBER          shift and go to state 84
    RCORCHETE       reduce using rule 54 (elementosLista -> .)

    elementosLista                 shift and go to state 82

state 52

    (15) expresionVar -> valorVar .

    PUNTCOM         reduce using rule 15 (expresionVar -> valorVar .)
    PLUS            reduce using rule 15 (expresionVar -> valorVar .)
    MINUS           reduce using rule 15 (expresionVar -> valorVar .)
    TIMES           reduce using rule 15 (expresionVar -> valorVar .)
    DIVIDE          reduce using rule 15 (expresionVar -> valorVar .)
    DIVIDE_E        reduce using rule 15 (expresionVar -> valorVar .)


state 53

    (13) valorVar -> DOUBLE .

    PUNTCOM         reduce using rule 13 (valorVar -> DOUBLE .)
    PLUS            reduce using rule 13 (valorVar -> DOUBLE .)
    MINUS           reduce using rule 13 (valorVar -> DOUBLE .)
    TIMES           reduce using rule 13 (valorVar -> DOUBLE .)
    DIVIDE          reduce using rule 13 (valorVar -> DOUBLE .)
    DIVIDE_E        reduce using rule 13 (valorVar -> DOUBLE .)


state 54

    (14) valorVar -> CADENA .

    PUNTCOM         reduce using rule 14 (valorVar -> CADENA .)
    PLUS            reduce using rule 14 (valorVar -> CADENA .)
    MINUS           reduce using rule 14 (valorVar -> CADENA .)
    TIMES           reduce using rule 14 (valorVar -> CADENA .)
    DIVIDE          reduce using rule 14 (valorVar -> CADENA .)
    DIVIDE_E        reduce using rule 14 (valorVar -> CADENA .)


state 55

    (46) add_lista -> ID LCORCHETE NUMBER RCORCHETE . EQUALS num_cadena pto_coma

    EQUALS          shift and go to state 85


state 56

    (61) add_mapa -> ID LCORCHETE CADENA RCORCHETE . EQUALS CADENA pto_coma

    EQUALS          shift and go to state 86


state 57

    (47) add_lista -> ID PTO ADD LPAREN . num_cadena RPAREN pto_coma
    (48) num_cadena -> . NUMBER
    (49) num_cadena -> . CADENA

    NUMBER          shift and go to state 88
    CADENA          shift and go to state 89

    num_cadena                     shift and go to state 87

state 58

    (18) expresionFor -> FOR LPAREN forParameters RPAREN . LCURLYB RCURLYB

    LCURLYB         shift and go to state 90


state 59

    (19) forParameters -> forIterator PUNTCOM . forCondition PUNTCOM forAction
    (22) forCondition -> . ID MAYORQUE NUMBER
    (23) forCondition -> . ID MENORQUE NUMBER

    ID              shift and go to state 92

    forCondition                   shift and go to state 91

state 60

    (20) forIterator -> INT ID . EQUALS NUMBER

    EQUALS          shift and go to state 93


state 61

    (21) forIterator -> ID EQUALS . NUMBER

    NUMBER          shift and go to state 94


state 62

    (28) expresionWhile -> WHILE LPAREN expresionBool RPAREN . LCURLYB RCURLYB

    LCURLYB         shift and go to state 95


state 63

    (30) expresionBool -> ID comparador . ID
    (31) expresionBool -> ID comparador . NUMBER

    ID              shift and go to state 96
    NUMBER          shift and go to state 97


state 64

    (36) comparador -> MAYORQUE .

    ID              reduce using rule 36 (comparador -> MAYORQUE .)
    NUMBER          reduce using rule 36 (comparador -> MAYORQUE .)


state 65

    (37) comparador -> MENORQUE .

    ID              reduce using rule 37 (comparador -> MENORQUE .)
    NUMBER          reduce using rule 37 (comparador -> MENORQUE .)


state 66

    (38) comparador -> EQUIVAL .

    ID              reduce using rule 38 (comparador -> EQUIVAL .)
    NUMBER          reduce using rule 38 (comparador -> EQUIVAL .)


state 67

    (39) comparador -> MINEQ .

    ID              reduce using rule 39 (comparador -> MINEQ .)
    NUMBER          reduce using rule 39 (comparador -> MINEQ .)


state 68

    (40) comparador -> MAYEQ .

    ID              reduce using rule 40 (comparador -> MAYEQ .)
    NUMBER          reduce using rule 40 (comparador -> MAYEQ .)


state 69

    (32) expresionBool -> NUMBER comparador . ID
    (33) expresionBool -> NUMBER comparador . NUMBER

    ID              shift and go to state 99
    NUMBER          shift and go to state 98


state 70

    (58) expMapa -> MAPA ID EQUALS LCURLYB . elementosMapa RCURLYB pto_coma
    (59) elementosMapa -> . num_cadena DOSPTO num_cadena
    (60) elementosMapa -> . num_cadena DOSPTO num_cadena COMA elementosMapa
    (48) num_cadena -> . NUMBER
    (49) num_cadena -> . CADENA

    NUMBER          shift and go to state 88
    CADENA          shift and go to state 89

    elementosMapa                  shift and go to state 100
    num_cadena                     shift and go to state 101

state 71

    (69) concatenacion -> VAR ID EQUALS ID PTO . SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN pto_coma

    SUBSTRING       shift and go to state 102


state 72

    (9) variable -> VAR ID EQUALS expresionVar PUNTCOM .

    $end            reduce using rule 9 (variable -> VAR ID EQUALS expresionVar PUNTCOM .)


state 73

    (17) expresionVar -> expresionVar operadorA . expresionVar
    (15) expresionVar -> . valorVar
    (16) expresionVar -> . ID
    (17) expresionVar -> . expresionVar operadorA expresionVar
    (12) valorVar -> . NUMBER
    (13) valorVar -> . DOUBLE
    (14) valorVar -> . CADENA

    ID              shift and go to state 104
    NUMBER          shift and go to state 105
    DOUBLE          shift and go to state 53
    CADENA          shift and go to state 54

    expresionVar                   shift and go to state 103
    valorVar                       shift and go to state 52

state 74

    (62) operadorA -> PLUS .

    ID              reduce using rule 62 (operadorA -> PLUS .)
    NUMBER          reduce using rule 62 (operadorA -> PLUS .)
    DOUBLE          reduce using rule 62 (operadorA -> PLUS .)
    CADENA          reduce using rule 62 (operadorA -> PLUS .)


state 75

    (63) operadorA -> MINUS .

    ID              reduce using rule 63 (operadorA -> MINUS .)
    NUMBER          reduce using rule 63 (operadorA -> MINUS .)
    DOUBLE          reduce using rule 63 (operadorA -> MINUS .)
    CADENA          reduce using rule 63 (operadorA -> MINUS .)


state 76

    (64) operadorA -> TIMES .

    ID              reduce using rule 64 (operadorA -> TIMES .)
    NUMBER          reduce using rule 64 (operadorA -> TIMES .)
    DOUBLE          reduce using rule 64 (operadorA -> TIMES .)
    CADENA          reduce using rule 64 (operadorA -> TIMES .)


state 77

    (65) operadorA -> DIVIDE .

    ID              reduce using rule 65 (operadorA -> DIVIDE .)
    NUMBER          reduce using rule 65 (operadorA -> DIVIDE .)
    DOUBLE          reduce using rule 65 (operadorA -> DIVIDE .)
    CADENA          reduce using rule 65 (operadorA -> DIVIDE .)


state 78

    (66) operadorA -> DIVIDE_E .

    ID              reduce using rule 66 (operadorA -> DIVIDE_E .)
    NUMBER          reduce using rule 66 (operadorA -> DIVIDE_E .)
    DOUBLE          reduce using rule 66 (operadorA -> DIVIDE_E .)
    CADENA          reduce using rule 66 (operadorA -> DIVIDE_E .)


state 79

    (11) variable -> VAR ID EQUALS expresionBool PUNTCOM .

    $end            reduce using rule 11 (variable -> VAR ID EQUALS expresionBool PUNTCOM .)


state 80

    (43) expLista -> VAR ID EQUALS NEW LISTA . LPAREN NUMBER RPAREN pto_coma
    (44) expLista -> VAR ID EQUALS NEW LISTA . LPAREN RPAREN pto_coma

    LPAREN          shift and go to state 106


state 81

    (57) expMapa -> VAR ID EQUALS NEW MAPA . LPAREN RPAREN pto_coma

    LPAREN          shift and go to state 107


state 82

    (45) expLista -> VAR ID EQUALS LCORCHETE elementosLista . RCORCHETE pto_coma

    RCORCHETE       shift and go to state 108


state 83

    (50) elementosLista -> CADENA .
    (52) elementosLista -> CADENA . COMA elementosLista

    RCORCHETE       reduce using rule 50 (elementosLista -> CADENA .)
    COMA            shift and go to state 109


state 84

    (51) elementosLista -> NUMBER .
    (53) elementosLista -> NUMBER . COMA elementosLista

    RCORCHETE       reduce using rule 51 (elementosLista -> NUMBER .)
    COMA            shift and go to state 110


state 85

    (46) add_lista -> ID LCORCHETE NUMBER RCORCHETE EQUALS . num_cadena pto_coma
    (48) num_cadena -> . NUMBER
    (49) num_cadena -> . CADENA

    NUMBER          shift and go to state 88
    CADENA          shift and go to state 89

    num_cadena                     shift and go to state 111

state 86

    (61) add_mapa -> ID LCORCHETE CADENA RCORCHETE EQUALS . CADENA pto_coma

    CADENA          shift and go to state 112


state 87

    (47) add_lista -> ID PTO ADD LPAREN num_cadena . RPAREN pto_coma

    RPAREN          shift and go to state 113


state 88

    (48) num_cadena -> NUMBER .

    RPAREN          reduce using rule 48 (num_cadena -> NUMBER .)
    DOSPTO          reduce using rule 48 (num_cadena -> NUMBER .)
    PUNTCOM         reduce using rule 48 (num_cadena -> NUMBER .)
    COMA            reduce using rule 48 (num_cadena -> NUMBER .)
    RCURLYB         reduce using rule 48 (num_cadena -> NUMBER .)


state 89

    (49) num_cadena -> CADENA .

    RPAREN          reduce using rule 49 (num_cadena -> CADENA .)
    DOSPTO          reduce using rule 49 (num_cadena -> CADENA .)
    PUNTCOM         reduce using rule 49 (num_cadena -> CADENA .)
    COMA            reduce using rule 49 (num_cadena -> CADENA .)
    RCURLYB         reduce using rule 49 (num_cadena -> CADENA .)


state 90

    (18) expresionFor -> FOR LPAREN forParameters RPAREN LCURLYB . RCURLYB

    RCURLYB         shift and go to state 114


state 91

    (19) forParameters -> forIterator PUNTCOM forCondition . PUNTCOM forAction

    PUNTCOM         shift and go to state 115


state 92

    (22) forCondition -> ID . MAYORQUE NUMBER
    (23) forCondition -> ID . MENORQUE NUMBER

    MAYORQUE        shift and go to state 116
    MENORQUE        shift and go to state 117


state 93

    (20) forIterator -> INT ID EQUALS . NUMBER

    NUMBER          shift and go to state 118


state 94

    (21) forIterator -> ID EQUALS NUMBER .

    PUNTCOM         reduce using rule 21 (forIterator -> ID EQUALS NUMBER .)


state 95

    (28) expresionWhile -> WHILE LPAREN expresionBool RPAREN LCURLYB . RCURLYB

    RCURLYB         shift and go to state 119


state 96

    (30) expresionBool -> ID comparador ID .

    RPAREN          reduce using rule 30 (expresionBool -> ID comparador ID .)
    PUNTCOM         reduce using rule 30 (expresionBool -> ID comparador ID .)


state 97

    (31) expresionBool -> ID comparador NUMBER .

    RPAREN          reduce using rule 31 (expresionBool -> ID comparador NUMBER .)
    PUNTCOM         reduce using rule 31 (expresionBool -> ID comparador NUMBER .)


state 98

    (33) expresionBool -> NUMBER comparador NUMBER .

    RPAREN          reduce using rule 33 (expresionBool -> NUMBER comparador NUMBER .)
    PUNTCOM         reduce using rule 33 (expresionBool -> NUMBER comparador NUMBER .)


state 99

    (32) expresionBool -> NUMBER comparador ID .

    RPAREN          reduce using rule 32 (expresionBool -> NUMBER comparador ID .)
    PUNTCOM         reduce using rule 32 (expresionBool -> NUMBER comparador ID .)


state 100

    (58) expMapa -> MAPA ID EQUALS LCURLYB elementosMapa . RCURLYB pto_coma

    RCURLYB         shift and go to state 120


state 101

    (59) elementosMapa -> num_cadena . DOSPTO num_cadena
    (60) elementosMapa -> num_cadena . DOSPTO num_cadena COMA elementosMapa

    DOSPTO          shift and go to state 121


state 102

    (69) concatenacion -> VAR ID EQUALS ID PTO SUBSTRING . LPAREN NUMBER COMA NUMBER RPAREN pto_coma

    LPAREN          shift and go to state 122


state 103

    (17) expresionVar -> expresionVar operadorA expresionVar .
    (17) expresionVar -> expresionVar . operadorA expresionVar
    (62) operadorA -> . PLUS
    (63) operadorA -> . MINUS
    (64) operadorA -> . TIMES
    (65) operadorA -> . DIVIDE
    (66) operadorA -> . DIVIDE_E

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DIVIDE_E resolved as shift
    PUNTCOM         reduce using rule 17 (expresionVar -> expresionVar operadorA expresionVar .)
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    TIMES           shift and go to state 76
    DIVIDE          shift and go to state 77
    DIVIDE_E        shift and go to state 78

  ! PLUS            [ reduce using rule 17 (expresionVar -> expresionVar operadorA expresionVar .) ]
  ! MINUS           [ reduce using rule 17 (expresionVar -> expresionVar operadorA expresionVar .) ]
  ! TIMES           [ reduce using rule 17 (expresionVar -> expresionVar operadorA expresionVar .) ]
  ! DIVIDE          [ reduce using rule 17 (expresionVar -> expresionVar operadorA expresionVar .) ]
  ! DIVIDE_E        [ reduce using rule 17 (expresionVar -> expresionVar operadorA expresionVar .) ]

    operadorA                      shift and go to state 73

state 104

    (16) expresionVar -> ID .

    PLUS            reduce using rule 16 (expresionVar -> ID .)
    MINUS           reduce using rule 16 (expresionVar -> ID .)
    TIMES           reduce using rule 16 (expresionVar -> ID .)
    DIVIDE          reduce using rule 16 (expresionVar -> ID .)
    DIVIDE_E        reduce using rule 16 (expresionVar -> ID .)
    PUNTCOM         reduce using rule 16 (expresionVar -> ID .)


state 105

    (12) valorVar -> NUMBER .

    PLUS            reduce using rule 12 (valorVar -> NUMBER .)
    MINUS           reduce using rule 12 (valorVar -> NUMBER .)
    TIMES           reduce using rule 12 (valorVar -> NUMBER .)
    DIVIDE          reduce using rule 12 (valorVar -> NUMBER .)
    DIVIDE_E        reduce using rule 12 (valorVar -> NUMBER .)
    PUNTCOM         reduce using rule 12 (valorVar -> NUMBER .)


state 106

    (43) expLista -> VAR ID EQUALS NEW LISTA LPAREN . NUMBER RPAREN pto_coma
    (44) expLista -> VAR ID EQUALS NEW LISTA LPAREN . RPAREN pto_coma

    NUMBER          shift and go to state 123
    RPAREN          shift and go to state 124


state 107

    (57) expMapa -> VAR ID EQUALS NEW MAPA LPAREN . RPAREN pto_coma

    RPAREN          shift and go to state 125


state 108

    (45) expLista -> VAR ID EQUALS LCORCHETE elementosLista RCORCHETE . pto_coma
    (70) pto_coma -> . PUNTCOM

    PUNTCOM         shift and go to state 30

    pto_coma                       shift and go to state 126

state 109

    (52) elementosLista -> CADENA COMA . elementosLista
    (50) elementosLista -> . CADENA
    (51) elementosLista -> . NUMBER
    (52) elementosLista -> . CADENA COMA elementosLista
    (53) elementosLista -> . NUMBER COMA elementosLista
    (54) elementosLista -> .

    CADENA          shift and go to state 83
    NUMBER          shift and go to state 84
    RCORCHETE       reduce using rule 54 (elementosLista -> .)

    elementosLista                 shift and go to state 127

state 110

    (53) elementosLista -> NUMBER COMA . elementosLista
    (50) elementosLista -> . CADENA
    (51) elementosLista -> . NUMBER
    (52) elementosLista -> . CADENA COMA elementosLista
    (53) elementosLista -> . NUMBER COMA elementosLista
    (54) elementosLista -> .

    CADENA          shift and go to state 83
    NUMBER          shift and go to state 84
    RCORCHETE       reduce using rule 54 (elementosLista -> .)

    elementosLista                 shift and go to state 128

state 111

    (46) add_lista -> ID LCORCHETE NUMBER RCORCHETE EQUALS num_cadena . pto_coma
    (70) pto_coma -> . PUNTCOM

    PUNTCOM         shift and go to state 30

    pto_coma                       shift and go to state 129

state 112

    (61) add_mapa -> ID LCORCHETE CADENA RCORCHETE EQUALS CADENA . pto_coma
    (70) pto_coma -> . PUNTCOM

    PUNTCOM         shift and go to state 30

    pto_coma                       shift and go to state 130

state 113

    (47) add_lista -> ID PTO ADD LPAREN num_cadena RPAREN . pto_coma
    (70) pto_coma -> . PUNTCOM

    PUNTCOM         shift and go to state 30

    pto_coma                       shift and go to state 131

state 114

    (18) expresionFor -> FOR LPAREN forParameters RPAREN LCURLYB RCURLYB .

    $end            reduce using rule 18 (expresionFor -> FOR LPAREN forParameters RPAREN LCURLYB RCURLYB .)


state 115

    (19) forParameters -> forIterator PUNTCOM forCondition PUNTCOM . forAction
    (24) forAction -> . ID INCREMENTO
    (25) forAction -> . ID DECREMENTO
    (26) forAction -> . INCREMENTO ID
    (27) forAction -> . DECREMENTO ID

    ID              shift and go to state 133
    INCREMENTO      shift and go to state 134
    DECREMENTO      shift and go to state 135

    forAction                      shift and go to state 132

state 116

    (22) forCondition -> ID MAYORQUE . NUMBER

    NUMBER          shift and go to state 136


state 117

    (23) forCondition -> ID MENORQUE . NUMBER

    NUMBER          shift and go to state 137


state 118

    (20) forIterator -> INT ID EQUALS NUMBER .

    PUNTCOM         reduce using rule 20 (forIterator -> INT ID EQUALS NUMBER .)


state 119

    (28) expresionWhile -> WHILE LPAREN expresionBool RPAREN LCURLYB RCURLYB .

    $end            reduce using rule 28 (expresionWhile -> WHILE LPAREN expresionBool RPAREN LCURLYB RCURLYB .)


state 120

    (58) expMapa -> MAPA ID EQUALS LCURLYB elementosMapa RCURLYB . pto_coma
    (70) pto_coma -> . PUNTCOM

    PUNTCOM         shift and go to state 30

    pto_coma                       shift and go to state 138

state 121

    (59) elementosMapa -> num_cadena DOSPTO . num_cadena
    (60) elementosMapa -> num_cadena DOSPTO . num_cadena COMA elementosMapa
    (48) num_cadena -> . NUMBER
    (49) num_cadena -> . CADENA

    NUMBER          shift and go to state 88
    CADENA          shift and go to state 89

    num_cadena                     shift and go to state 139

state 122

    (69) concatenacion -> VAR ID EQUALS ID PTO SUBSTRING LPAREN . NUMBER COMA NUMBER RPAREN pto_coma

    NUMBER          shift and go to state 140


state 123

    (43) expLista -> VAR ID EQUALS NEW LISTA LPAREN NUMBER . RPAREN pto_coma

    RPAREN          shift and go to state 141


state 124

    (44) expLista -> VAR ID EQUALS NEW LISTA LPAREN RPAREN . pto_coma
    (70) pto_coma -> . PUNTCOM

    PUNTCOM         shift and go to state 30

    pto_coma                       shift and go to state 142

state 125

    (57) expMapa -> VAR ID EQUALS NEW MAPA LPAREN RPAREN . pto_coma
    (70) pto_coma -> . PUNTCOM

    PUNTCOM         shift and go to state 30

    pto_coma                       shift and go to state 143

state 126

    (45) expLista -> VAR ID EQUALS LCORCHETE elementosLista RCORCHETE pto_coma .

    $end            reduce using rule 45 (expLista -> VAR ID EQUALS LCORCHETE elementosLista RCORCHETE pto_coma .)


state 127

    (52) elementosLista -> CADENA COMA elementosLista .

    RCORCHETE       reduce using rule 52 (elementosLista -> CADENA COMA elementosLista .)


state 128

    (53) elementosLista -> NUMBER COMA elementosLista .

    RCORCHETE       reduce using rule 53 (elementosLista -> NUMBER COMA elementosLista .)


state 129

    (46) add_lista -> ID LCORCHETE NUMBER RCORCHETE EQUALS num_cadena pto_coma .

    $end            reduce using rule 46 (add_lista -> ID LCORCHETE NUMBER RCORCHETE EQUALS num_cadena pto_coma .)


state 130

    (61) add_mapa -> ID LCORCHETE CADENA RCORCHETE EQUALS CADENA pto_coma .

    $end            reduce using rule 61 (add_mapa -> ID LCORCHETE CADENA RCORCHETE EQUALS CADENA pto_coma .)


state 131

    (47) add_lista -> ID PTO ADD LPAREN num_cadena RPAREN pto_coma .

    $end            reduce using rule 47 (add_lista -> ID PTO ADD LPAREN num_cadena RPAREN pto_coma .)


state 132

    (19) forParameters -> forIterator PUNTCOM forCondition PUNTCOM forAction .

    RPAREN          reduce using rule 19 (forParameters -> forIterator PUNTCOM forCondition PUNTCOM forAction .)


state 133

    (24) forAction -> ID . INCREMENTO
    (25) forAction -> ID . DECREMENTO

    INCREMENTO      shift and go to state 144
    DECREMENTO      shift and go to state 145


state 134

    (26) forAction -> INCREMENTO . ID

    ID              shift and go to state 146


state 135

    (27) forAction -> DECREMENTO . ID

    ID              shift and go to state 147


state 136

    (22) forCondition -> ID MAYORQUE NUMBER .

    PUNTCOM         reduce using rule 22 (forCondition -> ID MAYORQUE NUMBER .)


state 137

    (23) forCondition -> ID MENORQUE NUMBER .

    PUNTCOM         reduce using rule 23 (forCondition -> ID MENORQUE NUMBER .)


state 138

    (58) expMapa -> MAPA ID EQUALS LCURLYB elementosMapa RCURLYB pto_coma .

    $end            reduce using rule 58 (expMapa -> MAPA ID EQUALS LCURLYB elementosMapa RCURLYB pto_coma .)


state 139

    (59) elementosMapa -> num_cadena DOSPTO num_cadena .
    (60) elementosMapa -> num_cadena DOSPTO num_cadena . COMA elementosMapa

    RCURLYB         reduce using rule 59 (elementosMapa -> num_cadena DOSPTO num_cadena .)
    COMA            shift and go to state 148


state 140

    (69) concatenacion -> VAR ID EQUALS ID PTO SUBSTRING LPAREN NUMBER . COMA NUMBER RPAREN pto_coma

    COMA            shift and go to state 149


state 141

    (43) expLista -> VAR ID EQUALS NEW LISTA LPAREN NUMBER RPAREN . pto_coma
    (70) pto_coma -> . PUNTCOM

    PUNTCOM         shift and go to state 30

    pto_coma                       shift and go to state 150

state 142

    (44) expLista -> VAR ID EQUALS NEW LISTA LPAREN RPAREN pto_coma .

    $end            reduce using rule 44 (expLista -> VAR ID EQUALS NEW LISTA LPAREN RPAREN pto_coma .)


state 143

    (57) expMapa -> VAR ID EQUALS NEW MAPA LPAREN RPAREN pto_coma .

    $end            reduce using rule 57 (expMapa -> VAR ID EQUALS NEW MAPA LPAREN RPAREN pto_coma .)


state 144

    (24) forAction -> ID INCREMENTO .

    RPAREN          reduce using rule 24 (forAction -> ID INCREMENTO .)


state 145

    (25) forAction -> ID DECREMENTO .

    RPAREN          reduce using rule 25 (forAction -> ID DECREMENTO .)


state 146

    (26) forAction -> INCREMENTO ID .

    RPAREN          reduce using rule 26 (forAction -> INCREMENTO ID .)


state 147

    (27) forAction -> DECREMENTO ID .

    RPAREN          reduce using rule 27 (forAction -> DECREMENTO ID .)


state 148

    (60) elementosMapa -> num_cadena DOSPTO num_cadena COMA . elementosMapa
    (59) elementosMapa -> . num_cadena DOSPTO num_cadena
    (60) elementosMapa -> . num_cadena DOSPTO num_cadena COMA elementosMapa
    (48) num_cadena -> . NUMBER
    (49) num_cadena -> . CADENA

    NUMBER          shift and go to state 88
    CADENA          shift and go to state 89

    num_cadena                     shift and go to state 101
    elementosMapa                  shift and go to state 151

state 149

    (69) concatenacion -> VAR ID EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA . NUMBER RPAREN pto_coma

    NUMBER          shift and go to state 152


state 150

    (43) expLista -> VAR ID EQUALS NEW LISTA LPAREN NUMBER RPAREN pto_coma .

    $end            reduce using rule 43 (expLista -> VAR ID EQUALS NEW LISTA LPAREN NUMBER RPAREN pto_coma .)


state 151

    (60) elementosMapa -> num_cadena DOSPTO num_cadena COMA elementosMapa .

    RCURLYB         reduce using rule 60 (elementosMapa -> num_cadena DOSPTO num_cadena COMA elementosMapa .)


state 152

    (69) concatenacion -> VAR ID EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER . RPAREN pto_coma

    RPAREN          shift and go to state 153


state 153

    (69) concatenacion -> VAR ID EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN . pto_coma
    (70) pto_coma -> . PUNTCOM

    PUNTCOM         shift and go to state 30

    pto_coma                       shift and go to state 154

state 154

    (69) concatenacion -> VAR ID EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN pto_coma .

    $end            reduce using rule 69 (concatenacion -> VAR ID EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN pto_coma .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 103 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 103 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 103 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 103 resolved as shift
WARNING: shift/reduce conflict for DIVIDE_E in state 103 resolved as shift
