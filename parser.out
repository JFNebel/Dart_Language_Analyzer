Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    COMIILLATS
    COMILLAD
    COMILLAS
    COMILLATD
    NOT
    OR
    PRINT
    PUT
    UPDATE
    VARBOOL
    VARDOUBLE

Grammar

Rule 0     S' -> expresion
Rule 1     expresion -> lista
Rule 2     expresion -> mapa
Rule 3     expresion -> variable
Rule 4     expresion -> expresionFor
Rule 5     expresion -> expresionWhile
Rule 6     expresion -> expresionIf
Rule 7     expresion -> concatenacion
Rule 8     expresion -> incremento
Rule 9     expresion -> decremento
Rule 10    expresion -> expresion expresion
Rule 11    variable -> VAR ID EQUALS expresionVar PUNTCOM
Rule 12    variable -> VAR ID PUNTCOM
Rule 13    variable -> VAR ID EQUALS expresionBool PUNTCOM
Rule 14    valorVar -> NUMBER
Rule 15    valorVar -> DOUBLE
Rule 16    valorVar -> CADENA
Rule 17    expresionVar -> valorVar
Rule 18    expresionVar -> ID
Rule 19    expresionVar -> expresionVar operadorA expresionVar
Rule 20    expresionFor -> FOR LPAREN forParameters RPAREN LCURLYB expresion RCURLYB
Rule 21    forParameters -> forIterator PUNTCOM forCondition PUNTCOM forAction
Rule 22    forIterator -> INT ID EQUALS NUMBER
Rule 23    forIterator -> ID EQUALS NUMBER
Rule 24    forCondition -> ID MAYORQUE NUMBER
Rule 25    forCondition -> ID MENORQUE NUMBER
Rule 26    forAction -> ID INCREMENTO
Rule 27    forAction -> ID DECREMENTO
Rule 28    forAction -> INCREMENTO ID
Rule 29    forAction -> DECREMENTO ID
Rule 30    expresionWhile -> WHILE LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB
Rule 31    expresionIf -> IF LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB
Rule 32    expresionBool -> booleano
Rule 33    expresionBool -> ID comparador ID
Rule 34    expresionBool -> ID comparador NUMBER
Rule 35    expresionBool -> NUMBER comparador ID
Rule 36    expresionBool -> NUMBER comparador NUMBER
Rule 37    expresionBool -> ID EQUIVAL booleano
Rule 38    expresionBool -> booleano EQUIVAL ID
Rule 39    booleano -> TRUE
Rule 40    booleano -> FALSE
Rule 41    comparador -> MAYORQUE
Rule 42    comparador -> MENORQUE
Rule 43    comparador -> EQUIVAL
Rule 44    comparador -> MINEQ
Rule 45    comparador -> MAYEQ
Rule 46    lista -> expLista
Rule 47    lista -> add_lista
Rule 48    expLista -> VAR ID EQUALS NEW LISTA LPAREN NUMBER RPAREN pto_coma
Rule 49    expLista -> VAR ID EQUALS NEW LISTA LPAREN RPAREN pto_coma
Rule 50    expLista -> VAR ID EQUALS LCORCHETE elementosLista RCORCHETE pto_coma
Rule 51    add_lista -> ID LCORCHETE NUMBER RCORCHETE EQUALS num_cadena pto_coma
Rule 52    add_lista -> ID PTO ADD LPAREN num_cadena RPAREN pto_coma
Rule 53    num_cadena -> NUMBER
Rule 54    num_cadena -> CADENA
Rule 55    elementosLista -> CADENA
Rule 56    elementosLista -> NUMBER
Rule 57    elementosLista -> CADENA COMA elementosLista
Rule 58    elementosLista -> NUMBER COMA elementosLista
Rule 59    elementosLista -> <empty>
Rule 60    mapa -> expMapa
Rule 61    mapa -> add_mapa
Rule 62    expMapa -> VAR ID EQUALS NEW MAPA LPAREN RPAREN pto_coma
Rule 63    expMapa -> MAPA ID EQUALS LCURLYB elementosMapa RCURLYB pto_coma
Rule 64    elementosMapa -> num_cadena DOSPTO num_cadena
Rule 65    elementosMapa -> num_cadena DOSPTO num_cadena COMA elementosMapa
Rule 66    add_mapa -> ID LCORCHETE CADENA RCORCHETE EQUALS CADENA pto_coma
Rule 67    operadorA -> PLUS
Rule 68    operadorA -> MINUS
Rule 69    operadorA -> TIMES
Rule 70    operadorA -> DIVIDE
Rule 71    operadorA -> DIVIDE_E
Rule 72    incremento -> ID INCREMENTO pto_coma
Rule 73    decremento -> ID DECREMENTO pto_coma
Rule 74    concatenacion -> VAR ID EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN pto_coma
Rule 75    pto_coma -> PUNTCOM

Terminals, with rules where they appear

ADD                  : 52
AND                  : 
CADENA               : 16 54 55 57 66 66
COMA                 : 57 58 65 74
COMIILLATS           : 
COMILLAD             : 
COMILLAS             : 
COMILLATD            : 
DECREMENTO           : 27 29 73
DIVIDE               : 70
DIVIDE_E             : 71
DOSPTO               : 64 65
DOUBLE               : 15
EQUALS               : 11 13 22 23 48 49 50 51 62 63 66 74
EQUIVAL              : 37 38 43
FALSE                : 40
FOR                  : 20
ID                   : 11 12 13 18 22 23 24 25 26 27 28 29 33 33 34 35 37 38 48 49 50 51 52 62 63 66 72 73 74 74
IF                   : 31
INCREMENTO           : 26 28 72
INT                  : 22
LCORCHETE            : 50 51 66
LCURLYB              : 20 30 31 63
LISTA                : 48 49
LPAREN               : 20 30 31 48 49 52 62 74
MAPA                 : 62 63
MAYEQ                : 45
MAYORQUE             : 24 41
MENORQUE             : 25 42
MINEQ                : 44
MINUS                : 68
NEW                  : 48 49 62
NOT                  : 
NUMBER               : 14 22 23 24 25 34 35 36 36 48 51 53 56 58 74 74
OR                   : 
PLUS                 : 67
PRINT                : 
PTO                  : 52 74
PUNTCOM              : 11 12 13 21 21 75
PUT                  : 
RCORCHETE            : 50 51 66
RCURLYB              : 20 30 31 63
RPAREN               : 20 30 31 48 49 52 62 74
SUBSTRING            : 74
TIMES                : 69
TRUE                 : 39
UPDATE               : 
VAR                  : 11 12 13 48 49 50 62 74
VARBOOL              : 
VARDOUBLE            : 
WHILE                : 30
error                : 

Nonterminals, with rules where they appear

add_lista            : 47
add_mapa             : 61
booleano             : 32 37 38
comparador           : 33 34 35 36
concatenacion        : 7
decremento           : 9
elementosLista       : 50 57 58
elementosMapa        : 63 65
expLista             : 46
expMapa              : 60
expresion            : 10 10 20 30 31 0
expresionBool        : 13 30 31
expresionFor         : 4
expresionIf          : 6
expresionVar         : 11 19 19
expresionWhile       : 5
forAction            : 21
forCondition         : 21
forIterator          : 21
forParameters        : 20
incremento           : 8
lista                : 1
mapa                 : 2
num_cadena           : 51 52 64 64 65 65
operadorA            : 19
pto_coma             : 48 49 50 51 52 62 63 66 72 73 74
valorVar             : 17
variable             : 3

Parsing method: LALR

state 0

    (0) S' -> . expresion
    (1) expresion -> . lista
    (2) expresion -> . mapa
    (3) expresion -> . variable
    (4) expresion -> . expresionFor
    (5) expresion -> . expresionWhile
    (6) expresion -> . expresionIf
    (7) expresion -> . concatenacion
    (8) expresion -> . incremento
    (9) expresion -> . decremento
    (10) expresion -> . expresion expresion
    (46) lista -> . expLista
    (47) lista -> . add_lista
    (60) mapa -> . expMapa
    (61) mapa -> . add_mapa
    (11) variable -> . VAR ID EQUALS expresionVar PUNTCOM
    (12) variable -> . VAR ID PUNTCOM
    (13) variable -> . VAR ID EQUALS expresionBool PUNTCOM
    (20) expresionFor -> . FOR LPAREN forParameters RPAREN LCURLYB expresion RCURLYB
    (30) expresionWhile -> . WHILE LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB
    (31) expresionIf -> . IF LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB
    (74) concatenacion -> . VAR ID EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN pto_coma
    (72) incremento -> . ID INCREMENTO pto_coma
    (73) decremento -> . ID DECREMENTO pto_coma
    (48) expLista -> . VAR ID EQUALS NEW LISTA LPAREN NUMBER RPAREN pto_coma
    (49) expLista -> . VAR ID EQUALS NEW LISTA LPAREN RPAREN pto_coma
    (50) expLista -> . VAR ID EQUALS LCORCHETE elementosLista RCORCHETE pto_coma
    (51) add_lista -> . ID LCORCHETE NUMBER RCORCHETE EQUALS num_cadena pto_coma
    (52) add_lista -> . ID PTO ADD LPAREN num_cadena RPAREN pto_coma
    (62) expMapa -> . VAR ID EQUALS NEW MAPA LPAREN RPAREN pto_coma
    (63) expMapa -> . MAPA ID EQUALS LCURLYB elementosMapa RCURLYB pto_coma
    (66) add_mapa -> . ID LCORCHETE CADENA RCORCHETE EQUALS CADENA pto_coma

    VAR             shift and go to state 15
    FOR             shift and go to state 17
    WHILE           shift and go to state 18
    IF              shift and go to state 19
    ID              shift and go to state 16
    MAPA            shift and go to state 20

    expresion                      shift and go to state 1
    lista                          shift and go to state 2
    mapa                           shift and go to state 3
    variable                       shift and go to state 4
    expresionFor                   shift and go to state 5
    expresionWhile                 shift and go to state 6
    expresionIf                    shift and go to state 7
    concatenacion                  shift and go to state 8
    incremento                     shift and go to state 9
    decremento                     shift and go to state 10
    expLista                       shift and go to state 11
    add_lista                      shift and go to state 12
    expMapa                        shift and go to state 13
    add_mapa                       shift and go to state 14

state 1

    (0) S' -> expresion .
    (10) expresion -> expresion . expresion
    (1) expresion -> . lista
    (2) expresion -> . mapa
    (3) expresion -> . variable
    (4) expresion -> . expresionFor
    (5) expresion -> . expresionWhile
    (6) expresion -> . expresionIf
    (7) expresion -> . concatenacion
    (8) expresion -> . incremento
    (9) expresion -> . decremento
    (10) expresion -> . expresion expresion
    (46) lista -> . expLista
    (47) lista -> . add_lista
    (60) mapa -> . expMapa
    (61) mapa -> . add_mapa
    (11) variable -> . VAR ID EQUALS expresionVar PUNTCOM
    (12) variable -> . VAR ID PUNTCOM
    (13) variable -> . VAR ID EQUALS expresionBool PUNTCOM
    (20) expresionFor -> . FOR LPAREN forParameters RPAREN LCURLYB expresion RCURLYB
    (30) expresionWhile -> . WHILE LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB
    (31) expresionIf -> . IF LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB
    (74) concatenacion -> . VAR ID EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN pto_coma
    (72) incremento -> . ID INCREMENTO pto_coma
    (73) decremento -> . ID DECREMENTO pto_coma
    (48) expLista -> . VAR ID EQUALS NEW LISTA LPAREN NUMBER RPAREN pto_coma
    (49) expLista -> . VAR ID EQUALS NEW LISTA LPAREN RPAREN pto_coma
    (50) expLista -> . VAR ID EQUALS LCORCHETE elementosLista RCORCHETE pto_coma
    (51) add_lista -> . ID LCORCHETE NUMBER RCORCHETE EQUALS num_cadena pto_coma
    (52) add_lista -> . ID PTO ADD LPAREN num_cadena RPAREN pto_coma
    (62) expMapa -> . VAR ID EQUALS NEW MAPA LPAREN RPAREN pto_coma
    (63) expMapa -> . MAPA ID EQUALS LCURLYB elementosMapa RCURLYB pto_coma
    (66) add_mapa -> . ID LCORCHETE CADENA RCORCHETE EQUALS CADENA pto_coma

    VAR             shift and go to state 15
    FOR             shift and go to state 17
    WHILE           shift and go to state 18
    IF              shift and go to state 19
    ID              shift and go to state 16
    MAPA            shift and go to state 20

    expresion                      shift and go to state 21
    lista                          shift and go to state 2
    mapa                           shift and go to state 3
    variable                       shift and go to state 4
    expresionFor                   shift and go to state 5
    expresionWhile                 shift and go to state 6
    expresionIf                    shift and go to state 7
    concatenacion                  shift and go to state 8
    incremento                     shift and go to state 9
    decremento                     shift and go to state 10
    expLista                       shift and go to state 11
    add_lista                      shift and go to state 12
    expMapa                        shift and go to state 13
    add_mapa                       shift and go to state 14

state 2

    (1) expresion -> lista .

    VAR             reduce using rule 1 (expresion -> lista .)
    FOR             reduce using rule 1 (expresion -> lista .)
    WHILE           reduce using rule 1 (expresion -> lista .)
    IF              reduce using rule 1 (expresion -> lista .)
    ID              reduce using rule 1 (expresion -> lista .)
    MAPA            reduce using rule 1 (expresion -> lista .)
    $end            reduce using rule 1 (expresion -> lista .)
    RCURLYB         reduce using rule 1 (expresion -> lista .)


state 3

    (2) expresion -> mapa .

    VAR             reduce using rule 2 (expresion -> mapa .)
    FOR             reduce using rule 2 (expresion -> mapa .)
    WHILE           reduce using rule 2 (expresion -> mapa .)
    IF              reduce using rule 2 (expresion -> mapa .)
    ID              reduce using rule 2 (expresion -> mapa .)
    MAPA            reduce using rule 2 (expresion -> mapa .)
    $end            reduce using rule 2 (expresion -> mapa .)
    RCURLYB         reduce using rule 2 (expresion -> mapa .)


state 4

    (3) expresion -> variable .

    VAR             reduce using rule 3 (expresion -> variable .)
    FOR             reduce using rule 3 (expresion -> variable .)
    WHILE           reduce using rule 3 (expresion -> variable .)
    IF              reduce using rule 3 (expresion -> variable .)
    ID              reduce using rule 3 (expresion -> variable .)
    MAPA            reduce using rule 3 (expresion -> variable .)
    $end            reduce using rule 3 (expresion -> variable .)
    RCURLYB         reduce using rule 3 (expresion -> variable .)


state 5

    (4) expresion -> expresionFor .

    VAR             reduce using rule 4 (expresion -> expresionFor .)
    FOR             reduce using rule 4 (expresion -> expresionFor .)
    WHILE           reduce using rule 4 (expresion -> expresionFor .)
    IF              reduce using rule 4 (expresion -> expresionFor .)
    ID              reduce using rule 4 (expresion -> expresionFor .)
    MAPA            reduce using rule 4 (expresion -> expresionFor .)
    $end            reduce using rule 4 (expresion -> expresionFor .)
    RCURLYB         reduce using rule 4 (expresion -> expresionFor .)


state 6

    (5) expresion -> expresionWhile .

    VAR             reduce using rule 5 (expresion -> expresionWhile .)
    FOR             reduce using rule 5 (expresion -> expresionWhile .)
    WHILE           reduce using rule 5 (expresion -> expresionWhile .)
    IF              reduce using rule 5 (expresion -> expresionWhile .)
    ID              reduce using rule 5 (expresion -> expresionWhile .)
    MAPA            reduce using rule 5 (expresion -> expresionWhile .)
    $end            reduce using rule 5 (expresion -> expresionWhile .)
    RCURLYB         reduce using rule 5 (expresion -> expresionWhile .)


state 7

    (6) expresion -> expresionIf .

    VAR             reduce using rule 6 (expresion -> expresionIf .)
    FOR             reduce using rule 6 (expresion -> expresionIf .)
    WHILE           reduce using rule 6 (expresion -> expresionIf .)
    IF              reduce using rule 6 (expresion -> expresionIf .)
    ID              reduce using rule 6 (expresion -> expresionIf .)
    MAPA            reduce using rule 6 (expresion -> expresionIf .)
    $end            reduce using rule 6 (expresion -> expresionIf .)
    RCURLYB         reduce using rule 6 (expresion -> expresionIf .)


state 8

    (7) expresion -> concatenacion .

    VAR             reduce using rule 7 (expresion -> concatenacion .)
    FOR             reduce using rule 7 (expresion -> concatenacion .)
    WHILE           reduce using rule 7 (expresion -> concatenacion .)
    IF              reduce using rule 7 (expresion -> concatenacion .)
    ID              reduce using rule 7 (expresion -> concatenacion .)
    MAPA            reduce using rule 7 (expresion -> concatenacion .)
    $end            reduce using rule 7 (expresion -> concatenacion .)
    RCURLYB         reduce using rule 7 (expresion -> concatenacion .)


state 9

    (8) expresion -> incremento .

    VAR             reduce using rule 8 (expresion -> incremento .)
    FOR             reduce using rule 8 (expresion -> incremento .)
    WHILE           reduce using rule 8 (expresion -> incremento .)
    IF              reduce using rule 8 (expresion -> incremento .)
    ID              reduce using rule 8 (expresion -> incremento .)
    MAPA            reduce using rule 8 (expresion -> incremento .)
    $end            reduce using rule 8 (expresion -> incremento .)
    RCURLYB         reduce using rule 8 (expresion -> incremento .)


state 10

    (9) expresion -> decremento .

    VAR             reduce using rule 9 (expresion -> decremento .)
    FOR             reduce using rule 9 (expresion -> decremento .)
    WHILE           reduce using rule 9 (expresion -> decremento .)
    IF              reduce using rule 9 (expresion -> decremento .)
    ID              reduce using rule 9 (expresion -> decremento .)
    MAPA            reduce using rule 9 (expresion -> decremento .)
    $end            reduce using rule 9 (expresion -> decremento .)
    RCURLYB         reduce using rule 9 (expresion -> decremento .)


state 11

    (46) lista -> expLista .

    VAR             reduce using rule 46 (lista -> expLista .)
    FOR             reduce using rule 46 (lista -> expLista .)
    WHILE           reduce using rule 46 (lista -> expLista .)
    IF              reduce using rule 46 (lista -> expLista .)
    ID              reduce using rule 46 (lista -> expLista .)
    MAPA            reduce using rule 46 (lista -> expLista .)
    $end            reduce using rule 46 (lista -> expLista .)
    RCURLYB         reduce using rule 46 (lista -> expLista .)


state 12

    (47) lista -> add_lista .

    VAR             reduce using rule 47 (lista -> add_lista .)
    FOR             reduce using rule 47 (lista -> add_lista .)
    WHILE           reduce using rule 47 (lista -> add_lista .)
    IF              reduce using rule 47 (lista -> add_lista .)
    ID              reduce using rule 47 (lista -> add_lista .)
    MAPA            reduce using rule 47 (lista -> add_lista .)
    $end            reduce using rule 47 (lista -> add_lista .)
    RCURLYB         reduce using rule 47 (lista -> add_lista .)


state 13

    (60) mapa -> expMapa .

    VAR             reduce using rule 60 (mapa -> expMapa .)
    FOR             reduce using rule 60 (mapa -> expMapa .)
    WHILE           reduce using rule 60 (mapa -> expMapa .)
    IF              reduce using rule 60 (mapa -> expMapa .)
    ID              reduce using rule 60 (mapa -> expMapa .)
    MAPA            reduce using rule 60 (mapa -> expMapa .)
    $end            reduce using rule 60 (mapa -> expMapa .)
    RCURLYB         reduce using rule 60 (mapa -> expMapa .)


state 14

    (61) mapa -> add_mapa .

    VAR             reduce using rule 61 (mapa -> add_mapa .)
    FOR             reduce using rule 61 (mapa -> add_mapa .)
    WHILE           reduce using rule 61 (mapa -> add_mapa .)
    IF              reduce using rule 61 (mapa -> add_mapa .)
    ID              reduce using rule 61 (mapa -> add_mapa .)
    MAPA            reduce using rule 61 (mapa -> add_mapa .)
    $end            reduce using rule 61 (mapa -> add_mapa .)
    RCURLYB         reduce using rule 61 (mapa -> add_mapa .)


state 15

    (11) variable -> VAR . ID EQUALS expresionVar PUNTCOM
    (12) variable -> VAR . ID PUNTCOM
    (13) variable -> VAR . ID EQUALS expresionBool PUNTCOM
    (74) concatenacion -> VAR . ID EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN pto_coma
    (48) expLista -> VAR . ID EQUALS NEW LISTA LPAREN NUMBER RPAREN pto_coma
    (49) expLista -> VAR . ID EQUALS NEW LISTA LPAREN RPAREN pto_coma
    (50) expLista -> VAR . ID EQUALS LCORCHETE elementosLista RCORCHETE pto_coma
    (62) expMapa -> VAR . ID EQUALS NEW MAPA LPAREN RPAREN pto_coma

    ID              shift and go to state 22


state 16

    (72) incremento -> ID . INCREMENTO pto_coma
    (73) decremento -> ID . DECREMENTO pto_coma
    (51) add_lista -> ID . LCORCHETE NUMBER RCORCHETE EQUALS num_cadena pto_coma
    (52) add_lista -> ID . PTO ADD LPAREN num_cadena RPAREN pto_coma
    (66) add_mapa -> ID . LCORCHETE CADENA RCORCHETE EQUALS CADENA pto_coma

    INCREMENTO      shift and go to state 23
    DECREMENTO      shift and go to state 24
    LCORCHETE       shift and go to state 25
    PTO             shift and go to state 26


state 17

    (20) expresionFor -> FOR . LPAREN forParameters RPAREN LCURLYB expresion RCURLYB

    LPAREN          shift and go to state 27


state 18

    (30) expresionWhile -> WHILE . LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB

    LPAREN          shift and go to state 28


state 19

    (31) expresionIf -> IF . LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB

    LPAREN          shift and go to state 29


state 20

    (63) expMapa -> MAPA . ID EQUALS LCURLYB elementosMapa RCURLYB pto_coma

    ID              shift and go to state 30


state 21

    (10) expresion -> expresion expresion .
    (10) expresion -> expresion . expresion
    (1) expresion -> . lista
    (2) expresion -> . mapa
    (3) expresion -> . variable
    (4) expresion -> . expresionFor
    (5) expresion -> . expresionWhile
    (6) expresion -> . expresionIf
    (7) expresion -> . concatenacion
    (8) expresion -> . incremento
    (9) expresion -> . decremento
    (10) expresion -> . expresion expresion
    (46) lista -> . expLista
    (47) lista -> . add_lista
    (60) mapa -> . expMapa
    (61) mapa -> . add_mapa
    (11) variable -> . VAR ID EQUALS expresionVar PUNTCOM
    (12) variable -> . VAR ID PUNTCOM
    (13) variable -> . VAR ID EQUALS expresionBool PUNTCOM
    (20) expresionFor -> . FOR LPAREN forParameters RPAREN LCURLYB expresion RCURLYB
    (30) expresionWhile -> . WHILE LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB
    (31) expresionIf -> . IF LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB
    (74) concatenacion -> . VAR ID EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN pto_coma
    (72) incremento -> . ID INCREMENTO pto_coma
    (73) decremento -> . ID DECREMENTO pto_coma
    (48) expLista -> . VAR ID EQUALS NEW LISTA LPAREN NUMBER RPAREN pto_coma
    (49) expLista -> . VAR ID EQUALS NEW LISTA LPAREN RPAREN pto_coma
    (50) expLista -> . VAR ID EQUALS LCORCHETE elementosLista RCORCHETE pto_coma
    (51) add_lista -> . ID LCORCHETE NUMBER RCORCHETE EQUALS num_cadena pto_coma
    (52) add_lista -> . ID PTO ADD LPAREN num_cadena RPAREN pto_coma
    (62) expMapa -> . VAR ID EQUALS NEW MAPA LPAREN RPAREN pto_coma
    (63) expMapa -> . MAPA ID EQUALS LCURLYB elementosMapa RCURLYB pto_coma
    (66) add_mapa -> . ID LCORCHETE CADENA RCORCHETE EQUALS CADENA pto_coma

  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MAPA resolved as shift
    $end            reduce using rule 10 (expresion -> expresion expresion .)
    RCURLYB         reduce using rule 10 (expresion -> expresion expresion .)
    VAR             shift and go to state 15
    FOR             shift and go to state 17
    WHILE           shift and go to state 18
    IF              shift and go to state 19
    ID              shift and go to state 16
    MAPA            shift and go to state 20

  ! VAR             [ reduce using rule 10 (expresion -> expresion expresion .) ]
  ! FOR             [ reduce using rule 10 (expresion -> expresion expresion .) ]
  ! WHILE           [ reduce using rule 10 (expresion -> expresion expresion .) ]
  ! IF              [ reduce using rule 10 (expresion -> expresion expresion .) ]
  ! ID              [ reduce using rule 10 (expresion -> expresion expresion .) ]
  ! MAPA            [ reduce using rule 10 (expresion -> expresion expresion .) ]

    expresion                      shift and go to state 21
    lista                          shift and go to state 2
    mapa                           shift and go to state 3
    variable                       shift and go to state 4
    expresionFor                   shift and go to state 5
    expresionWhile                 shift and go to state 6
    expresionIf                    shift and go to state 7
    concatenacion                  shift and go to state 8
    incremento                     shift and go to state 9
    decremento                     shift and go to state 10
    expLista                       shift and go to state 11
    add_lista                      shift and go to state 12
    expMapa                        shift and go to state 13
    add_mapa                       shift and go to state 14

state 22

    (11) variable -> VAR ID . EQUALS expresionVar PUNTCOM
    (12) variable -> VAR ID . PUNTCOM
    (13) variable -> VAR ID . EQUALS expresionBool PUNTCOM
    (74) concatenacion -> VAR ID . EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN pto_coma
    (48) expLista -> VAR ID . EQUALS NEW LISTA LPAREN NUMBER RPAREN pto_coma
    (49) expLista -> VAR ID . EQUALS NEW LISTA LPAREN RPAREN pto_coma
    (50) expLista -> VAR ID . EQUALS LCORCHETE elementosLista RCORCHETE pto_coma
    (62) expMapa -> VAR ID . EQUALS NEW MAPA LPAREN RPAREN pto_coma

    EQUALS          shift and go to state 31
    PUNTCOM         shift and go to state 32


state 23

    (72) incremento -> ID INCREMENTO . pto_coma
    (75) pto_coma -> . PUNTCOM

    PUNTCOM         shift and go to state 34

    pto_coma                       shift and go to state 33

state 24

    (73) decremento -> ID DECREMENTO . pto_coma
    (75) pto_coma -> . PUNTCOM

    PUNTCOM         shift and go to state 34

    pto_coma                       shift and go to state 35

state 25

    (51) add_lista -> ID LCORCHETE . NUMBER RCORCHETE EQUALS num_cadena pto_coma
    (66) add_mapa -> ID LCORCHETE . CADENA RCORCHETE EQUALS CADENA pto_coma

    NUMBER          shift and go to state 36
    CADENA          shift and go to state 37


state 26

    (52) add_lista -> ID PTO . ADD LPAREN num_cadena RPAREN pto_coma

    ADD             shift and go to state 38


state 27

    (20) expresionFor -> FOR LPAREN . forParameters RPAREN LCURLYB expresion RCURLYB
    (21) forParameters -> . forIterator PUNTCOM forCondition PUNTCOM forAction
    (22) forIterator -> . INT ID EQUALS NUMBER
    (23) forIterator -> . ID EQUALS NUMBER

    INT             shift and go to state 41
    ID              shift and go to state 42

    forParameters                  shift and go to state 39
    forIterator                    shift and go to state 40

state 28

    (30) expresionWhile -> WHILE LPAREN . expresionBool RPAREN LCURLYB expresion RCURLYB
    (32) expresionBool -> . booleano
    (33) expresionBool -> . ID comparador ID
    (34) expresionBool -> . ID comparador NUMBER
    (35) expresionBool -> . NUMBER comparador ID
    (36) expresionBool -> . NUMBER comparador NUMBER
    (37) expresionBool -> . ID EQUIVAL booleano
    (38) expresionBool -> . booleano EQUIVAL ID
    (39) booleano -> . TRUE
    (40) booleano -> . FALSE

    ID              shift and go to state 45
    NUMBER          shift and go to state 46
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    expresionBool                  shift and go to state 43
    booleano                       shift and go to state 44

state 29

    (31) expresionIf -> IF LPAREN . expresionBool RPAREN LCURLYB expresion RCURLYB
    (32) expresionBool -> . booleano
    (33) expresionBool -> . ID comparador ID
    (34) expresionBool -> . ID comparador NUMBER
    (35) expresionBool -> . NUMBER comparador ID
    (36) expresionBool -> . NUMBER comparador NUMBER
    (37) expresionBool -> . ID EQUIVAL booleano
    (38) expresionBool -> . booleano EQUIVAL ID
    (39) booleano -> . TRUE
    (40) booleano -> . FALSE

    ID              shift and go to state 45
    NUMBER          shift and go to state 46
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    expresionBool                  shift and go to state 49
    booleano                       shift and go to state 44

state 30

    (63) expMapa -> MAPA ID . EQUALS LCURLYB elementosMapa RCURLYB pto_coma

    EQUALS          shift and go to state 50


state 31

    (11) variable -> VAR ID EQUALS . expresionVar PUNTCOM
    (13) variable -> VAR ID EQUALS . expresionBool PUNTCOM
    (74) concatenacion -> VAR ID EQUALS . ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN pto_coma
    (48) expLista -> VAR ID EQUALS . NEW LISTA LPAREN NUMBER RPAREN pto_coma
    (49) expLista -> VAR ID EQUALS . NEW LISTA LPAREN RPAREN pto_coma
    (50) expLista -> VAR ID EQUALS . LCORCHETE elementosLista RCORCHETE pto_coma
    (62) expMapa -> VAR ID EQUALS . NEW MAPA LPAREN RPAREN pto_coma
    (17) expresionVar -> . valorVar
    (18) expresionVar -> . ID
    (19) expresionVar -> . expresionVar operadorA expresionVar
    (32) expresionBool -> . booleano
    (33) expresionBool -> . ID comparador ID
    (34) expresionBool -> . ID comparador NUMBER
    (35) expresionBool -> . NUMBER comparador ID
    (36) expresionBool -> . NUMBER comparador NUMBER
    (37) expresionBool -> . ID EQUIVAL booleano
    (38) expresionBool -> . booleano EQUIVAL ID
    (14) valorVar -> . NUMBER
    (15) valorVar -> . DOUBLE
    (16) valorVar -> . CADENA
    (39) booleano -> . TRUE
    (40) booleano -> . FALSE

    ID              shift and go to state 51
    NEW             shift and go to state 55
    LCORCHETE       shift and go to state 56
    NUMBER          shift and go to state 54
    DOUBLE          shift and go to state 58
    CADENA          shift and go to state 59
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    expresionVar                   shift and go to state 52
    expresionBool                  shift and go to state 53
    valorVar                       shift and go to state 57
    booleano                       shift and go to state 44

state 32

    (12) variable -> VAR ID PUNTCOM .

    VAR             reduce using rule 12 (variable -> VAR ID PUNTCOM .)
    FOR             reduce using rule 12 (variable -> VAR ID PUNTCOM .)
    WHILE           reduce using rule 12 (variable -> VAR ID PUNTCOM .)
    IF              reduce using rule 12 (variable -> VAR ID PUNTCOM .)
    ID              reduce using rule 12 (variable -> VAR ID PUNTCOM .)
    MAPA            reduce using rule 12 (variable -> VAR ID PUNTCOM .)
    $end            reduce using rule 12 (variable -> VAR ID PUNTCOM .)
    RCURLYB         reduce using rule 12 (variable -> VAR ID PUNTCOM .)


state 33

    (72) incremento -> ID INCREMENTO pto_coma .

    VAR             reduce using rule 72 (incremento -> ID INCREMENTO pto_coma .)
    FOR             reduce using rule 72 (incremento -> ID INCREMENTO pto_coma .)
    WHILE           reduce using rule 72 (incremento -> ID INCREMENTO pto_coma .)
    IF              reduce using rule 72 (incremento -> ID INCREMENTO pto_coma .)
    ID              reduce using rule 72 (incremento -> ID INCREMENTO pto_coma .)
    MAPA            reduce using rule 72 (incremento -> ID INCREMENTO pto_coma .)
    $end            reduce using rule 72 (incremento -> ID INCREMENTO pto_coma .)
    RCURLYB         reduce using rule 72 (incremento -> ID INCREMENTO pto_coma .)


state 34

    (75) pto_coma -> PUNTCOM .

    VAR             reduce using rule 75 (pto_coma -> PUNTCOM .)
    FOR             reduce using rule 75 (pto_coma -> PUNTCOM .)
    WHILE           reduce using rule 75 (pto_coma -> PUNTCOM .)
    IF              reduce using rule 75 (pto_coma -> PUNTCOM .)
    ID              reduce using rule 75 (pto_coma -> PUNTCOM .)
    MAPA            reduce using rule 75 (pto_coma -> PUNTCOM .)
    $end            reduce using rule 75 (pto_coma -> PUNTCOM .)
    RCURLYB         reduce using rule 75 (pto_coma -> PUNTCOM .)


state 35

    (73) decremento -> ID DECREMENTO pto_coma .

    VAR             reduce using rule 73 (decremento -> ID DECREMENTO pto_coma .)
    FOR             reduce using rule 73 (decremento -> ID DECREMENTO pto_coma .)
    WHILE           reduce using rule 73 (decremento -> ID DECREMENTO pto_coma .)
    IF              reduce using rule 73 (decremento -> ID DECREMENTO pto_coma .)
    ID              reduce using rule 73 (decremento -> ID DECREMENTO pto_coma .)
    MAPA            reduce using rule 73 (decremento -> ID DECREMENTO pto_coma .)
    $end            reduce using rule 73 (decremento -> ID DECREMENTO pto_coma .)
    RCURLYB         reduce using rule 73 (decremento -> ID DECREMENTO pto_coma .)


state 36

    (51) add_lista -> ID LCORCHETE NUMBER . RCORCHETE EQUALS num_cadena pto_coma

    RCORCHETE       shift and go to state 60


state 37

    (66) add_mapa -> ID LCORCHETE CADENA . RCORCHETE EQUALS CADENA pto_coma

    RCORCHETE       shift and go to state 61


state 38

    (52) add_lista -> ID PTO ADD . LPAREN num_cadena RPAREN pto_coma

    LPAREN          shift and go to state 62


state 39

    (20) expresionFor -> FOR LPAREN forParameters . RPAREN LCURLYB expresion RCURLYB

    RPAREN          shift and go to state 63


state 40

    (21) forParameters -> forIterator . PUNTCOM forCondition PUNTCOM forAction

    PUNTCOM         shift and go to state 64


state 41

    (22) forIterator -> INT . ID EQUALS NUMBER

    ID              shift and go to state 65


state 42

    (23) forIterator -> ID . EQUALS NUMBER

    EQUALS          shift and go to state 66


state 43

    (30) expresionWhile -> WHILE LPAREN expresionBool . RPAREN LCURLYB expresion RCURLYB

    RPAREN          shift and go to state 67


state 44

    (32) expresionBool -> booleano .
    (38) expresionBool -> booleano . EQUIVAL ID

    RPAREN          reduce using rule 32 (expresionBool -> booleano .)
    PUNTCOM         reduce using rule 32 (expresionBool -> booleano .)
    EQUIVAL         shift and go to state 68


state 45

    (33) expresionBool -> ID . comparador ID
    (34) expresionBool -> ID . comparador NUMBER
    (37) expresionBool -> ID . EQUIVAL booleano
    (41) comparador -> . MAYORQUE
    (42) comparador -> . MENORQUE
    (43) comparador -> . EQUIVAL
    (44) comparador -> . MINEQ
    (45) comparador -> . MAYEQ

    EQUIVAL         shift and go to state 70
    MAYORQUE        shift and go to state 71
    MENORQUE        shift and go to state 72
    MINEQ           shift and go to state 73
    MAYEQ           shift and go to state 74

    comparador                     shift and go to state 69

state 46

    (35) expresionBool -> NUMBER . comparador ID
    (36) expresionBool -> NUMBER . comparador NUMBER
    (41) comparador -> . MAYORQUE
    (42) comparador -> . MENORQUE
    (43) comparador -> . EQUIVAL
    (44) comparador -> . MINEQ
    (45) comparador -> . MAYEQ

    MAYORQUE        shift and go to state 71
    MENORQUE        shift and go to state 72
    EQUIVAL         shift and go to state 76
    MINEQ           shift and go to state 73
    MAYEQ           shift and go to state 74

    comparador                     shift and go to state 75

state 47

    (39) booleano -> TRUE .

    EQUIVAL         reduce using rule 39 (booleano -> TRUE .)
    RPAREN          reduce using rule 39 (booleano -> TRUE .)
    PUNTCOM         reduce using rule 39 (booleano -> TRUE .)


state 48

    (40) booleano -> FALSE .

    EQUIVAL         reduce using rule 40 (booleano -> FALSE .)
    RPAREN          reduce using rule 40 (booleano -> FALSE .)
    PUNTCOM         reduce using rule 40 (booleano -> FALSE .)


state 49

    (31) expresionIf -> IF LPAREN expresionBool . RPAREN LCURLYB expresion RCURLYB

    RPAREN          shift and go to state 77


state 50

    (63) expMapa -> MAPA ID EQUALS . LCURLYB elementosMapa RCURLYB pto_coma

    LCURLYB         shift and go to state 78


state 51

    (74) concatenacion -> VAR ID EQUALS ID . PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN pto_coma
    (18) expresionVar -> ID .
    (33) expresionBool -> ID . comparador ID
    (34) expresionBool -> ID . comparador NUMBER
    (37) expresionBool -> ID . EQUIVAL booleano
    (41) comparador -> . MAYORQUE
    (42) comparador -> . MENORQUE
    (43) comparador -> . EQUIVAL
    (44) comparador -> . MINEQ
    (45) comparador -> . MAYEQ

    PTO             shift and go to state 79
    PUNTCOM         reduce using rule 18 (expresionVar -> ID .)
    PLUS            reduce using rule 18 (expresionVar -> ID .)
    MINUS           reduce using rule 18 (expresionVar -> ID .)
    TIMES           reduce using rule 18 (expresionVar -> ID .)
    DIVIDE          reduce using rule 18 (expresionVar -> ID .)
    DIVIDE_E        reduce using rule 18 (expresionVar -> ID .)
    EQUIVAL         shift and go to state 70
    MAYORQUE        shift and go to state 71
    MENORQUE        shift and go to state 72
    MINEQ           shift and go to state 73
    MAYEQ           shift and go to state 74

    comparador                     shift and go to state 69

state 52

    (11) variable -> VAR ID EQUALS expresionVar . PUNTCOM
    (19) expresionVar -> expresionVar . operadorA expresionVar
    (67) operadorA -> . PLUS
    (68) operadorA -> . MINUS
    (69) operadorA -> . TIMES
    (70) operadorA -> . DIVIDE
    (71) operadorA -> . DIVIDE_E

    PUNTCOM         shift and go to state 80
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    TIMES           shift and go to state 84
    DIVIDE          shift and go to state 85
    DIVIDE_E        shift and go to state 86

    operadorA                      shift and go to state 81

state 53

    (13) variable -> VAR ID EQUALS expresionBool . PUNTCOM

    PUNTCOM         shift and go to state 87


state 54

    (35) expresionBool -> NUMBER . comparador ID
    (36) expresionBool -> NUMBER . comparador NUMBER
    (14) valorVar -> NUMBER .
    (41) comparador -> . MAYORQUE
    (42) comparador -> . MENORQUE
    (43) comparador -> . EQUIVAL
    (44) comparador -> . MINEQ
    (45) comparador -> . MAYEQ

    PUNTCOM         reduce using rule 14 (valorVar -> NUMBER .)
    PLUS            reduce using rule 14 (valorVar -> NUMBER .)
    MINUS           reduce using rule 14 (valorVar -> NUMBER .)
    TIMES           reduce using rule 14 (valorVar -> NUMBER .)
    DIVIDE          reduce using rule 14 (valorVar -> NUMBER .)
    DIVIDE_E        reduce using rule 14 (valorVar -> NUMBER .)
    MAYORQUE        shift and go to state 71
    MENORQUE        shift and go to state 72
    EQUIVAL         shift and go to state 76
    MINEQ           shift and go to state 73
    MAYEQ           shift and go to state 74

    comparador                     shift and go to state 75

state 55

    (48) expLista -> VAR ID EQUALS NEW . LISTA LPAREN NUMBER RPAREN pto_coma
    (49) expLista -> VAR ID EQUALS NEW . LISTA LPAREN RPAREN pto_coma
    (62) expMapa -> VAR ID EQUALS NEW . MAPA LPAREN RPAREN pto_coma

    LISTA           shift and go to state 88
    MAPA            shift and go to state 89


state 56

    (50) expLista -> VAR ID EQUALS LCORCHETE . elementosLista RCORCHETE pto_coma
    (55) elementosLista -> . CADENA
    (56) elementosLista -> . NUMBER
    (57) elementosLista -> . CADENA COMA elementosLista
    (58) elementosLista -> . NUMBER COMA elementosLista
    (59) elementosLista -> .

    CADENA          shift and go to state 91
    NUMBER          shift and go to state 92
    RCORCHETE       reduce using rule 59 (elementosLista -> .)

    elementosLista                 shift and go to state 90

state 57

    (17) expresionVar -> valorVar .

    PUNTCOM         reduce using rule 17 (expresionVar -> valorVar .)
    PLUS            reduce using rule 17 (expresionVar -> valorVar .)
    MINUS           reduce using rule 17 (expresionVar -> valorVar .)
    TIMES           reduce using rule 17 (expresionVar -> valorVar .)
    DIVIDE          reduce using rule 17 (expresionVar -> valorVar .)
    DIVIDE_E        reduce using rule 17 (expresionVar -> valorVar .)


state 58

    (15) valorVar -> DOUBLE .

    PUNTCOM         reduce using rule 15 (valorVar -> DOUBLE .)
    PLUS            reduce using rule 15 (valorVar -> DOUBLE .)
    MINUS           reduce using rule 15 (valorVar -> DOUBLE .)
    TIMES           reduce using rule 15 (valorVar -> DOUBLE .)
    DIVIDE          reduce using rule 15 (valorVar -> DOUBLE .)
    DIVIDE_E        reduce using rule 15 (valorVar -> DOUBLE .)


state 59

    (16) valorVar -> CADENA .

    PUNTCOM         reduce using rule 16 (valorVar -> CADENA .)
    PLUS            reduce using rule 16 (valorVar -> CADENA .)
    MINUS           reduce using rule 16 (valorVar -> CADENA .)
    TIMES           reduce using rule 16 (valorVar -> CADENA .)
    DIVIDE          reduce using rule 16 (valorVar -> CADENA .)
    DIVIDE_E        reduce using rule 16 (valorVar -> CADENA .)


state 60

    (51) add_lista -> ID LCORCHETE NUMBER RCORCHETE . EQUALS num_cadena pto_coma

    EQUALS          shift and go to state 93


state 61

    (66) add_mapa -> ID LCORCHETE CADENA RCORCHETE . EQUALS CADENA pto_coma

    EQUALS          shift and go to state 94


state 62

    (52) add_lista -> ID PTO ADD LPAREN . num_cadena RPAREN pto_coma
    (53) num_cadena -> . NUMBER
    (54) num_cadena -> . CADENA

    NUMBER          shift and go to state 96
    CADENA          shift and go to state 97

    num_cadena                     shift and go to state 95

state 63

    (20) expresionFor -> FOR LPAREN forParameters RPAREN . LCURLYB expresion RCURLYB

    LCURLYB         shift and go to state 98


state 64

    (21) forParameters -> forIterator PUNTCOM . forCondition PUNTCOM forAction
    (24) forCondition -> . ID MAYORQUE NUMBER
    (25) forCondition -> . ID MENORQUE NUMBER

    ID              shift and go to state 100

    forCondition                   shift and go to state 99

state 65

    (22) forIterator -> INT ID . EQUALS NUMBER

    EQUALS          shift and go to state 101


state 66

    (23) forIterator -> ID EQUALS . NUMBER

    NUMBER          shift and go to state 102


state 67

    (30) expresionWhile -> WHILE LPAREN expresionBool RPAREN . LCURLYB expresion RCURLYB

    LCURLYB         shift and go to state 103


state 68

    (38) expresionBool -> booleano EQUIVAL . ID

    ID              shift and go to state 104


state 69

    (33) expresionBool -> ID comparador . ID
    (34) expresionBool -> ID comparador . NUMBER

    ID              shift and go to state 105
    NUMBER          shift and go to state 106


state 70

    (37) expresionBool -> ID EQUIVAL . booleano
    (43) comparador -> EQUIVAL .
    (39) booleano -> . TRUE
    (40) booleano -> . FALSE

    ID              reduce using rule 43 (comparador -> EQUIVAL .)
    NUMBER          reduce using rule 43 (comparador -> EQUIVAL .)
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    booleano                       shift and go to state 107

state 71

    (41) comparador -> MAYORQUE .

    ID              reduce using rule 41 (comparador -> MAYORQUE .)
    NUMBER          reduce using rule 41 (comparador -> MAYORQUE .)


state 72

    (42) comparador -> MENORQUE .

    ID              reduce using rule 42 (comparador -> MENORQUE .)
    NUMBER          reduce using rule 42 (comparador -> MENORQUE .)


state 73

    (44) comparador -> MINEQ .

    ID              reduce using rule 44 (comparador -> MINEQ .)
    NUMBER          reduce using rule 44 (comparador -> MINEQ .)


state 74

    (45) comparador -> MAYEQ .

    ID              reduce using rule 45 (comparador -> MAYEQ .)
    NUMBER          reduce using rule 45 (comparador -> MAYEQ .)


state 75

    (35) expresionBool -> NUMBER comparador . ID
    (36) expresionBool -> NUMBER comparador . NUMBER

    ID              shift and go to state 109
    NUMBER          shift and go to state 108


state 76

    (43) comparador -> EQUIVAL .

    ID              reduce using rule 43 (comparador -> EQUIVAL .)
    NUMBER          reduce using rule 43 (comparador -> EQUIVAL .)


state 77

    (31) expresionIf -> IF LPAREN expresionBool RPAREN . LCURLYB expresion RCURLYB

    LCURLYB         shift and go to state 110


state 78

    (63) expMapa -> MAPA ID EQUALS LCURLYB . elementosMapa RCURLYB pto_coma
    (64) elementosMapa -> . num_cadena DOSPTO num_cadena
    (65) elementosMapa -> . num_cadena DOSPTO num_cadena COMA elementosMapa
    (53) num_cadena -> . NUMBER
    (54) num_cadena -> . CADENA

    NUMBER          shift and go to state 96
    CADENA          shift and go to state 97

    elementosMapa                  shift and go to state 111
    num_cadena                     shift and go to state 112

state 79

    (74) concatenacion -> VAR ID EQUALS ID PTO . SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN pto_coma

    SUBSTRING       shift and go to state 113


state 80

    (11) variable -> VAR ID EQUALS expresionVar PUNTCOM .

    VAR             reduce using rule 11 (variable -> VAR ID EQUALS expresionVar PUNTCOM .)
    FOR             reduce using rule 11 (variable -> VAR ID EQUALS expresionVar PUNTCOM .)
    WHILE           reduce using rule 11 (variable -> VAR ID EQUALS expresionVar PUNTCOM .)
    IF              reduce using rule 11 (variable -> VAR ID EQUALS expresionVar PUNTCOM .)
    ID              reduce using rule 11 (variable -> VAR ID EQUALS expresionVar PUNTCOM .)
    MAPA            reduce using rule 11 (variable -> VAR ID EQUALS expresionVar PUNTCOM .)
    $end            reduce using rule 11 (variable -> VAR ID EQUALS expresionVar PUNTCOM .)
    RCURLYB         reduce using rule 11 (variable -> VAR ID EQUALS expresionVar PUNTCOM .)


state 81

    (19) expresionVar -> expresionVar operadorA . expresionVar
    (17) expresionVar -> . valorVar
    (18) expresionVar -> . ID
    (19) expresionVar -> . expresionVar operadorA expresionVar
    (14) valorVar -> . NUMBER
    (15) valorVar -> . DOUBLE
    (16) valorVar -> . CADENA

    ID              shift and go to state 115
    NUMBER          shift and go to state 116
    DOUBLE          shift and go to state 58
    CADENA          shift and go to state 59

    expresionVar                   shift and go to state 114
    valorVar                       shift and go to state 57

state 82

    (67) operadorA -> PLUS .

    ID              reduce using rule 67 (operadorA -> PLUS .)
    NUMBER          reduce using rule 67 (operadorA -> PLUS .)
    DOUBLE          reduce using rule 67 (operadorA -> PLUS .)
    CADENA          reduce using rule 67 (operadorA -> PLUS .)


state 83

    (68) operadorA -> MINUS .

    ID              reduce using rule 68 (operadorA -> MINUS .)
    NUMBER          reduce using rule 68 (operadorA -> MINUS .)
    DOUBLE          reduce using rule 68 (operadorA -> MINUS .)
    CADENA          reduce using rule 68 (operadorA -> MINUS .)


state 84

    (69) operadorA -> TIMES .

    ID              reduce using rule 69 (operadorA -> TIMES .)
    NUMBER          reduce using rule 69 (operadorA -> TIMES .)
    DOUBLE          reduce using rule 69 (operadorA -> TIMES .)
    CADENA          reduce using rule 69 (operadorA -> TIMES .)


state 85

    (70) operadorA -> DIVIDE .

    ID              reduce using rule 70 (operadorA -> DIVIDE .)
    NUMBER          reduce using rule 70 (operadorA -> DIVIDE .)
    DOUBLE          reduce using rule 70 (operadorA -> DIVIDE .)
    CADENA          reduce using rule 70 (operadorA -> DIVIDE .)


state 86

    (71) operadorA -> DIVIDE_E .

    ID              reduce using rule 71 (operadorA -> DIVIDE_E .)
    NUMBER          reduce using rule 71 (operadorA -> DIVIDE_E .)
    DOUBLE          reduce using rule 71 (operadorA -> DIVIDE_E .)
    CADENA          reduce using rule 71 (operadorA -> DIVIDE_E .)


state 87

    (13) variable -> VAR ID EQUALS expresionBool PUNTCOM .

    VAR             reduce using rule 13 (variable -> VAR ID EQUALS expresionBool PUNTCOM .)
    FOR             reduce using rule 13 (variable -> VAR ID EQUALS expresionBool PUNTCOM .)
    WHILE           reduce using rule 13 (variable -> VAR ID EQUALS expresionBool PUNTCOM .)
    IF              reduce using rule 13 (variable -> VAR ID EQUALS expresionBool PUNTCOM .)
    ID              reduce using rule 13 (variable -> VAR ID EQUALS expresionBool PUNTCOM .)
    MAPA            reduce using rule 13 (variable -> VAR ID EQUALS expresionBool PUNTCOM .)
    $end            reduce using rule 13 (variable -> VAR ID EQUALS expresionBool PUNTCOM .)
    RCURLYB         reduce using rule 13 (variable -> VAR ID EQUALS expresionBool PUNTCOM .)


state 88

    (48) expLista -> VAR ID EQUALS NEW LISTA . LPAREN NUMBER RPAREN pto_coma
    (49) expLista -> VAR ID EQUALS NEW LISTA . LPAREN RPAREN pto_coma

    LPAREN          shift and go to state 117


state 89

    (62) expMapa -> VAR ID EQUALS NEW MAPA . LPAREN RPAREN pto_coma

    LPAREN          shift and go to state 118


state 90

    (50) expLista -> VAR ID EQUALS LCORCHETE elementosLista . RCORCHETE pto_coma

    RCORCHETE       shift and go to state 119


state 91

    (55) elementosLista -> CADENA .
    (57) elementosLista -> CADENA . COMA elementosLista

    RCORCHETE       reduce using rule 55 (elementosLista -> CADENA .)
    COMA            shift and go to state 120


state 92

    (56) elementosLista -> NUMBER .
    (58) elementosLista -> NUMBER . COMA elementosLista

    RCORCHETE       reduce using rule 56 (elementosLista -> NUMBER .)
    COMA            shift and go to state 121


state 93

    (51) add_lista -> ID LCORCHETE NUMBER RCORCHETE EQUALS . num_cadena pto_coma
    (53) num_cadena -> . NUMBER
    (54) num_cadena -> . CADENA

    NUMBER          shift and go to state 96
    CADENA          shift and go to state 97

    num_cadena                     shift and go to state 122

state 94

    (66) add_mapa -> ID LCORCHETE CADENA RCORCHETE EQUALS . CADENA pto_coma

    CADENA          shift and go to state 123


state 95

    (52) add_lista -> ID PTO ADD LPAREN num_cadena . RPAREN pto_coma

    RPAREN          shift and go to state 124


state 96

    (53) num_cadena -> NUMBER .

    RPAREN          reduce using rule 53 (num_cadena -> NUMBER .)
    DOSPTO          reduce using rule 53 (num_cadena -> NUMBER .)
    PUNTCOM         reduce using rule 53 (num_cadena -> NUMBER .)
    COMA            reduce using rule 53 (num_cadena -> NUMBER .)
    RCURLYB         reduce using rule 53 (num_cadena -> NUMBER .)


state 97

    (54) num_cadena -> CADENA .

    RPAREN          reduce using rule 54 (num_cadena -> CADENA .)
    DOSPTO          reduce using rule 54 (num_cadena -> CADENA .)
    PUNTCOM         reduce using rule 54 (num_cadena -> CADENA .)
    COMA            reduce using rule 54 (num_cadena -> CADENA .)
    RCURLYB         reduce using rule 54 (num_cadena -> CADENA .)


state 98

    (20) expresionFor -> FOR LPAREN forParameters RPAREN LCURLYB . expresion RCURLYB
    (1) expresion -> . lista
    (2) expresion -> . mapa
    (3) expresion -> . variable
    (4) expresion -> . expresionFor
    (5) expresion -> . expresionWhile
    (6) expresion -> . expresionIf
    (7) expresion -> . concatenacion
    (8) expresion -> . incremento
    (9) expresion -> . decremento
    (10) expresion -> . expresion expresion
    (46) lista -> . expLista
    (47) lista -> . add_lista
    (60) mapa -> . expMapa
    (61) mapa -> . add_mapa
    (11) variable -> . VAR ID EQUALS expresionVar PUNTCOM
    (12) variable -> . VAR ID PUNTCOM
    (13) variable -> . VAR ID EQUALS expresionBool PUNTCOM
    (20) expresionFor -> . FOR LPAREN forParameters RPAREN LCURLYB expresion RCURLYB
    (30) expresionWhile -> . WHILE LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB
    (31) expresionIf -> . IF LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB
    (74) concatenacion -> . VAR ID EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN pto_coma
    (72) incremento -> . ID INCREMENTO pto_coma
    (73) decremento -> . ID DECREMENTO pto_coma
    (48) expLista -> . VAR ID EQUALS NEW LISTA LPAREN NUMBER RPAREN pto_coma
    (49) expLista -> . VAR ID EQUALS NEW LISTA LPAREN RPAREN pto_coma
    (50) expLista -> . VAR ID EQUALS LCORCHETE elementosLista RCORCHETE pto_coma
    (51) add_lista -> . ID LCORCHETE NUMBER RCORCHETE EQUALS num_cadena pto_coma
    (52) add_lista -> . ID PTO ADD LPAREN num_cadena RPAREN pto_coma
    (62) expMapa -> . VAR ID EQUALS NEW MAPA LPAREN RPAREN pto_coma
    (63) expMapa -> . MAPA ID EQUALS LCURLYB elementosMapa RCURLYB pto_coma
    (66) add_mapa -> . ID LCORCHETE CADENA RCORCHETE EQUALS CADENA pto_coma

    VAR             shift and go to state 15
    FOR             shift and go to state 17
    WHILE           shift and go to state 18
    IF              shift and go to state 19
    ID              shift and go to state 16
    MAPA            shift and go to state 20

    expresion                      shift and go to state 125
    lista                          shift and go to state 2
    mapa                           shift and go to state 3
    variable                       shift and go to state 4
    expresionFor                   shift and go to state 5
    expresionWhile                 shift and go to state 6
    expresionIf                    shift and go to state 7
    concatenacion                  shift and go to state 8
    incremento                     shift and go to state 9
    decremento                     shift and go to state 10
    expLista                       shift and go to state 11
    add_lista                      shift and go to state 12
    expMapa                        shift and go to state 13
    add_mapa                       shift and go to state 14

state 99

    (21) forParameters -> forIterator PUNTCOM forCondition . PUNTCOM forAction

    PUNTCOM         shift and go to state 126


state 100

    (24) forCondition -> ID . MAYORQUE NUMBER
    (25) forCondition -> ID . MENORQUE NUMBER

    MAYORQUE        shift and go to state 127
    MENORQUE        shift and go to state 128


state 101

    (22) forIterator -> INT ID EQUALS . NUMBER

    NUMBER          shift and go to state 129


state 102

    (23) forIterator -> ID EQUALS NUMBER .

    PUNTCOM         reduce using rule 23 (forIterator -> ID EQUALS NUMBER .)


state 103

    (30) expresionWhile -> WHILE LPAREN expresionBool RPAREN LCURLYB . expresion RCURLYB
    (1) expresion -> . lista
    (2) expresion -> . mapa
    (3) expresion -> . variable
    (4) expresion -> . expresionFor
    (5) expresion -> . expresionWhile
    (6) expresion -> . expresionIf
    (7) expresion -> . concatenacion
    (8) expresion -> . incremento
    (9) expresion -> . decremento
    (10) expresion -> . expresion expresion
    (46) lista -> . expLista
    (47) lista -> . add_lista
    (60) mapa -> . expMapa
    (61) mapa -> . add_mapa
    (11) variable -> . VAR ID EQUALS expresionVar PUNTCOM
    (12) variable -> . VAR ID PUNTCOM
    (13) variable -> . VAR ID EQUALS expresionBool PUNTCOM
    (20) expresionFor -> . FOR LPAREN forParameters RPAREN LCURLYB expresion RCURLYB
    (30) expresionWhile -> . WHILE LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB
    (31) expresionIf -> . IF LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB
    (74) concatenacion -> . VAR ID EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN pto_coma
    (72) incremento -> . ID INCREMENTO pto_coma
    (73) decremento -> . ID DECREMENTO pto_coma
    (48) expLista -> . VAR ID EQUALS NEW LISTA LPAREN NUMBER RPAREN pto_coma
    (49) expLista -> . VAR ID EQUALS NEW LISTA LPAREN RPAREN pto_coma
    (50) expLista -> . VAR ID EQUALS LCORCHETE elementosLista RCORCHETE pto_coma
    (51) add_lista -> . ID LCORCHETE NUMBER RCORCHETE EQUALS num_cadena pto_coma
    (52) add_lista -> . ID PTO ADD LPAREN num_cadena RPAREN pto_coma
    (62) expMapa -> . VAR ID EQUALS NEW MAPA LPAREN RPAREN pto_coma
    (63) expMapa -> . MAPA ID EQUALS LCURLYB elementosMapa RCURLYB pto_coma
    (66) add_mapa -> . ID LCORCHETE CADENA RCORCHETE EQUALS CADENA pto_coma

    VAR             shift and go to state 15
    FOR             shift and go to state 17
    WHILE           shift and go to state 18
    IF              shift and go to state 19
    ID              shift and go to state 16
    MAPA            shift and go to state 20

    expresion                      shift and go to state 130
    lista                          shift and go to state 2
    mapa                           shift and go to state 3
    variable                       shift and go to state 4
    expresionFor                   shift and go to state 5
    expresionWhile                 shift and go to state 6
    expresionIf                    shift and go to state 7
    concatenacion                  shift and go to state 8
    incremento                     shift and go to state 9
    decremento                     shift and go to state 10
    expLista                       shift and go to state 11
    add_lista                      shift and go to state 12
    expMapa                        shift and go to state 13
    add_mapa                       shift and go to state 14

state 104

    (38) expresionBool -> booleano EQUIVAL ID .

    RPAREN          reduce using rule 38 (expresionBool -> booleano EQUIVAL ID .)
    PUNTCOM         reduce using rule 38 (expresionBool -> booleano EQUIVAL ID .)


state 105

    (33) expresionBool -> ID comparador ID .

    RPAREN          reduce using rule 33 (expresionBool -> ID comparador ID .)
    PUNTCOM         reduce using rule 33 (expresionBool -> ID comparador ID .)


state 106

    (34) expresionBool -> ID comparador NUMBER .

    RPAREN          reduce using rule 34 (expresionBool -> ID comparador NUMBER .)
    PUNTCOM         reduce using rule 34 (expresionBool -> ID comparador NUMBER .)


state 107

    (37) expresionBool -> ID EQUIVAL booleano .

    RPAREN          reduce using rule 37 (expresionBool -> ID EQUIVAL booleano .)
    PUNTCOM         reduce using rule 37 (expresionBool -> ID EQUIVAL booleano .)


state 108

    (36) expresionBool -> NUMBER comparador NUMBER .

    RPAREN          reduce using rule 36 (expresionBool -> NUMBER comparador NUMBER .)
    PUNTCOM         reduce using rule 36 (expresionBool -> NUMBER comparador NUMBER .)


state 109

    (35) expresionBool -> NUMBER comparador ID .

    RPAREN          reduce using rule 35 (expresionBool -> NUMBER comparador ID .)
    PUNTCOM         reduce using rule 35 (expresionBool -> NUMBER comparador ID .)


state 110

    (31) expresionIf -> IF LPAREN expresionBool RPAREN LCURLYB . expresion RCURLYB
    (1) expresion -> . lista
    (2) expresion -> . mapa
    (3) expresion -> . variable
    (4) expresion -> . expresionFor
    (5) expresion -> . expresionWhile
    (6) expresion -> . expresionIf
    (7) expresion -> . concatenacion
    (8) expresion -> . incremento
    (9) expresion -> . decremento
    (10) expresion -> . expresion expresion
    (46) lista -> . expLista
    (47) lista -> . add_lista
    (60) mapa -> . expMapa
    (61) mapa -> . add_mapa
    (11) variable -> . VAR ID EQUALS expresionVar PUNTCOM
    (12) variable -> . VAR ID PUNTCOM
    (13) variable -> . VAR ID EQUALS expresionBool PUNTCOM
    (20) expresionFor -> . FOR LPAREN forParameters RPAREN LCURLYB expresion RCURLYB
    (30) expresionWhile -> . WHILE LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB
    (31) expresionIf -> . IF LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB
    (74) concatenacion -> . VAR ID EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN pto_coma
    (72) incremento -> . ID INCREMENTO pto_coma
    (73) decremento -> . ID DECREMENTO pto_coma
    (48) expLista -> . VAR ID EQUALS NEW LISTA LPAREN NUMBER RPAREN pto_coma
    (49) expLista -> . VAR ID EQUALS NEW LISTA LPAREN RPAREN pto_coma
    (50) expLista -> . VAR ID EQUALS LCORCHETE elementosLista RCORCHETE pto_coma
    (51) add_lista -> . ID LCORCHETE NUMBER RCORCHETE EQUALS num_cadena pto_coma
    (52) add_lista -> . ID PTO ADD LPAREN num_cadena RPAREN pto_coma
    (62) expMapa -> . VAR ID EQUALS NEW MAPA LPAREN RPAREN pto_coma
    (63) expMapa -> . MAPA ID EQUALS LCURLYB elementosMapa RCURLYB pto_coma
    (66) add_mapa -> . ID LCORCHETE CADENA RCORCHETE EQUALS CADENA pto_coma

    VAR             shift and go to state 15
    FOR             shift and go to state 17
    WHILE           shift and go to state 18
    IF              shift and go to state 19
    ID              shift and go to state 16
    MAPA            shift and go to state 20

    expresion                      shift and go to state 131
    lista                          shift and go to state 2
    mapa                           shift and go to state 3
    variable                       shift and go to state 4
    expresionFor                   shift and go to state 5
    expresionWhile                 shift and go to state 6
    expresionIf                    shift and go to state 7
    concatenacion                  shift and go to state 8
    incremento                     shift and go to state 9
    decremento                     shift and go to state 10
    expLista                       shift and go to state 11
    add_lista                      shift and go to state 12
    expMapa                        shift and go to state 13
    add_mapa                       shift and go to state 14

state 111

    (63) expMapa -> MAPA ID EQUALS LCURLYB elementosMapa . RCURLYB pto_coma

    RCURLYB         shift and go to state 132


state 112

    (64) elementosMapa -> num_cadena . DOSPTO num_cadena
    (65) elementosMapa -> num_cadena . DOSPTO num_cadena COMA elementosMapa

    DOSPTO          shift and go to state 133


state 113

    (74) concatenacion -> VAR ID EQUALS ID PTO SUBSTRING . LPAREN NUMBER COMA NUMBER RPAREN pto_coma

    LPAREN          shift and go to state 134


state 114

    (19) expresionVar -> expresionVar operadorA expresionVar .
    (19) expresionVar -> expresionVar . operadorA expresionVar
    (67) operadorA -> . PLUS
    (68) operadorA -> . MINUS
    (69) operadorA -> . TIMES
    (70) operadorA -> . DIVIDE
    (71) operadorA -> . DIVIDE_E

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DIVIDE_E resolved as shift
    PUNTCOM         reduce using rule 19 (expresionVar -> expresionVar operadorA expresionVar .)
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    TIMES           shift and go to state 84
    DIVIDE          shift and go to state 85
    DIVIDE_E        shift and go to state 86

  ! PLUS            [ reduce using rule 19 (expresionVar -> expresionVar operadorA expresionVar .) ]
  ! MINUS           [ reduce using rule 19 (expresionVar -> expresionVar operadorA expresionVar .) ]
  ! TIMES           [ reduce using rule 19 (expresionVar -> expresionVar operadorA expresionVar .) ]
  ! DIVIDE          [ reduce using rule 19 (expresionVar -> expresionVar operadorA expresionVar .) ]
  ! DIVIDE_E        [ reduce using rule 19 (expresionVar -> expresionVar operadorA expresionVar .) ]

    operadorA                      shift and go to state 81

state 115

    (18) expresionVar -> ID .

    PLUS            reduce using rule 18 (expresionVar -> ID .)
    MINUS           reduce using rule 18 (expresionVar -> ID .)
    TIMES           reduce using rule 18 (expresionVar -> ID .)
    DIVIDE          reduce using rule 18 (expresionVar -> ID .)
    DIVIDE_E        reduce using rule 18 (expresionVar -> ID .)
    PUNTCOM         reduce using rule 18 (expresionVar -> ID .)


state 116

    (14) valorVar -> NUMBER .

    PLUS            reduce using rule 14 (valorVar -> NUMBER .)
    MINUS           reduce using rule 14 (valorVar -> NUMBER .)
    TIMES           reduce using rule 14 (valorVar -> NUMBER .)
    DIVIDE          reduce using rule 14 (valorVar -> NUMBER .)
    DIVIDE_E        reduce using rule 14 (valorVar -> NUMBER .)
    PUNTCOM         reduce using rule 14 (valorVar -> NUMBER .)


state 117

    (48) expLista -> VAR ID EQUALS NEW LISTA LPAREN . NUMBER RPAREN pto_coma
    (49) expLista -> VAR ID EQUALS NEW LISTA LPAREN . RPAREN pto_coma

    NUMBER          shift and go to state 135
    RPAREN          shift and go to state 136


state 118

    (62) expMapa -> VAR ID EQUALS NEW MAPA LPAREN . RPAREN pto_coma

    RPAREN          shift and go to state 137


state 119

    (50) expLista -> VAR ID EQUALS LCORCHETE elementosLista RCORCHETE . pto_coma
    (75) pto_coma -> . PUNTCOM

    PUNTCOM         shift and go to state 34

    pto_coma                       shift and go to state 138

state 120

    (57) elementosLista -> CADENA COMA . elementosLista
    (55) elementosLista -> . CADENA
    (56) elementosLista -> . NUMBER
    (57) elementosLista -> . CADENA COMA elementosLista
    (58) elementosLista -> . NUMBER COMA elementosLista
    (59) elementosLista -> .

    CADENA          shift and go to state 91
    NUMBER          shift and go to state 92
    RCORCHETE       reduce using rule 59 (elementosLista -> .)

    elementosLista                 shift and go to state 139

state 121

    (58) elementosLista -> NUMBER COMA . elementosLista
    (55) elementosLista -> . CADENA
    (56) elementosLista -> . NUMBER
    (57) elementosLista -> . CADENA COMA elementosLista
    (58) elementosLista -> . NUMBER COMA elementosLista
    (59) elementosLista -> .

    CADENA          shift and go to state 91
    NUMBER          shift and go to state 92
    RCORCHETE       reduce using rule 59 (elementosLista -> .)

    elementosLista                 shift and go to state 140

state 122

    (51) add_lista -> ID LCORCHETE NUMBER RCORCHETE EQUALS num_cadena . pto_coma
    (75) pto_coma -> . PUNTCOM

    PUNTCOM         shift and go to state 34

    pto_coma                       shift and go to state 141

state 123

    (66) add_mapa -> ID LCORCHETE CADENA RCORCHETE EQUALS CADENA . pto_coma
    (75) pto_coma -> . PUNTCOM

    PUNTCOM         shift and go to state 34

    pto_coma                       shift and go to state 142

state 124

    (52) add_lista -> ID PTO ADD LPAREN num_cadena RPAREN . pto_coma
    (75) pto_coma -> . PUNTCOM

    PUNTCOM         shift and go to state 34

    pto_coma                       shift and go to state 143

state 125

    (20) expresionFor -> FOR LPAREN forParameters RPAREN LCURLYB expresion . RCURLYB
    (10) expresion -> expresion . expresion
    (1) expresion -> . lista
    (2) expresion -> . mapa
    (3) expresion -> . variable
    (4) expresion -> . expresionFor
    (5) expresion -> . expresionWhile
    (6) expresion -> . expresionIf
    (7) expresion -> . concatenacion
    (8) expresion -> . incremento
    (9) expresion -> . decremento
    (10) expresion -> . expresion expresion
    (46) lista -> . expLista
    (47) lista -> . add_lista
    (60) mapa -> . expMapa
    (61) mapa -> . add_mapa
    (11) variable -> . VAR ID EQUALS expresionVar PUNTCOM
    (12) variable -> . VAR ID PUNTCOM
    (13) variable -> . VAR ID EQUALS expresionBool PUNTCOM
    (20) expresionFor -> . FOR LPAREN forParameters RPAREN LCURLYB expresion RCURLYB
    (30) expresionWhile -> . WHILE LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB
    (31) expresionIf -> . IF LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB
    (74) concatenacion -> . VAR ID EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN pto_coma
    (72) incremento -> . ID INCREMENTO pto_coma
    (73) decremento -> . ID DECREMENTO pto_coma
    (48) expLista -> . VAR ID EQUALS NEW LISTA LPAREN NUMBER RPAREN pto_coma
    (49) expLista -> . VAR ID EQUALS NEW LISTA LPAREN RPAREN pto_coma
    (50) expLista -> . VAR ID EQUALS LCORCHETE elementosLista RCORCHETE pto_coma
    (51) add_lista -> . ID LCORCHETE NUMBER RCORCHETE EQUALS num_cadena pto_coma
    (52) add_lista -> . ID PTO ADD LPAREN num_cadena RPAREN pto_coma
    (62) expMapa -> . VAR ID EQUALS NEW MAPA LPAREN RPAREN pto_coma
    (63) expMapa -> . MAPA ID EQUALS LCURLYB elementosMapa RCURLYB pto_coma
    (66) add_mapa -> . ID LCORCHETE CADENA RCORCHETE EQUALS CADENA pto_coma

    RCURLYB         shift and go to state 144
    VAR             shift and go to state 15
    FOR             shift and go to state 17
    WHILE           shift and go to state 18
    IF              shift and go to state 19
    ID              shift and go to state 16
    MAPA            shift and go to state 20

    expresion                      shift and go to state 21
    lista                          shift and go to state 2
    mapa                           shift and go to state 3
    variable                       shift and go to state 4
    expresionFor                   shift and go to state 5
    expresionWhile                 shift and go to state 6
    expresionIf                    shift and go to state 7
    concatenacion                  shift and go to state 8
    incremento                     shift and go to state 9
    decremento                     shift and go to state 10
    expLista                       shift and go to state 11
    add_lista                      shift and go to state 12
    expMapa                        shift and go to state 13
    add_mapa                       shift and go to state 14

state 126

    (21) forParameters -> forIterator PUNTCOM forCondition PUNTCOM . forAction
    (26) forAction -> . ID INCREMENTO
    (27) forAction -> . ID DECREMENTO
    (28) forAction -> . INCREMENTO ID
    (29) forAction -> . DECREMENTO ID

    ID              shift and go to state 146
    INCREMENTO      shift and go to state 147
    DECREMENTO      shift and go to state 148

    forAction                      shift and go to state 145

state 127

    (24) forCondition -> ID MAYORQUE . NUMBER

    NUMBER          shift and go to state 149


state 128

    (25) forCondition -> ID MENORQUE . NUMBER

    NUMBER          shift and go to state 150


state 129

    (22) forIterator -> INT ID EQUALS NUMBER .

    PUNTCOM         reduce using rule 22 (forIterator -> INT ID EQUALS NUMBER .)


state 130

    (30) expresionWhile -> WHILE LPAREN expresionBool RPAREN LCURLYB expresion . RCURLYB
    (10) expresion -> expresion . expresion
    (1) expresion -> . lista
    (2) expresion -> . mapa
    (3) expresion -> . variable
    (4) expresion -> . expresionFor
    (5) expresion -> . expresionWhile
    (6) expresion -> . expresionIf
    (7) expresion -> . concatenacion
    (8) expresion -> . incremento
    (9) expresion -> . decremento
    (10) expresion -> . expresion expresion
    (46) lista -> . expLista
    (47) lista -> . add_lista
    (60) mapa -> . expMapa
    (61) mapa -> . add_mapa
    (11) variable -> . VAR ID EQUALS expresionVar PUNTCOM
    (12) variable -> . VAR ID PUNTCOM
    (13) variable -> . VAR ID EQUALS expresionBool PUNTCOM
    (20) expresionFor -> . FOR LPAREN forParameters RPAREN LCURLYB expresion RCURLYB
    (30) expresionWhile -> . WHILE LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB
    (31) expresionIf -> . IF LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB
    (74) concatenacion -> . VAR ID EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN pto_coma
    (72) incremento -> . ID INCREMENTO pto_coma
    (73) decremento -> . ID DECREMENTO pto_coma
    (48) expLista -> . VAR ID EQUALS NEW LISTA LPAREN NUMBER RPAREN pto_coma
    (49) expLista -> . VAR ID EQUALS NEW LISTA LPAREN RPAREN pto_coma
    (50) expLista -> . VAR ID EQUALS LCORCHETE elementosLista RCORCHETE pto_coma
    (51) add_lista -> . ID LCORCHETE NUMBER RCORCHETE EQUALS num_cadena pto_coma
    (52) add_lista -> . ID PTO ADD LPAREN num_cadena RPAREN pto_coma
    (62) expMapa -> . VAR ID EQUALS NEW MAPA LPAREN RPAREN pto_coma
    (63) expMapa -> . MAPA ID EQUALS LCURLYB elementosMapa RCURLYB pto_coma
    (66) add_mapa -> . ID LCORCHETE CADENA RCORCHETE EQUALS CADENA pto_coma

    RCURLYB         shift and go to state 151
    VAR             shift and go to state 15
    FOR             shift and go to state 17
    WHILE           shift and go to state 18
    IF              shift and go to state 19
    ID              shift and go to state 16
    MAPA            shift and go to state 20

    expresion                      shift and go to state 21
    lista                          shift and go to state 2
    mapa                           shift and go to state 3
    variable                       shift and go to state 4
    expresionFor                   shift and go to state 5
    expresionWhile                 shift and go to state 6
    expresionIf                    shift and go to state 7
    concatenacion                  shift and go to state 8
    incremento                     shift and go to state 9
    decremento                     shift and go to state 10
    expLista                       shift and go to state 11
    add_lista                      shift and go to state 12
    expMapa                        shift and go to state 13
    add_mapa                       shift and go to state 14

state 131

    (31) expresionIf -> IF LPAREN expresionBool RPAREN LCURLYB expresion . RCURLYB
    (10) expresion -> expresion . expresion
    (1) expresion -> . lista
    (2) expresion -> . mapa
    (3) expresion -> . variable
    (4) expresion -> . expresionFor
    (5) expresion -> . expresionWhile
    (6) expresion -> . expresionIf
    (7) expresion -> . concatenacion
    (8) expresion -> . incremento
    (9) expresion -> . decremento
    (10) expresion -> . expresion expresion
    (46) lista -> . expLista
    (47) lista -> . add_lista
    (60) mapa -> . expMapa
    (61) mapa -> . add_mapa
    (11) variable -> . VAR ID EQUALS expresionVar PUNTCOM
    (12) variable -> . VAR ID PUNTCOM
    (13) variable -> . VAR ID EQUALS expresionBool PUNTCOM
    (20) expresionFor -> . FOR LPAREN forParameters RPAREN LCURLYB expresion RCURLYB
    (30) expresionWhile -> . WHILE LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB
    (31) expresionIf -> . IF LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB
    (74) concatenacion -> . VAR ID EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN pto_coma
    (72) incremento -> . ID INCREMENTO pto_coma
    (73) decremento -> . ID DECREMENTO pto_coma
    (48) expLista -> . VAR ID EQUALS NEW LISTA LPAREN NUMBER RPAREN pto_coma
    (49) expLista -> . VAR ID EQUALS NEW LISTA LPAREN RPAREN pto_coma
    (50) expLista -> . VAR ID EQUALS LCORCHETE elementosLista RCORCHETE pto_coma
    (51) add_lista -> . ID LCORCHETE NUMBER RCORCHETE EQUALS num_cadena pto_coma
    (52) add_lista -> . ID PTO ADD LPAREN num_cadena RPAREN pto_coma
    (62) expMapa -> . VAR ID EQUALS NEW MAPA LPAREN RPAREN pto_coma
    (63) expMapa -> . MAPA ID EQUALS LCURLYB elementosMapa RCURLYB pto_coma
    (66) add_mapa -> . ID LCORCHETE CADENA RCORCHETE EQUALS CADENA pto_coma

    RCURLYB         shift and go to state 152
    VAR             shift and go to state 15
    FOR             shift and go to state 17
    WHILE           shift and go to state 18
    IF              shift and go to state 19
    ID              shift and go to state 16
    MAPA            shift and go to state 20

    expresion                      shift and go to state 21
    lista                          shift and go to state 2
    mapa                           shift and go to state 3
    variable                       shift and go to state 4
    expresionFor                   shift and go to state 5
    expresionWhile                 shift and go to state 6
    expresionIf                    shift and go to state 7
    concatenacion                  shift and go to state 8
    incremento                     shift and go to state 9
    decremento                     shift and go to state 10
    expLista                       shift and go to state 11
    add_lista                      shift and go to state 12
    expMapa                        shift and go to state 13
    add_mapa                       shift and go to state 14

state 132

    (63) expMapa -> MAPA ID EQUALS LCURLYB elementosMapa RCURLYB . pto_coma
    (75) pto_coma -> . PUNTCOM

    PUNTCOM         shift and go to state 34

    pto_coma                       shift and go to state 153

state 133

    (64) elementosMapa -> num_cadena DOSPTO . num_cadena
    (65) elementosMapa -> num_cadena DOSPTO . num_cadena COMA elementosMapa
    (53) num_cadena -> . NUMBER
    (54) num_cadena -> . CADENA

    NUMBER          shift and go to state 96
    CADENA          shift and go to state 97

    num_cadena                     shift and go to state 154

state 134

    (74) concatenacion -> VAR ID EQUALS ID PTO SUBSTRING LPAREN . NUMBER COMA NUMBER RPAREN pto_coma

    NUMBER          shift and go to state 155


state 135

    (48) expLista -> VAR ID EQUALS NEW LISTA LPAREN NUMBER . RPAREN pto_coma

    RPAREN          shift and go to state 156


state 136

    (49) expLista -> VAR ID EQUALS NEW LISTA LPAREN RPAREN . pto_coma
    (75) pto_coma -> . PUNTCOM

    PUNTCOM         shift and go to state 34

    pto_coma                       shift and go to state 157

state 137

    (62) expMapa -> VAR ID EQUALS NEW MAPA LPAREN RPAREN . pto_coma
    (75) pto_coma -> . PUNTCOM

    PUNTCOM         shift and go to state 34

    pto_coma                       shift and go to state 158

state 138

    (50) expLista -> VAR ID EQUALS LCORCHETE elementosLista RCORCHETE pto_coma .

    VAR             reduce using rule 50 (expLista -> VAR ID EQUALS LCORCHETE elementosLista RCORCHETE pto_coma .)
    FOR             reduce using rule 50 (expLista -> VAR ID EQUALS LCORCHETE elementosLista RCORCHETE pto_coma .)
    WHILE           reduce using rule 50 (expLista -> VAR ID EQUALS LCORCHETE elementosLista RCORCHETE pto_coma .)
    IF              reduce using rule 50 (expLista -> VAR ID EQUALS LCORCHETE elementosLista RCORCHETE pto_coma .)
    ID              reduce using rule 50 (expLista -> VAR ID EQUALS LCORCHETE elementosLista RCORCHETE pto_coma .)
    MAPA            reduce using rule 50 (expLista -> VAR ID EQUALS LCORCHETE elementosLista RCORCHETE pto_coma .)
    $end            reduce using rule 50 (expLista -> VAR ID EQUALS LCORCHETE elementosLista RCORCHETE pto_coma .)
    RCURLYB         reduce using rule 50 (expLista -> VAR ID EQUALS LCORCHETE elementosLista RCORCHETE pto_coma .)


state 139

    (57) elementosLista -> CADENA COMA elementosLista .

    RCORCHETE       reduce using rule 57 (elementosLista -> CADENA COMA elementosLista .)


state 140

    (58) elementosLista -> NUMBER COMA elementosLista .

    RCORCHETE       reduce using rule 58 (elementosLista -> NUMBER COMA elementosLista .)


state 141

    (51) add_lista -> ID LCORCHETE NUMBER RCORCHETE EQUALS num_cadena pto_coma .

    VAR             reduce using rule 51 (add_lista -> ID LCORCHETE NUMBER RCORCHETE EQUALS num_cadena pto_coma .)
    FOR             reduce using rule 51 (add_lista -> ID LCORCHETE NUMBER RCORCHETE EQUALS num_cadena pto_coma .)
    WHILE           reduce using rule 51 (add_lista -> ID LCORCHETE NUMBER RCORCHETE EQUALS num_cadena pto_coma .)
    IF              reduce using rule 51 (add_lista -> ID LCORCHETE NUMBER RCORCHETE EQUALS num_cadena pto_coma .)
    ID              reduce using rule 51 (add_lista -> ID LCORCHETE NUMBER RCORCHETE EQUALS num_cadena pto_coma .)
    MAPA            reduce using rule 51 (add_lista -> ID LCORCHETE NUMBER RCORCHETE EQUALS num_cadena pto_coma .)
    $end            reduce using rule 51 (add_lista -> ID LCORCHETE NUMBER RCORCHETE EQUALS num_cadena pto_coma .)
    RCURLYB         reduce using rule 51 (add_lista -> ID LCORCHETE NUMBER RCORCHETE EQUALS num_cadena pto_coma .)


state 142

    (66) add_mapa -> ID LCORCHETE CADENA RCORCHETE EQUALS CADENA pto_coma .

    VAR             reduce using rule 66 (add_mapa -> ID LCORCHETE CADENA RCORCHETE EQUALS CADENA pto_coma .)
    FOR             reduce using rule 66 (add_mapa -> ID LCORCHETE CADENA RCORCHETE EQUALS CADENA pto_coma .)
    WHILE           reduce using rule 66 (add_mapa -> ID LCORCHETE CADENA RCORCHETE EQUALS CADENA pto_coma .)
    IF              reduce using rule 66 (add_mapa -> ID LCORCHETE CADENA RCORCHETE EQUALS CADENA pto_coma .)
    ID              reduce using rule 66 (add_mapa -> ID LCORCHETE CADENA RCORCHETE EQUALS CADENA pto_coma .)
    MAPA            reduce using rule 66 (add_mapa -> ID LCORCHETE CADENA RCORCHETE EQUALS CADENA pto_coma .)
    $end            reduce using rule 66 (add_mapa -> ID LCORCHETE CADENA RCORCHETE EQUALS CADENA pto_coma .)
    RCURLYB         reduce using rule 66 (add_mapa -> ID LCORCHETE CADENA RCORCHETE EQUALS CADENA pto_coma .)


state 143

    (52) add_lista -> ID PTO ADD LPAREN num_cadena RPAREN pto_coma .

    VAR             reduce using rule 52 (add_lista -> ID PTO ADD LPAREN num_cadena RPAREN pto_coma .)
    FOR             reduce using rule 52 (add_lista -> ID PTO ADD LPAREN num_cadena RPAREN pto_coma .)
    WHILE           reduce using rule 52 (add_lista -> ID PTO ADD LPAREN num_cadena RPAREN pto_coma .)
    IF              reduce using rule 52 (add_lista -> ID PTO ADD LPAREN num_cadena RPAREN pto_coma .)
    ID              reduce using rule 52 (add_lista -> ID PTO ADD LPAREN num_cadena RPAREN pto_coma .)
    MAPA            reduce using rule 52 (add_lista -> ID PTO ADD LPAREN num_cadena RPAREN pto_coma .)
    $end            reduce using rule 52 (add_lista -> ID PTO ADD LPAREN num_cadena RPAREN pto_coma .)
    RCURLYB         reduce using rule 52 (add_lista -> ID PTO ADD LPAREN num_cadena RPAREN pto_coma .)


state 144

    (20) expresionFor -> FOR LPAREN forParameters RPAREN LCURLYB expresion RCURLYB .

    VAR             reduce using rule 20 (expresionFor -> FOR LPAREN forParameters RPAREN LCURLYB expresion RCURLYB .)
    FOR             reduce using rule 20 (expresionFor -> FOR LPAREN forParameters RPAREN LCURLYB expresion RCURLYB .)
    WHILE           reduce using rule 20 (expresionFor -> FOR LPAREN forParameters RPAREN LCURLYB expresion RCURLYB .)
    IF              reduce using rule 20 (expresionFor -> FOR LPAREN forParameters RPAREN LCURLYB expresion RCURLYB .)
    ID              reduce using rule 20 (expresionFor -> FOR LPAREN forParameters RPAREN LCURLYB expresion RCURLYB .)
    MAPA            reduce using rule 20 (expresionFor -> FOR LPAREN forParameters RPAREN LCURLYB expresion RCURLYB .)
    $end            reduce using rule 20 (expresionFor -> FOR LPAREN forParameters RPAREN LCURLYB expresion RCURLYB .)
    RCURLYB         reduce using rule 20 (expresionFor -> FOR LPAREN forParameters RPAREN LCURLYB expresion RCURLYB .)


state 145

    (21) forParameters -> forIterator PUNTCOM forCondition PUNTCOM forAction .

    RPAREN          reduce using rule 21 (forParameters -> forIterator PUNTCOM forCondition PUNTCOM forAction .)


state 146

    (26) forAction -> ID . INCREMENTO
    (27) forAction -> ID . DECREMENTO

    INCREMENTO      shift and go to state 159
    DECREMENTO      shift and go to state 160


state 147

    (28) forAction -> INCREMENTO . ID

    ID              shift and go to state 161


state 148

    (29) forAction -> DECREMENTO . ID

    ID              shift and go to state 162


state 149

    (24) forCondition -> ID MAYORQUE NUMBER .

    PUNTCOM         reduce using rule 24 (forCondition -> ID MAYORQUE NUMBER .)


state 150

    (25) forCondition -> ID MENORQUE NUMBER .

    PUNTCOM         reduce using rule 25 (forCondition -> ID MENORQUE NUMBER .)


state 151

    (30) expresionWhile -> WHILE LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB .

    VAR             reduce using rule 30 (expresionWhile -> WHILE LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB .)
    FOR             reduce using rule 30 (expresionWhile -> WHILE LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB .)
    WHILE           reduce using rule 30 (expresionWhile -> WHILE LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB .)
    IF              reduce using rule 30 (expresionWhile -> WHILE LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB .)
    ID              reduce using rule 30 (expresionWhile -> WHILE LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB .)
    MAPA            reduce using rule 30 (expresionWhile -> WHILE LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB .)
    $end            reduce using rule 30 (expresionWhile -> WHILE LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB .)
    RCURLYB         reduce using rule 30 (expresionWhile -> WHILE LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB .)


state 152

    (31) expresionIf -> IF LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB .

    VAR             reduce using rule 31 (expresionIf -> IF LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB .)
    FOR             reduce using rule 31 (expresionIf -> IF LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB .)
    WHILE           reduce using rule 31 (expresionIf -> IF LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB .)
    IF              reduce using rule 31 (expresionIf -> IF LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB .)
    ID              reduce using rule 31 (expresionIf -> IF LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB .)
    MAPA            reduce using rule 31 (expresionIf -> IF LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB .)
    $end            reduce using rule 31 (expresionIf -> IF LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB .)
    RCURLYB         reduce using rule 31 (expresionIf -> IF LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB .)


state 153

    (63) expMapa -> MAPA ID EQUALS LCURLYB elementosMapa RCURLYB pto_coma .

    VAR             reduce using rule 63 (expMapa -> MAPA ID EQUALS LCURLYB elementosMapa RCURLYB pto_coma .)
    FOR             reduce using rule 63 (expMapa -> MAPA ID EQUALS LCURLYB elementosMapa RCURLYB pto_coma .)
    WHILE           reduce using rule 63 (expMapa -> MAPA ID EQUALS LCURLYB elementosMapa RCURLYB pto_coma .)
    IF              reduce using rule 63 (expMapa -> MAPA ID EQUALS LCURLYB elementosMapa RCURLYB pto_coma .)
    ID              reduce using rule 63 (expMapa -> MAPA ID EQUALS LCURLYB elementosMapa RCURLYB pto_coma .)
    MAPA            reduce using rule 63 (expMapa -> MAPA ID EQUALS LCURLYB elementosMapa RCURLYB pto_coma .)
    $end            reduce using rule 63 (expMapa -> MAPA ID EQUALS LCURLYB elementosMapa RCURLYB pto_coma .)
    RCURLYB         reduce using rule 63 (expMapa -> MAPA ID EQUALS LCURLYB elementosMapa RCURLYB pto_coma .)


state 154

    (64) elementosMapa -> num_cadena DOSPTO num_cadena .
    (65) elementosMapa -> num_cadena DOSPTO num_cadena . COMA elementosMapa

    RCURLYB         reduce using rule 64 (elementosMapa -> num_cadena DOSPTO num_cadena .)
    COMA            shift and go to state 163


state 155

    (74) concatenacion -> VAR ID EQUALS ID PTO SUBSTRING LPAREN NUMBER . COMA NUMBER RPAREN pto_coma

    COMA            shift and go to state 164


state 156

    (48) expLista -> VAR ID EQUALS NEW LISTA LPAREN NUMBER RPAREN . pto_coma
    (75) pto_coma -> . PUNTCOM

    PUNTCOM         shift and go to state 34

    pto_coma                       shift and go to state 165

state 157

    (49) expLista -> VAR ID EQUALS NEW LISTA LPAREN RPAREN pto_coma .

    VAR             reduce using rule 49 (expLista -> VAR ID EQUALS NEW LISTA LPAREN RPAREN pto_coma .)
    FOR             reduce using rule 49 (expLista -> VAR ID EQUALS NEW LISTA LPAREN RPAREN pto_coma .)
    WHILE           reduce using rule 49 (expLista -> VAR ID EQUALS NEW LISTA LPAREN RPAREN pto_coma .)
    IF              reduce using rule 49 (expLista -> VAR ID EQUALS NEW LISTA LPAREN RPAREN pto_coma .)
    ID              reduce using rule 49 (expLista -> VAR ID EQUALS NEW LISTA LPAREN RPAREN pto_coma .)
    MAPA            reduce using rule 49 (expLista -> VAR ID EQUALS NEW LISTA LPAREN RPAREN pto_coma .)
    $end            reduce using rule 49 (expLista -> VAR ID EQUALS NEW LISTA LPAREN RPAREN pto_coma .)
    RCURLYB         reduce using rule 49 (expLista -> VAR ID EQUALS NEW LISTA LPAREN RPAREN pto_coma .)


state 158

    (62) expMapa -> VAR ID EQUALS NEW MAPA LPAREN RPAREN pto_coma .

    VAR             reduce using rule 62 (expMapa -> VAR ID EQUALS NEW MAPA LPAREN RPAREN pto_coma .)
    FOR             reduce using rule 62 (expMapa -> VAR ID EQUALS NEW MAPA LPAREN RPAREN pto_coma .)
    WHILE           reduce using rule 62 (expMapa -> VAR ID EQUALS NEW MAPA LPAREN RPAREN pto_coma .)
    IF              reduce using rule 62 (expMapa -> VAR ID EQUALS NEW MAPA LPAREN RPAREN pto_coma .)
    ID              reduce using rule 62 (expMapa -> VAR ID EQUALS NEW MAPA LPAREN RPAREN pto_coma .)
    MAPA            reduce using rule 62 (expMapa -> VAR ID EQUALS NEW MAPA LPAREN RPAREN pto_coma .)
    $end            reduce using rule 62 (expMapa -> VAR ID EQUALS NEW MAPA LPAREN RPAREN pto_coma .)
    RCURLYB         reduce using rule 62 (expMapa -> VAR ID EQUALS NEW MAPA LPAREN RPAREN pto_coma .)


state 159

    (26) forAction -> ID INCREMENTO .

    RPAREN          reduce using rule 26 (forAction -> ID INCREMENTO .)


state 160

    (27) forAction -> ID DECREMENTO .

    RPAREN          reduce using rule 27 (forAction -> ID DECREMENTO .)


state 161

    (28) forAction -> INCREMENTO ID .

    RPAREN          reduce using rule 28 (forAction -> INCREMENTO ID .)


state 162

    (29) forAction -> DECREMENTO ID .

    RPAREN          reduce using rule 29 (forAction -> DECREMENTO ID .)


state 163

    (65) elementosMapa -> num_cadena DOSPTO num_cadena COMA . elementosMapa
    (64) elementosMapa -> . num_cadena DOSPTO num_cadena
    (65) elementosMapa -> . num_cadena DOSPTO num_cadena COMA elementosMapa
    (53) num_cadena -> . NUMBER
    (54) num_cadena -> . CADENA

    NUMBER          shift and go to state 96
    CADENA          shift and go to state 97

    num_cadena                     shift and go to state 112
    elementosMapa                  shift and go to state 166

state 164

    (74) concatenacion -> VAR ID EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA . NUMBER RPAREN pto_coma

    NUMBER          shift and go to state 167


state 165

    (48) expLista -> VAR ID EQUALS NEW LISTA LPAREN NUMBER RPAREN pto_coma .

    VAR             reduce using rule 48 (expLista -> VAR ID EQUALS NEW LISTA LPAREN NUMBER RPAREN pto_coma .)
    FOR             reduce using rule 48 (expLista -> VAR ID EQUALS NEW LISTA LPAREN NUMBER RPAREN pto_coma .)
    WHILE           reduce using rule 48 (expLista -> VAR ID EQUALS NEW LISTA LPAREN NUMBER RPAREN pto_coma .)
    IF              reduce using rule 48 (expLista -> VAR ID EQUALS NEW LISTA LPAREN NUMBER RPAREN pto_coma .)
    ID              reduce using rule 48 (expLista -> VAR ID EQUALS NEW LISTA LPAREN NUMBER RPAREN pto_coma .)
    MAPA            reduce using rule 48 (expLista -> VAR ID EQUALS NEW LISTA LPAREN NUMBER RPAREN pto_coma .)
    $end            reduce using rule 48 (expLista -> VAR ID EQUALS NEW LISTA LPAREN NUMBER RPAREN pto_coma .)
    RCURLYB         reduce using rule 48 (expLista -> VAR ID EQUALS NEW LISTA LPAREN NUMBER RPAREN pto_coma .)


state 166

    (65) elementosMapa -> num_cadena DOSPTO num_cadena COMA elementosMapa .

    RCURLYB         reduce using rule 65 (elementosMapa -> num_cadena DOSPTO num_cadena COMA elementosMapa .)


state 167

    (74) concatenacion -> VAR ID EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER . RPAREN pto_coma

    RPAREN          shift and go to state 168


state 168

    (74) concatenacion -> VAR ID EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN . pto_coma
    (75) pto_coma -> . PUNTCOM

    PUNTCOM         shift and go to state 34

    pto_coma                       shift and go to state 169

state 169

    (74) concatenacion -> VAR ID EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN pto_coma .

    VAR             reduce using rule 74 (concatenacion -> VAR ID EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN pto_coma .)
    FOR             reduce using rule 74 (concatenacion -> VAR ID EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN pto_coma .)
    WHILE           reduce using rule 74 (concatenacion -> VAR ID EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN pto_coma .)
    IF              reduce using rule 74 (concatenacion -> VAR ID EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN pto_coma .)
    ID              reduce using rule 74 (concatenacion -> VAR ID EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN pto_coma .)
    MAPA            reduce using rule 74 (concatenacion -> VAR ID EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN pto_coma .)
    $end            reduce using rule 74 (concatenacion -> VAR ID EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN pto_coma .)
    RCURLYB         reduce using rule 74 (concatenacion -> VAR ID EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN pto_coma .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for VAR in state 21 resolved as shift
WARNING: shift/reduce conflict for FOR in state 21 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 21 resolved as shift
WARNING: shift/reduce conflict for IF in state 21 resolved as shift
WARNING: shift/reduce conflict for ID in state 21 resolved as shift
WARNING: shift/reduce conflict for MAPA in state 21 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 114 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 114 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 114 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 114 resolved as shift
WARNING: shift/reduce conflict for DIVIDE_E in state 114 resolved as shift
