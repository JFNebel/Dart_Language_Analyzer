Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    VARBOOL
    VARDOUBLE

Grammar

Rule 0     S' -> expresion
Rule 1     expresion -> lista
Rule 2     expresion -> mapa
Rule 3     expresion -> variable
Rule 4     expresion -> expresionFor
Rule 5     expresion -> expresionWhile
Rule 6     expresion -> expresionIf
Rule 7     expresion -> f_subtring
Rule 8     expresion -> accPosString
Rule 9     expresion -> incremento
Rule 10    expresion -> decremento
Rule 11    expresion -> print
Rule 12    expresion -> funcion
Rule 13    expresion -> concatenar
Rule 14    expresion -> expresion expresion
Rule 15    variable -> VAR ID EQUALS expresionVar PUNTCOM
Rule 16    variable -> VAR ID PUNTCOM
Rule 17    variable -> VAR ID EQUALS expresionBool PUNTCOM
Rule 18    valorVar -> NUMBER
Rule 19    valorVar -> DOUBLE
Rule 20    valorVar -> CADENA
Rule 21    expresionVar -> valorVar
Rule 22    expresionVar -> ID
Rule 23    expresionVar -> expresionVar operadorA expresionVar
Rule 24    expresionFor -> FOR LPAREN forParameters RPAREN LCURLYB expresion RCURLYB
Rule 25    forParameters -> forIterator PUNTCOM forCondition PUNTCOM forAction
Rule 26    forIterator -> INT ID EQUALS NUMBER
Rule 27    forIterator -> ID EQUALS NUMBER
Rule 28    forCondition -> ID MAYORQUE NUMBER
Rule 29    forCondition -> ID MENORQUE NUMBER
Rule 30    forAction -> ID INCREMENTO
Rule 31    forAction -> ID DECREMENTO
Rule 32    forAction -> INCREMENTO ID
Rule 33    forAction -> DECREMENTO ID
Rule 34    expresionWhile -> WHILE LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB
Rule 35    expresionIf -> IF LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB
Rule 36    expresionBool -> booleano
Rule 37    expresionBool -> ID comparador ID
Rule 38    expresionBool -> ID comparador NUMBER
Rule 39    expresionBool -> NUMBER comparador ID
Rule 40    expresionBool -> NUMBER comparador NUMBER
Rule 41    expresionBool -> NOT ID
Rule 42    expresionBool -> expresionBool comparador expresionBool
Rule 43    expresionBool -> expresionBool EQUIVAL expresionBool
Rule 44    booleano -> TRUE
Rule 45    booleano -> FALSE
Rule 46    comparador -> MAYORQUE
Rule 47    comparador -> MENORQUE
Rule 48    comparador -> EQUIVAL
Rule 49    comparador -> MINEQ
Rule 50    comparador -> MAYEQ
Rule 51    comparador -> NOEQUIVAL
Rule 52    comparador -> AND
Rule 53    comparador -> OR
Rule 54    lista -> expLista
Rule 55    lista -> add_lista
Rule 56    lista -> replace
Rule 57    expLista -> VAR ID EQUALS NEW LISTA LPAREN inicializaLista RPAREN PUNTCOM
Rule 58    expLista -> VAR ID EQUALS LCORCHETE elementosLista RCORCHETE PUNTCOM
Rule 59    inicializaLista -> NUMBER
Rule 60    inicializaLista -> <empty>
Rule 61    add_lista -> ID LCORCHETE NUMBER RCORCHETE EQUALS num_cadena PUNTCOM
Rule 62    add_lista -> ID PTO ADD LPAREN elementoAddLista RPAREN PUNTCOM
Rule 63    elementoAddLista -> num_cadena
Rule 64    elementoAddLista -> booleano
Rule 65    num_cadena -> NUMBER
Rule 66    num_cadena -> CADENA
Rule 67    elementosLista -> CADENA
Rule 68    elementosLista -> NUMBER
Rule 69    elementosLista -> CADENA COMA elementosLista
Rule 70    elementosLista -> NUMBER COMA elementosLista
Rule 71    elementosLista -> <empty>
Rule 72    replace -> ID PTO REPLACE LPAREN NUMBER COMA NUMBER COMA LCORCHETE NUMBER RCORCHETE RPAREN PUNTCOM
Rule 73    mapa -> expMapa
Rule 74    mapa -> add_mapa
Rule 75    mapa -> update_mapa
Rule 76    mapa -> add_mapa_putIfAbsent
Rule 77    expMapa -> VAR ID EQUALS NEW MAPA LPAREN RPAREN PUNTCOM
Rule 78    expMapa -> MAPA ID EQUALS LCURLYB elementosMapa RCURLYB PUNTCOM
Rule 79    elementosMapa -> num_cadena DOSPTO num_cadena
Rule 80    elementosMapa -> num_cadena DOSPTO num_cadena COMA elementosMapa
Rule 81    add_mapa -> ID LCORCHETE num_cadena RCORCHETE EQUALS num_cadena PUNTCOM
Rule 82    add_mapa_putIfAbsent -> ID PTO PUT LPAREN num_cadena COMA LPAREN RPAREN EQUALS MAYORQUE num_cadena RPAREN PUNTCOM
Rule 83    update_mapa -> ID PTO UPDATE LPAREN CADENA COMA LPAREN VAR ID RPAREN EQUALS MAYORQUE CADENA COMA IFABSENT DOSPTO LPAREN RPAREN EQUALS MAYORQUE CADENA RPAREN PUNTCOM
Rule 84    operadorA -> PLUS
Rule 85    operadorA -> MINUS
Rule 86    operadorA -> TIMES
Rule 87    operadorA -> DIVIDE
Rule 88    operadorA -> DIVIDE_E
Rule 89    incremento -> ID INCREMENTO PUNTCOM
Rule 90    decremento -> ID DECREMENTO PUNTCOM
Rule 91    f_subtring -> VAR ID EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN PUNTCOM
Rule 92    accPosString -> VAR ID EQUALS ID LCORCHETE NUMBER RCORCHETE PUNTCOM
Rule 93    print -> PRINT LPAREN printVal RPAREN PUNTCOM
Rule 94    printVal -> ID
Rule 95    printVal -> valorVar
Rule 96    printVal -> expresionBool
Rule 97    funcion -> VOID ID LPAREN parametroFuncion RPAREN final_key
Rule 98    parametroFuncion -> VAR ID
Rule 99    parametroFuncion -> <empty>
Rule 100   final_key -> LCURLYB expresion RCURLYB
Rule 101   concatenar -> VAR ID EQUALS concatenarRecursivo PUNTCOM
Rule 102   concatenarRecursivo -> CADENA PLUS CADENA
Rule 103   concatenarRecursivo -> PLUS CADENA
Rule 104   concatenarRecursivo -> CADENA PLUS concatenarRecursivo

Terminals, with rules where they appear

ADD                  : 62
AND                  : 52
CADENA               : 20 66 67 69 83 83 83 102 102 103 104
COMA                 : 69 70 72 72 80 82 83 83 91
DECREMENTO           : 31 33 90
DIVIDE               : 87
DIVIDE_E             : 88
DOSPTO               : 79 80 83
DOUBLE               : 19
EQUALS               : 15 17 26 27 57 58 61 77 78 81 82 83 83 91 92 101
EQUIVAL              : 43 48
FALSE                : 45
FOR                  : 24
ID                   : 15 16 17 22 26 27 28 29 30 31 32 33 37 37 38 39 41 57 58 61 62 72 77 78 81 82 83 83 89 90 91 91 92 92 94 97 98 101
IF                   : 35
IFABSENT             : 83
INCREMENTO           : 30 32 89
INT                  : 26
LCORCHETE            : 58 61 72 81 92
LCURLYB              : 24 34 35 78 100
LISTA                : 57
LPAREN               : 24 34 35 57 62 72 77 82 82 83 83 83 91 93 97
MAPA                 : 77 78
MAYEQ                : 50
MAYORQUE             : 28 46 82 83 83
MENORQUE             : 29 47
MINEQ                : 49
MINUS                : 85
NEW                  : 57 77
NOEQUIVAL            : 51
NOT                  : 41
NUMBER               : 18 26 27 28 29 38 39 40 40 59 61 65 68 70 72 72 72 91 91 92
OR                   : 53
PLUS                 : 84 102 103 104
PRINT                : 93
PTO                  : 62 72 82 83 91
PUNTCOM              : 15 16 17 25 25 57 58 61 62 72 77 78 81 82 83 89 90 91 92 93 101
PUT                  : 82
RCORCHETE            : 58 61 72 81 92
RCURLYB              : 24 34 35 78 100
REPLACE              : 72
RPAREN               : 24 34 35 57 62 72 77 82 82 83 83 83 91 93 97
SUBSTRING            : 91
TIMES                : 86
TRUE                 : 44
UPDATE               : 83
VAR                  : 15 16 17 57 58 77 83 91 92 98 101
VARBOOL              : 
VARDOUBLE            : 
VOID                 : 97
WHILE                : 34
error                : 

Nonterminals, with rules where they appear

accPosString         : 8
add_lista            : 55
add_mapa             : 74
add_mapa_putIfAbsent : 76
booleano             : 36 64
comparador           : 37 38 39 40 42
concatenar           : 13
concatenarRecursivo  : 101 104
decremento           : 10
elementoAddLista     : 62
elementosLista       : 58 69 70
elementosMapa        : 78 80
expLista             : 54
expMapa              : 73
expresion            : 14 14 24 34 35 100 0
expresionBool        : 17 34 35 42 42 43 43 96
expresionFor         : 4
expresionIf          : 6
expresionVar         : 15 23 23
expresionWhile       : 5
f_subtring           : 7
final_key            : 97
forAction            : 25
forCondition         : 25
forIterator          : 25
forParameters        : 24
funcion              : 12
incremento           : 9
inicializaLista      : 57
lista                : 1
mapa                 : 2
num_cadena           : 61 63 79 79 80 80 81 81 82 82
operadorA            : 23
parametroFuncion     : 97
print                : 11
printVal             : 93
replace              : 56
update_mapa          : 75
valorVar             : 21 95
variable             : 3

Parsing method: LALR

state 0

    (0) S' -> . expresion
    (1) expresion -> . lista
    (2) expresion -> . mapa
    (3) expresion -> . variable
    (4) expresion -> . expresionFor
    (5) expresion -> . expresionWhile
    (6) expresion -> . expresionIf
    (7) expresion -> . f_subtring
    (8) expresion -> . accPosString
    (9) expresion -> . incremento
    (10) expresion -> . decremento
    (11) expresion -> . print
    (12) expresion -> . funcion
    (13) expresion -> . concatenar
    (14) expresion -> . expresion expresion
    (54) lista -> . expLista
    (55) lista -> . add_lista
    (56) lista -> . replace
    (73) mapa -> . expMapa
    (74) mapa -> . add_mapa
    (75) mapa -> . update_mapa
    (76) mapa -> . add_mapa_putIfAbsent
    (15) variable -> . VAR ID EQUALS expresionVar PUNTCOM
    (16) variable -> . VAR ID PUNTCOM
    (17) variable -> . VAR ID EQUALS expresionBool PUNTCOM
    (24) expresionFor -> . FOR LPAREN forParameters RPAREN LCURLYB expresion RCURLYB
    (34) expresionWhile -> . WHILE LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB
    (35) expresionIf -> . IF LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB
    (91) f_subtring -> . VAR ID EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN PUNTCOM
    (92) accPosString -> . VAR ID EQUALS ID LCORCHETE NUMBER RCORCHETE PUNTCOM
    (89) incremento -> . ID INCREMENTO PUNTCOM
    (90) decremento -> . ID DECREMENTO PUNTCOM
    (93) print -> . PRINT LPAREN printVal RPAREN PUNTCOM
    (97) funcion -> . VOID ID LPAREN parametroFuncion RPAREN final_key
    (101) concatenar -> . VAR ID EQUALS concatenarRecursivo PUNTCOM
    (57) expLista -> . VAR ID EQUALS NEW LISTA LPAREN inicializaLista RPAREN PUNTCOM
    (58) expLista -> . VAR ID EQUALS LCORCHETE elementosLista RCORCHETE PUNTCOM
    (61) add_lista -> . ID LCORCHETE NUMBER RCORCHETE EQUALS num_cadena PUNTCOM
    (62) add_lista -> . ID PTO ADD LPAREN elementoAddLista RPAREN PUNTCOM
    (72) replace -> . ID PTO REPLACE LPAREN NUMBER COMA NUMBER COMA LCORCHETE NUMBER RCORCHETE RPAREN PUNTCOM
    (77) expMapa -> . VAR ID EQUALS NEW MAPA LPAREN RPAREN PUNTCOM
    (78) expMapa -> . MAPA ID EQUALS LCURLYB elementosMapa RCURLYB PUNTCOM
    (81) add_mapa -> . ID LCORCHETE num_cadena RCORCHETE EQUALS num_cadena PUNTCOM
    (83) update_mapa -> . ID PTO UPDATE LPAREN CADENA COMA LPAREN VAR ID RPAREN EQUALS MAYORQUE CADENA COMA IFABSENT DOSPTO LPAREN RPAREN EQUALS MAYORQUE CADENA RPAREN PUNTCOM
    (82) add_mapa_putIfAbsent -> . ID PTO PUT LPAREN num_cadena COMA LPAREN RPAREN EQUALS MAYORQUE num_cadena RPAREN PUNTCOM

    VAR             shift and go to state 22
    FOR             shift and go to state 24
    WHILE           shift and go to state 25
    IF              shift and go to state 26
    ID              shift and go to state 23
    PRINT           shift and go to state 27
    VOID            shift and go to state 28
    MAPA            shift and go to state 29

    expresion                      shift and go to state 1
    lista                          shift and go to state 2
    mapa                           shift and go to state 3
    variable                       shift and go to state 4
    expresionFor                   shift and go to state 5
    expresionWhile                 shift and go to state 6
    expresionIf                    shift and go to state 7
    f_subtring                     shift and go to state 8
    accPosString                   shift and go to state 9
    incremento                     shift and go to state 10
    decremento                     shift and go to state 11
    print                          shift and go to state 12
    funcion                        shift and go to state 13
    concatenar                     shift and go to state 14
    expLista                       shift and go to state 15
    add_lista                      shift and go to state 16
    replace                        shift and go to state 17
    expMapa                        shift and go to state 18
    add_mapa                       shift and go to state 19
    update_mapa                    shift and go to state 20
    add_mapa_putIfAbsent           shift and go to state 21

state 1

    (0) S' -> expresion .
    (14) expresion -> expresion . expresion
    (1) expresion -> . lista
    (2) expresion -> . mapa
    (3) expresion -> . variable
    (4) expresion -> . expresionFor
    (5) expresion -> . expresionWhile
    (6) expresion -> . expresionIf
    (7) expresion -> . f_subtring
    (8) expresion -> . accPosString
    (9) expresion -> . incremento
    (10) expresion -> . decremento
    (11) expresion -> . print
    (12) expresion -> . funcion
    (13) expresion -> . concatenar
    (14) expresion -> . expresion expresion
    (54) lista -> . expLista
    (55) lista -> . add_lista
    (56) lista -> . replace
    (73) mapa -> . expMapa
    (74) mapa -> . add_mapa
    (75) mapa -> . update_mapa
    (76) mapa -> . add_mapa_putIfAbsent
    (15) variable -> . VAR ID EQUALS expresionVar PUNTCOM
    (16) variable -> . VAR ID PUNTCOM
    (17) variable -> . VAR ID EQUALS expresionBool PUNTCOM
    (24) expresionFor -> . FOR LPAREN forParameters RPAREN LCURLYB expresion RCURLYB
    (34) expresionWhile -> . WHILE LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB
    (35) expresionIf -> . IF LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB
    (91) f_subtring -> . VAR ID EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN PUNTCOM
    (92) accPosString -> . VAR ID EQUALS ID LCORCHETE NUMBER RCORCHETE PUNTCOM
    (89) incremento -> . ID INCREMENTO PUNTCOM
    (90) decremento -> . ID DECREMENTO PUNTCOM
    (93) print -> . PRINT LPAREN printVal RPAREN PUNTCOM
    (97) funcion -> . VOID ID LPAREN parametroFuncion RPAREN final_key
    (101) concatenar -> . VAR ID EQUALS concatenarRecursivo PUNTCOM
    (57) expLista -> . VAR ID EQUALS NEW LISTA LPAREN inicializaLista RPAREN PUNTCOM
    (58) expLista -> . VAR ID EQUALS LCORCHETE elementosLista RCORCHETE PUNTCOM
    (61) add_lista -> . ID LCORCHETE NUMBER RCORCHETE EQUALS num_cadena PUNTCOM
    (62) add_lista -> . ID PTO ADD LPAREN elementoAddLista RPAREN PUNTCOM
    (72) replace -> . ID PTO REPLACE LPAREN NUMBER COMA NUMBER COMA LCORCHETE NUMBER RCORCHETE RPAREN PUNTCOM
    (77) expMapa -> . VAR ID EQUALS NEW MAPA LPAREN RPAREN PUNTCOM
    (78) expMapa -> . MAPA ID EQUALS LCURLYB elementosMapa RCURLYB PUNTCOM
    (81) add_mapa -> . ID LCORCHETE num_cadena RCORCHETE EQUALS num_cadena PUNTCOM
    (83) update_mapa -> . ID PTO UPDATE LPAREN CADENA COMA LPAREN VAR ID RPAREN EQUALS MAYORQUE CADENA COMA IFABSENT DOSPTO LPAREN RPAREN EQUALS MAYORQUE CADENA RPAREN PUNTCOM
    (82) add_mapa_putIfAbsent -> . ID PTO PUT LPAREN num_cadena COMA LPAREN RPAREN EQUALS MAYORQUE num_cadena RPAREN PUNTCOM

    VAR             shift and go to state 22
    FOR             shift and go to state 24
    WHILE           shift and go to state 25
    IF              shift and go to state 26
    ID              shift and go to state 23
    PRINT           shift and go to state 27
    VOID            shift and go to state 28
    MAPA            shift and go to state 29

    expresion                      shift and go to state 30
    lista                          shift and go to state 2
    mapa                           shift and go to state 3
    variable                       shift and go to state 4
    expresionFor                   shift and go to state 5
    expresionWhile                 shift and go to state 6
    expresionIf                    shift and go to state 7
    f_subtring                     shift and go to state 8
    accPosString                   shift and go to state 9
    incremento                     shift and go to state 10
    decremento                     shift and go to state 11
    print                          shift and go to state 12
    funcion                        shift and go to state 13
    concatenar                     shift and go to state 14
    expLista                       shift and go to state 15
    add_lista                      shift and go to state 16
    replace                        shift and go to state 17
    expMapa                        shift and go to state 18
    add_mapa                       shift and go to state 19
    update_mapa                    shift and go to state 20
    add_mapa_putIfAbsent           shift and go to state 21

state 2

    (1) expresion -> lista .

    VAR             reduce using rule 1 (expresion -> lista .)
    FOR             reduce using rule 1 (expresion -> lista .)
    WHILE           reduce using rule 1 (expresion -> lista .)
    IF              reduce using rule 1 (expresion -> lista .)
    ID              reduce using rule 1 (expresion -> lista .)
    PRINT           reduce using rule 1 (expresion -> lista .)
    VOID            reduce using rule 1 (expresion -> lista .)
    MAPA            reduce using rule 1 (expresion -> lista .)
    $end            reduce using rule 1 (expresion -> lista .)
    RCURLYB         reduce using rule 1 (expresion -> lista .)


state 3

    (2) expresion -> mapa .

    VAR             reduce using rule 2 (expresion -> mapa .)
    FOR             reduce using rule 2 (expresion -> mapa .)
    WHILE           reduce using rule 2 (expresion -> mapa .)
    IF              reduce using rule 2 (expresion -> mapa .)
    ID              reduce using rule 2 (expresion -> mapa .)
    PRINT           reduce using rule 2 (expresion -> mapa .)
    VOID            reduce using rule 2 (expresion -> mapa .)
    MAPA            reduce using rule 2 (expresion -> mapa .)
    $end            reduce using rule 2 (expresion -> mapa .)
    RCURLYB         reduce using rule 2 (expresion -> mapa .)


state 4

    (3) expresion -> variable .

    VAR             reduce using rule 3 (expresion -> variable .)
    FOR             reduce using rule 3 (expresion -> variable .)
    WHILE           reduce using rule 3 (expresion -> variable .)
    IF              reduce using rule 3 (expresion -> variable .)
    ID              reduce using rule 3 (expresion -> variable .)
    PRINT           reduce using rule 3 (expresion -> variable .)
    VOID            reduce using rule 3 (expresion -> variable .)
    MAPA            reduce using rule 3 (expresion -> variable .)
    $end            reduce using rule 3 (expresion -> variable .)
    RCURLYB         reduce using rule 3 (expresion -> variable .)


state 5

    (4) expresion -> expresionFor .

    VAR             reduce using rule 4 (expresion -> expresionFor .)
    FOR             reduce using rule 4 (expresion -> expresionFor .)
    WHILE           reduce using rule 4 (expresion -> expresionFor .)
    IF              reduce using rule 4 (expresion -> expresionFor .)
    ID              reduce using rule 4 (expresion -> expresionFor .)
    PRINT           reduce using rule 4 (expresion -> expresionFor .)
    VOID            reduce using rule 4 (expresion -> expresionFor .)
    MAPA            reduce using rule 4 (expresion -> expresionFor .)
    $end            reduce using rule 4 (expresion -> expresionFor .)
    RCURLYB         reduce using rule 4 (expresion -> expresionFor .)


state 6

    (5) expresion -> expresionWhile .

    VAR             reduce using rule 5 (expresion -> expresionWhile .)
    FOR             reduce using rule 5 (expresion -> expresionWhile .)
    WHILE           reduce using rule 5 (expresion -> expresionWhile .)
    IF              reduce using rule 5 (expresion -> expresionWhile .)
    ID              reduce using rule 5 (expresion -> expresionWhile .)
    PRINT           reduce using rule 5 (expresion -> expresionWhile .)
    VOID            reduce using rule 5 (expresion -> expresionWhile .)
    MAPA            reduce using rule 5 (expresion -> expresionWhile .)
    $end            reduce using rule 5 (expresion -> expresionWhile .)
    RCURLYB         reduce using rule 5 (expresion -> expresionWhile .)


state 7

    (6) expresion -> expresionIf .

    VAR             reduce using rule 6 (expresion -> expresionIf .)
    FOR             reduce using rule 6 (expresion -> expresionIf .)
    WHILE           reduce using rule 6 (expresion -> expresionIf .)
    IF              reduce using rule 6 (expresion -> expresionIf .)
    ID              reduce using rule 6 (expresion -> expresionIf .)
    PRINT           reduce using rule 6 (expresion -> expresionIf .)
    VOID            reduce using rule 6 (expresion -> expresionIf .)
    MAPA            reduce using rule 6 (expresion -> expresionIf .)
    $end            reduce using rule 6 (expresion -> expresionIf .)
    RCURLYB         reduce using rule 6 (expresion -> expresionIf .)


state 8

    (7) expresion -> f_subtring .

    VAR             reduce using rule 7 (expresion -> f_subtring .)
    FOR             reduce using rule 7 (expresion -> f_subtring .)
    WHILE           reduce using rule 7 (expresion -> f_subtring .)
    IF              reduce using rule 7 (expresion -> f_subtring .)
    ID              reduce using rule 7 (expresion -> f_subtring .)
    PRINT           reduce using rule 7 (expresion -> f_subtring .)
    VOID            reduce using rule 7 (expresion -> f_subtring .)
    MAPA            reduce using rule 7 (expresion -> f_subtring .)
    $end            reduce using rule 7 (expresion -> f_subtring .)
    RCURLYB         reduce using rule 7 (expresion -> f_subtring .)


state 9

    (8) expresion -> accPosString .

    VAR             reduce using rule 8 (expresion -> accPosString .)
    FOR             reduce using rule 8 (expresion -> accPosString .)
    WHILE           reduce using rule 8 (expresion -> accPosString .)
    IF              reduce using rule 8 (expresion -> accPosString .)
    ID              reduce using rule 8 (expresion -> accPosString .)
    PRINT           reduce using rule 8 (expresion -> accPosString .)
    VOID            reduce using rule 8 (expresion -> accPosString .)
    MAPA            reduce using rule 8 (expresion -> accPosString .)
    $end            reduce using rule 8 (expresion -> accPosString .)
    RCURLYB         reduce using rule 8 (expresion -> accPosString .)


state 10

    (9) expresion -> incremento .

    VAR             reduce using rule 9 (expresion -> incremento .)
    FOR             reduce using rule 9 (expresion -> incremento .)
    WHILE           reduce using rule 9 (expresion -> incremento .)
    IF              reduce using rule 9 (expresion -> incremento .)
    ID              reduce using rule 9 (expresion -> incremento .)
    PRINT           reduce using rule 9 (expresion -> incremento .)
    VOID            reduce using rule 9 (expresion -> incremento .)
    MAPA            reduce using rule 9 (expresion -> incremento .)
    $end            reduce using rule 9 (expresion -> incremento .)
    RCURLYB         reduce using rule 9 (expresion -> incremento .)


state 11

    (10) expresion -> decremento .

    VAR             reduce using rule 10 (expresion -> decremento .)
    FOR             reduce using rule 10 (expresion -> decremento .)
    WHILE           reduce using rule 10 (expresion -> decremento .)
    IF              reduce using rule 10 (expresion -> decremento .)
    ID              reduce using rule 10 (expresion -> decremento .)
    PRINT           reduce using rule 10 (expresion -> decremento .)
    VOID            reduce using rule 10 (expresion -> decremento .)
    MAPA            reduce using rule 10 (expresion -> decremento .)
    $end            reduce using rule 10 (expresion -> decremento .)
    RCURLYB         reduce using rule 10 (expresion -> decremento .)


state 12

    (11) expresion -> print .

    VAR             reduce using rule 11 (expresion -> print .)
    FOR             reduce using rule 11 (expresion -> print .)
    WHILE           reduce using rule 11 (expresion -> print .)
    IF              reduce using rule 11 (expresion -> print .)
    ID              reduce using rule 11 (expresion -> print .)
    PRINT           reduce using rule 11 (expresion -> print .)
    VOID            reduce using rule 11 (expresion -> print .)
    MAPA            reduce using rule 11 (expresion -> print .)
    $end            reduce using rule 11 (expresion -> print .)
    RCURLYB         reduce using rule 11 (expresion -> print .)


state 13

    (12) expresion -> funcion .

    VAR             reduce using rule 12 (expresion -> funcion .)
    FOR             reduce using rule 12 (expresion -> funcion .)
    WHILE           reduce using rule 12 (expresion -> funcion .)
    IF              reduce using rule 12 (expresion -> funcion .)
    ID              reduce using rule 12 (expresion -> funcion .)
    PRINT           reduce using rule 12 (expresion -> funcion .)
    VOID            reduce using rule 12 (expresion -> funcion .)
    MAPA            reduce using rule 12 (expresion -> funcion .)
    $end            reduce using rule 12 (expresion -> funcion .)
    RCURLYB         reduce using rule 12 (expresion -> funcion .)


state 14

    (13) expresion -> concatenar .

    VAR             reduce using rule 13 (expresion -> concatenar .)
    FOR             reduce using rule 13 (expresion -> concatenar .)
    WHILE           reduce using rule 13 (expresion -> concatenar .)
    IF              reduce using rule 13 (expresion -> concatenar .)
    ID              reduce using rule 13 (expresion -> concatenar .)
    PRINT           reduce using rule 13 (expresion -> concatenar .)
    VOID            reduce using rule 13 (expresion -> concatenar .)
    MAPA            reduce using rule 13 (expresion -> concatenar .)
    $end            reduce using rule 13 (expresion -> concatenar .)
    RCURLYB         reduce using rule 13 (expresion -> concatenar .)


state 15

    (54) lista -> expLista .

    VAR             reduce using rule 54 (lista -> expLista .)
    FOR             reduce using rule 54 (lista -> expLista .)
    WHILE           reduce using rule 54 (lista -> expLista .)
    IF              reduce using rule 54 (lista -> expLista .)
    ID              reduce using rule 54 (lista -> expLista .)
    PRINT           reduce using rule 54 (lista -> expLista .)
    VOID            reduce using rule 54 (lista -> expLista .)
    MAPA            reduce using rule 54 (lista -> expLista .)
    $end            reduce using rule 54 (lista -> expLista .)
    RCURLYB         reduce using rule 54 (lista -> expLista .)


state 16

    (55) lista -> add_lista .

    VAR             reduce using rule 55 (lista -> add_lista .)
    FOR             reduce using rule 55 (lista -> add_lista .)
    WHILE           reduce using rule 55 (lista -> add_lista .)
    IF              reduce using rule 55 (lista -> add_lista .)
    ID              reduce using rule 55 (lista -> add_lista .)
    PRINT           reduce using rule 55 (lista -> add_lista .)
    VOID            reduce using rule 55 (lista -> add_lista .)
    MAPA            reduce using rule 55 (lista -> add_lista .)
    $end            reduce using rule 55 (lista -> add_lista .)
    RCURLYB         reduce using rule 55 (lista -> add_lista .)


state 17

    (56) lista -> replace .

    VAR             reduce using rule 56 (lista -> replace .)
    FOR             reduce using rule 56 (lista -> replace .)
    WHILE           reduce using rule 56 (lista -> replace .)
    IF              reduce using rule 56 (lista -> replace .)
    ID              reduce using rule 56 (lista -> replace .)
    PRINT           reduce using rule 56 (lista -> replace .)
    VOID            reduce using rule 56 (lista -> replace .)
    MAPA            reduce using rule 56 (lista -> replace .)
    $end            reduce using rule 56 (lista -> replace .)
    RCURLYB         reduce using rule 56 (lista -> replace .)


state 18

    (73) mapa -> expMapa .

    VAR             reduce using rule 73 (mapa -> expMapa .)
    FOR             reduce using rule 73 (mapa -> expMapa .)
    WHILE           reduce using rule 73 (mapa -> expMapa .)
    IF              reduce using rule 73 (mapa -> expMapa .)
    ID              reduce using rule 73 (mapa -> expMapa .)
    PRINT           reduce using rule 73 (mapa -> expMapa .)
    VOID            reduce using rule 73 (mapa -> expMapa .)
    MAPA            reduce using rule 73 (mapa -> expMapa .)
    $end            reduce using rule 73 (mapa -> expMapa .)
    RCURLYB         reduce using rule 73 (mapa -> expMapa .)


state 19

    (74) mapa -> add_mapa .

    VAR             reduce using rule 74 (mapa -> add_mapa .)
    FOR             reduce using rule 74 (mapa -> add_mapa .)
    WHILE           reduce using rule 74 (mapa -> add_mapa .)
    IF              reduce using rule 74 (mapa -> add_mapa .)
    ID              reduce using rule 74 (mapa -> add_mapa .)
    PRINT           reduce using rule 74 (mapa -> add_mapa .)
    VOID            reduce using rule 74 (mapa -> add_mapa .)
    MAPA            reduce using rule 74 (mapa -> add_mapa .)
    $end            reduce using rule 74 (mapa -> add_mapa .)
    RCURLYB         reduce using rule 74 (mapa -> add_mapa .)


state 20

    (75) mapa -> update_mapa .

    VAR             reduce using rule 75 (mapa -> update_mapa .)
    FOR             reduce using rule 75 (mapa -> update_mapa .)
    WHILE           reduce using rule 75 (mapa -> update_mapa .)
    IF              reduce using rule 75 (mapa -> update_mapa .)
    ID              reduce using rule 75 (mapa -> update_mapa .)
    PRINT           reduce using rule 75 (mapa -> update_mapa .)
    VOID            reduce using rule 75 (mapa -> update_mapa .)
    MAPA            reduce using rule 75 (mapa -> update_mapa .)
    $end            reduce using rule 75 (mapa -> update_mapa .)
    RCURLYB         reduce using rule 75 (mapa -> update_mapa .)


state 21

    (76) mapa -> add_mapa_putIfAbsent .

    VAR             reduce using rule 76 (mapa -> add_mapa_putIfAbsent .)
    FOR             reduce using rule 76 (mapa -> add_mapa_putIfAbsent .)
    WHILE           reduce using rule 76 (mapa -> add_mapa_putIfAbsent .)
    IF              reduce using rule 76 (mapa -> add_mapa_putIfAbsent .)
    ID              reduce using rule 76 (mapa -> add_mapa_putIfAbsent .)
    PRINT           reduce using rule 76 (mapa -> add_mapa_putIfAbsent .)
    VOID            reduce using rule 76 (mapa -> add_mapa_putIfAbsent .)
    MAPA            reduce using rule 76 (mapa -> add_mapa_putIfAbsent .)
    $end            reduce using rule 76 (mapa -> add_mapa_putIfAbsent .)
    RCURLYB         reduce using rule 76 (mapa -> add_mapa_putIfAbsent .)


state 22

    (15) variable -> VAR . ID EQUALS expresionVar PUNTCOM
    (16) variable -> VAR . ID PUNTCOM
    (17) variable -> VAR . ID EQUALS expresionBool PUNTCOM
    (91) f_subtring -> VAR . ID EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN PUNTCOM
    (92) accPosString -> VAR . ID EQUALS ID LCORCHETE NUMBER RCORCHETE PUNTCOM
    (101) concatenar -> VAR . ID EQUALS concatenarRecursivo PUNTCOM
    (57) expLista -> VAR . ID EQUALS NEW LISTA LPAREN inicializaLista RPAREN PUNTCOM
    (58) expLista -> VAR . ID EQUALS LCORCHETE elementosLista RCORCHETE PUNTCOM
    (77) expMapa -> VAR . ID EQUALS NEW MAPA LPAREN RPAREN PUNTCOM

    ID              shift and go to state 31


state 23

    (89) incremento -> ID . INCREMENTO PUNTCOM
    (90) decremento -> ID . DECREMENTO PUNTCOM
    (61) add_lista -> ID . LCORCHETE NUMBER RCORCHETE EQUALS num_cadena PUNTCOM
    (62) add_lista -> ID . PTO ADD LPAREN elementoAddLista RPAREN PUNTCOM
    (72) replace -> ID . PTO REPLACE LPAREN NUMBER COMA NUMBER COMA LCORCHETE NUMBER RCORCHETE RPAREN PUNTCOM
    (81) add_mapa -> ID . LCORCHETE num_cadena RCORCHETE EQUALS num_cadena PUNTCOM
    (83) update_mapa -> ID . PTO UPDATE LPAREN CADENA COMA LPAREN VAR ID RPAREN EQUALS MAYORQUE CADENA COMA IFABSENT DOSPTO LPAREN RPAREN EQUALS MAYORQUE CADENA RPAREN PUNTCOM
    (82) add_mapa_putIfAbsent -> ID . PTO PUT LPAREN num_cadena COMA LPAREN RPAREN EQUALS MAYORQUE num_cadena RPAREN PUNTCOM

    INCREMENTO      shift and go to state 32
    DECREMENTO      shift and go to state 33
    LCORCHETE       shift and go to state 34
    PTO             shift and go to state 35


state 24

    (24) expresionFor -> FOR . LPAREN forParameters RPAREN LCURLYB expresion RCURLYB

    LPAREN          shift and go to state 36


state 25

    (34) expresionWhile -> WHILE . LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB

    LPAREN          shift and go to state 37


state 26

    (35) expresionIf -> IF . LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB

    LPAREN          shift and go to state 38


state 27

    (93) print -> PRINT . LPAREN printVal RPAREN PUNTCOM

    LPAREN          shift and go to state 39


state 28

    (97) funcion -> VOID . ID LPAREN parametroFuncion RPAREN final_key

    ID              shift and go to state 40


state 29

    (78) expMapa -> MAPA . ID EQUALS LCURLYB elementosMapa RCURLYB PUNTCOM

    ID              shift and go to state 41


state 30

    (14) expresion -> expresion expresion .
    (14) expresion -> expresion . expresion
    (1) expresion -> . lista
    (2) expresion -> . mapa
    (3) expresion -> . variable
    (4) expresion -> . expresionFor
    (5) expresion -> . expresionWhile
    (6) expresion -> . expresionIf
    (7) expresion -> . f_subtring
    (8) expresion -> . accPosString
    (9) expresion -> . incremento
    (10) expresion -> . decremento
    (11) expresion -> . print
    (12) expresion -> . funcion
    (13) expresion -> . concatenar
    (14) expresion -> . expresion expresion
    (54) lista -> . expLista
    (55) lista -> . add_lista
    (56) lista -> . replace
    (73) mapa -> . expMapa
    (74) mapa -> . add_mapa
    (75) mapa -> . update_mapa
    (76) mapa -> . add_mapa_putIfAbsent
    (15) variable -> . VAR ID EQUALS expresionVar PUNTCOM
    (16) variable -> . VAR ID PUNTCOM
    (17) variable -> . VAR ID EQUALS expresionBool PUNTCOM
    (24) expresionFor -> . FOR LPAREN forParameters RPAREN LCURLYB expresion RCURLYB
    (34) expresionWhile -> . WHILE LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB
    (35) expresionIf -> . IF LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB
    (91) f_subtring -> . VAR ID EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN PUNTCOM
    (92) accPosString -> . VAR ID EQUALS ID LCORCHETE NUMBER RCORCHETE PUNTCOM
    (89) incremento -> . ID INCREMENTO PUNTCOM
    (90) decremento -> . ID DECREMENTO PUNTCOM
    (93) print -> . PRINT LPAREN printVal RPAREN PUNTCOM
    (97) funcion -> . VOID ID LPAREN parametroFuncion RPAREN final_key
    (101) concatenar -> . VAR ID EQUALS concatenarRecursivo PUNTCOM
    (57) expLista -> . VAR ID EQUALS NEW LISTA LPAREN inicializaLista RPAREN PUNTCOM
    (58) expLista -> . VAR ID EQUALS LCORCHETE elementosLista RCORCHETE PUNTCOM
    (61) add_lista -> . ID LCORCHETE NUMBER RCORCHETE EQUALS num_cadena PUNTCOM
    (62) add_lista -> . ID PTO ADD LPAREN elementoAddLista RPAREN PUNTCOM
    (72) replace -> . ID PTO REPLACE LPAREN NUMBER COMA NUMBER COMA LCORCHETE NUMBER RCORCHETE RPAREN PUNTCOM
    (77) expMapa -> . VAR ID EQUALS NEW MAPA LPAREN RPAREN PUNTCOM
    (78) expMapa -> . MAPA ID EQUALS LCURLYB elementosMapa RCURLYB PUNTCOM
    (81) add_mapa -> . ID LCORCHETE num_cadena RCORCHETE EQUALS num_cadena PUNTCOM
    (83) update_mapa -> . ID PTO UPDATE LPAREN CADENA COMA LPAREN VAR ID RPAREN EQUALS MAYORQUE CADENA COMA IFABSENT DOSPTO LPAREN RPAREN EQUALS MAYORQUE CADENA RPAREN PUNTCOM
    (82) add_mapa_putIfAbsent -> . ID PTO PUT LPAREN num_cadena COMA LPAREN RPAREN EQUALS MAYORQUE num_cadena RPAREN PUNTCOM

  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for MAPA resolved as shift
    $end            reduce using rule 14 (expresion -> expresion expresion .)
    RCURLYB         reduce using rule 14 (expresion -> expresion expresion .)
    VAR             shift and go to state 22
    FOR             shift and go to state 24
    WHILE           shift and go to state 25
    IF              shift and go to state 26
    ID              shift and go to state 23
    PRINT           shift and go to state 27
    VOID            shift and go to state 28
    MAPA            shift and go to state 29

  ! VAR             [ reduce using rule 14 (expresion -> expresion expresion .) ]
  ! FOR             [ reduce using rule 14 (expresion -> expresion expresion .) ]
  ! WHILE           [ reduce using rule 14 (expresion -> expresion expresion .) ]
  ! IF              [ reduce using rule 14 (expresion -> expresion expresion .) ]
  ! ID              [ reduce using rule 14 (expresion -> expresion expresion .) ]
  ! PRINT           [ reduce using rule 14 (expresion -> expresion expresion .) ]
  ! VOID            [ reduce using rule 14 (expresion -> expresion expresion .) ]
  ! MAPA            [ reduce using rule 14 (expresion -> expresion expresion .) ]

    expresion                      shift and go to state 30
    lista                          shift and go to state 2
    mapa                           shift and go to state 3
    variable                       shift and go to state 4
    expresionFor                   shift and go to state 5
    expresionWhile                 shift and go to state 6
    expresionIf                    shift and go to state 7
    f_subtring                     shift and go to state 8
    accPosString                   shift and go to state 9
    incremento                     shift and go to state 10
    decremento                     shift and go to state 11
    print                          shift and go to state 12
    funcion                        shift and go to state 13
    concatenar                     shift and go to state 14
    expLista                       shift and go to state 15
    add_lista                      shift and go to state 16
    replace                        shift and go to state 17
    expMapa                        shift and go to state 18
    add_mapa                       shift and go to state 19
    update_mapa                    shift and go to state 20
    add_mapa_putIfAbsent           shift and go to state 21

state 31

    (15) variable -> VAR ID . EQUALS expresionVar PUNTCOM
    (16) variable -> VAR ID . PUNTCOM
    (17) variable -> VAR ID . EQUALS expresionBool PUNTCOM
    (91) f_subtring -> VAR ID . EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN PUNTCOM
    (92) accPosString -> VAR ID . EQUALS ID LCORCHETE NUMBER RCORCHETE PUNTCOM
    (101) concatenar -> VAR ID . EQUALS concatenarRecursivo PUNTCOM
    (57) expLista -> VAR ID . EQUALS NEW LISTA LPAREN inicializaLista RPAREN PUNTCOM
    (58) expLista -> VAR ID . EQUALS LCORCHETE elementosLista RCORCHETE PUNTCOM
    (77) expMapa -> VAR ID . EQUALS NEW MAPA LPAREN RPAREN PUNTCOM

    EQUALS          shift and go to state 42
    PUNTCOM         shift and go to state 43


state 32

    (89) incremento -> ID INCREMENTO . PUNTCOM

    PUNTCOM         shift and go to state 44


state 33

    (90) decremento -> ID DECREMENTO . PUNTCOM

    PUNTCOM         shift and go to state 45


state 34

    (61) add_lista -> ID LCORCHETE . NUMBER RCORCHETE EQUALS num_cadena PUNTCOM
    (81) add_mapa -> ID LCORCHETE . num_cadena RCORCHETE EQUALS num_cadena PUNTCOM
    (65) num_cadena -> . NUMBER
    (66) num_cadena -> . CADENA

    NUMBER          shift and go to state 46
    CADENA          shift and go to state 48

    num_cadena                     shift and go to state 47

state 35

    (62) add_lista -> ID PTO . ADD LPAREN elementoAddLista RPAREN PUNTCOM
    (72) replace -> ID PTO . REPLACE LPAREN NUMBER COMA NUMBER COMA LCORCHETE NUMBER RCORCHETE RPAREN PUNTCOM
    (83) update_mapa -> ID PTO . UPDATE LPAREN CADENA COMA LPAREN VAR ID RPAREN EQUALS MAYORQUE CADENA COMA IFABSENT DOSPTO LPAREN RPAREN EQUALS MAYORQUE CADENA RPAREN PUNTCOM
    (82) add_mapa_putIfAbsent -> ID PTO . PUT LPAREN num_cadena COMA LPAREN RPAREN EQUALS MAYORQUE num_cadena RPAREN PUNTCOM

    ADD             shift and go to state 49
    REPLACE         shift and go to state 50
    UPDATE          shift and go to state 51
    PUT             shift and go to state 52


state 36

    (24) expresionFor -> FOR LPAREN . forParameters RPAREN LCURLYB expresion RCURLYB
    (25) forParameters -> . forIterator PUNTCOM forCondition PUNTCOM forAction
    (26) forIterator -> . INT ID EQUALS NUMBER
    (27) forIterator -> . ID EQUALS NUMBER

    INT             shift and go to state 55
    ID              shift and go to state 56

    forParameters                  shift and go to state 53
    forIterator                    shift and go to state 54

state 37

    (34) expresionWhile -> WHILE LPAREN . expresionBool RPAREN LCURLYB expresion RCURLYB
    (36) expresionBool -> . booleano
    (37) expresionBool -> . ID comparador ID
    (38) expresionBool -> . ID comparador NUMBER
    (39) expresionBool -> . NUMBER comparador ID
    (40) expresionBool -> . NUMBER comparador NUMBER
    (41) expresionBool -> . NOT ID
    (42) expresionBool -> . expresionBool comparador expresionBool
    (43) expresionBool -> . expresionBool EQUIVAL expresionBool
    (44) booleano -> . TRUE
    (45) booleano -> . FALSE

    ID              shift and go to state 59
    NUMBER          shift and go to state 60
    NOT             shift and go to state 61
    TRUE            shift and go to state 62
    FALSE           shift and go to state 63

    expresionBool                  shift and go to state 57
    booleano                       shift and go to state 58

state 38

    (35) expresionIf -> IF LPAREN . expresionBool RPAREN LCURLYB expresion RCURLYB
    (36) expresionBool -> . booleano
    (37) expresionBool -> . ID comparador ID
    (38) expresionBool -> . ID comparador NUMBER
    (39) expresionBool -> . NUMBER comparador ID
    (40) expresionBool -> . NUMBER comparador NUMBER
    (41) expresionBool -> . NOT ID
    (42) expresionBool -> . expresionBool comparador expresionBool
    (43) expresionBool -> . expresionBool EQUIVAL expresionBool
    (44) booleano -> . TRUE
    (45) booleano -> . FALSE

    ID              shift and go to state 59
    NUMBER          shift and go to state 60
    NOT             shift and go to state 61
    TRUE            shift and go to state 62
    FALSE           shift and go to state 63

    expresionBool                  shift and go to state 64
    booleano                       shift and go to state 58

state 39

    (93) print -> PRINT LPAREN . printVal RPAREN PUNTCOM
    (94) printVal -> . ID
    (95) printVal -> . valorVar
    (96) printVal -> . expresionBool
    (18) valorVar -> . NUMBER
    (19) valorVar -> . DOUBLE
    (20) valorVar -> . CADENA
    (36) expresionBool -> . booleano
    (37) expresionBool -> . ID comparador ID
    (38) expresionBool -> . ID comparador NUMBER
    (39) expresionBool -> . NUMBER comparador ID
    (40) expresionBool -> . NUMBER comparador NUMBER
    (41) expresionBool -> . NOT ID
    (42) expresionBool -> . expresionBool comparador expresionBool
    (43) expresionBool -> . expresionBool EQUIVAL expresionBool
    (44) booleano -> . TRUE
    (45) booleano -> . FALSE

    ID              shift and go to state 66
    NUMBER          shift and go to state 69
    DOUBLE          shift and go to state 70
    CADENA          shift and go to state 71
    NOT             shift and go to state 61
    TRUE            shift and go to state 62
    FALSE           shift and go to state 63

    printVal                       shift and go to state 65
    valorVar                       shift and go to state 67
    expresionBool                  shift and go to state 68
    booleano                       shift and go to state 58

state 40

    (97) funcion -> VOID ID . LPAREN parametroFuncion RPAREN final_key

    LPAREN          shift and go to state 72


state 41

    (78) expMapa -> MAPA ID . EQUALS LCURLYB elementosMapa RCURLYB PUNTCOM

    EQUALS          shift and go to state 73


state 42

    (15) variable -> VAR ID EQUALS . expresionVar PUNTCOM
    (17) variable -> VAR ID EQUALS . expresionBool PUNTCOM
    (91) f_subtring -> VAR ID EQUALS . ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN PUNTCOM
    (92) accPosString -> VAR ID EQUALS . ID LCORCHETE NUMBER RCORCHETE PUNTCOM
    (101) concatenar -> VAR ID EQUALS . concatenarRecursivo PUNTCOM
    (57) expLista -> VAR ID EQUALS . NEW LISTA LPAREN inicializaLista RPAREN PUNTCOM
    (58) expLista -> VAR ID EQUALS . LCORCHETE elementosLista RCORCHETE PUNTCOM
    (77) expMapa -> VAR ID EQUALS . NEW MAPA LPAREN RPAREN PUNTCOM
    (21) expresionVar -> . valorVar
    (22) expresionVar -> . ID
    (23) expresionVar -> . expresionVar operadorA expresionVar
    (36) expresionBool -> . booleano
    (37) expresionBool -> . ID comparador ID
    (38) expresionBool -> . ID comparador NUMBER
    (39) expresionBool -> . NUMBER comparador ID
    (40) expresionBool -> . NUMBER comparador NUMBER
    (41) expresionBool -> . NOT ID
    (42) expresionBool -> . expresionBool comparador expresionBool
    (43) expresionBool -> . expresionBool EQUIVAL expresionBool
    (102) concatenarRecursivo -> . CADENA PLUS CADENA
    (103) concatenarRecursivo -> . PLUS CADENA
    (104) concatenarRecursivo -> . CADENA PLUS concatenarRecursivo
    (18) valorVar -> . NUMBER
    (19) valorVar -> . DOUBLE
    (20) valorVar -> . CADENA
    (44) booleano -> . TRUE
    (45) booleano -> . FALSE

    ID              shift and go to state 74
    NEW             shift and go to state 80
    LCORCHETE       shift and go to state 78
    NUMBER          shift and go to state 77
    NOT             shift and go to state 61
    CADENA          shift and go to state 82
    PLUS            shift and go to state 83
    DOUBLE          shift and go to state 70
    TRUE            shift and go to state 62
    FALSE           shift and go to state 63

    expresionVar                   shift and go to state 75
    expresionBool                  shift and go to state 76
    concatenarRecursivo            shift and go to state 79
    valorVar                       shift and go to state 81
    booleano                       shift and go to state 58

state 43

    (16) variable -> VAR ID PUNTCOM .

    VAR             reduce using rule 16 (variable -> VAR ID PUNTCOM .)
    FOR             reduce using rule 16 (variable -> VAR ID PUNTCOM .)
    WHILE           reduce using rule 16 (variable -> VAR ID PUNTCOM .)
    IF              reduce using rule 16 (variable -> VAR ID PUNTCOM .)
    ID              reduce using rule 16 (variable -> VAR ID PUNTCOM .)
    PRINT           reduce using rule 16 (variable -> VAR ID PUNTCOM .)
    VOID            reduce using rule 16 (variable -> VAR ID PUNTCOM .)
    MAPA            reduce using rule 16 (variable -> VAR ID PUNTCOM .)
    $end            reduce using rule 16 (variable -> VAR ID PUNTCOM .)
    RCURLYB         reduce using rule 16 (variable -> VAR ID PUNTCOM .)


state 44

    (89) incremento -> ID INCREMENTO PUNTCOM .

    VAR             reduce using rule 89 (incremento -> ID INCREMENTO PUNTCOM .)
    FOR             reduce using rule 89 (incremento -> ID INCREMENTO PUNTCOM .)
    WHILE           reduce using rule 89 (incremento -> ID INCREMENTO PUNTCOM .)
    IF              reduce using rule 89 (incremento -> ID INCREMENTO PUNTCOM .)
    ID              reduce using rule 89 (incremento -> ID INCREMENTO PUNTCOM .)
    PRINT           reduce using rule 89 (incremento -> ID INCREMENTO PUNTCOM .)
    VOID            reduce using rule 89 (incremento -> ID INCREMENTO PUNTCOM .)
    MAPA            reduce using rule 89 (incremento -> ID INCREMENTO PUNTCOM .)
    $end            reduce using rule 89 (incremento -> ID INCREMENTO PUNTCOM .)
    RCURLYB         reduce using rule 89 (incremento -> ID INCREMENTO PUNTCOM .)


state 45

    (90) decremento -> ID DECREMENTO PUNTCOM .

    VAR             reduce using rule 90 (decremento -> ID DECREMENTO PUNTCOM .)
    FOR             reduce using rule 90 (decremento -> ID DECREMENTO PUNTCOM .)
    WHILE           reduce using rule 90 (decremento -> ID DECREMENTO PUNTCOM .)
    IF              reduce using rule 90 (decremento -> ID DECREMENTO PUNTCOM .)
    ID              reduce using rule 90 (decremento -> ID DECREMENTO PUNTCOM .)
    PRINT           reduce using rule 90 (decremento -> ID DECREMENTO PUNTCOM .)
    VOID            reduce using rule 90 (decremento -> ID DECREMENTO PUNTCOM .)
    MAPA            reduce using rule 90 (decremento -> ID DECREMENTO PUNTCOM .)
    $end            reduce using rule 90 (decremento -> ID DECREMENTO PUNTCOM .)
    RCURLYB         reduce using rule 90 (decremento -> ID DECREMENTO PUNTCOM .)


state 46

    (61) add_lista -> ID LCORCHETE NUMBER . RCORCHETE EQUALS num_cadena PUNTCOM
    (65) num_cadena -> NUMBER .

  ! shift/reduce conflict for RCORCHETE resolved as shift
    RCORCHETE       shift and go to state 84

  ! RCORCHETE       [ reduce using rule 65 (num_cadena -> NUMBER .) ]


state 47

    (81) add_mapa -> ID LCORCHETE num_cadena . RCORCHETE EQUALS num_cadena PUNTCOM

    RCORCHETE       shift and go to state 85


state 48

    (66) num_cadena -> CADENA .

    RCORCHETE       reduce using rule 66 (num_cadena -> CADENA .)
    RPAREN          reduce using rule 66 (num_cadena -> CADENA .)
    COMA            reduce using rule 66 (num_cadena -> CADENA .)
    DOSPTO          reduce using rule 66 (num_cadena -> CADENA .)
    PUNTCOM         reduce using rule 66 (num_cadena -> CADENA .)
    RCURLYB         reduce using rule 66 (num_cadena -> CADENA .)


state 49

    (62) add_lista -> ID PTO ADD . LPAREN elementoAddLista RPAREN PUNTCOM

    LPAREN          shift and go to state 86


state 50

    (72) replace -> ID PTO REPLACE . LPAREN NUMBER COMA NUMBER COMA LCORCHETE NUMBER RCORCHETE RPAREN PUNTCOM

    LPAREN          shift and go to state 87


state 51

    (83) update_mapa -> ID PTO UPDATE . LPAREN CADENA COMA LPAREN VAR ID RPAREN EQUALS MAYORQUE CADENA COMA IFABSENT DOSPTO LPAREN RPAREN EQUALS MAYORQUE CADENA RPAREN PUNTCOM

    LPAREN          shift and go to state 88


state 52

    (82) add_mapa_putIfAbsent -> ID PTO PUT . LPAREN num_cadena COMA LPAREN RPAREN EQUALS MAYORQUE num_cadena RPAREN PUNTCOM

    LPAREN          shift and go to state 89


state 53

    (24) expresionFor -> FOR LPAREN forParameters . RPAREN LCURLYB expresion RCURLYB

    RPAREN          shift and go to state 90


state 54

    (25) forParameters -> forIterator . PUNTCOM forCondition PUNTCOM forAction

    PUNTCOM         shift and go to state 91


state 55

    (26) forIterator -> INT . ID EQUALS NUMBER

    ID              shift and go to state 92


state 56

    (27) forIterator -> ID . EQUALS NUMBER

    EQUALS          shift and go to state 93


state 57

    (34) expresionWhile -> WHILE LPAREN expresionBool . RPAREN LCURLYB expresion RCURLYB
    (42) expresionBool -> expresionBool . comparador expresionBool
    (43) expresionBool -> expresionBool . EQUIVAL expresionBool
    (46) comparador -> . MAYORQUE
    (47) comparador -> . MENORQUE
    (48) comparador -> . EQUIVAL
    (49) comparador -> . MINEQ
    (50) comparador -> . MAYEQ
    (51) comparador -> . NOEQUIVAL
    (52) comparador -> . AND
    (53) comparador -> . OR

    RPAREN          shift and go to state 94
    EQUIVAL         shift and go to state 96
    MAYORQUE        shift and go to state 97
    MENORQUE        shift and go to state 98
    MINEQ           shift and go to state 99
    MAYEQ           shift and go to state 100
    NOEQUIVAL       shift and go to state 101
    AND             shift and go to state 102
    OR              shift and go to state 103

    comparador                     shift and go to state 95

state 58

    (36) expresionBool -> booleano .

    RPAREN          reduce using rule 36 (expresionBool -> booleano .)
    EQUIVAL         reduce using rule 36 (expresionBool -> booleano .)
    MAYORQUE        reduce using rule 36 (expresionBool -> booleano .)
    MENORQUE        reduce using rule 36 (expresionBool -> booleano .)
    MINEQ           reduce using rule 36 (expresionBool -> booleano .)
    MAYEQ           reduce using rule 36 (expresionBool -> booleano .)
    NOEQUIVAL       reduce using rule 36 (expresionBool -> booleano .)
    AND             reduce using rule 36 (expresionBool -> booleano .)
    OR              reduce using rule 36 (expresionBool -> booleano .)
    PUNTCOM         reduce using rule 36 (expresionBool -> booleano .)


state 59

    (37) expresionBool -> ID . comparador ID
    (38) expresionBool -> ID . comparador NUMBER
    (46) comparador -> . MAYORQUE
    (47) comparador -> . MENORQUE
    (48) comparador -> . EQUIVAL
    (49) comparador -> . MINEQ
    (50) comparador -> . MAYEQ
    (51) comparador -> . NOEQUIVAL
    (52) comparador -> . AND
    (53) comparador -> . OR

    MAYORQUE        shift and go to state 97
    MENORQUE        shift and go to state 98
    EQUIVAL         shift and go to state 105
    MINEQ           shift and go to state 99
    MAYEQ           shift and go to state 100
    NOEQUIVAL       shift and go to state 101
    AND             shift and go to state 102
    OR              shift and go to state 103

    comparador                     shift and go to state 104

state 60

    (39) expresionBool -> NUMBER . comparador ID
    (40) expresionBool -> NUMBER . comparador NUMBER
    (46) comparador -> . MAYORQUE
    (47) comparador -> . MENORQUE
    (48) comparador -> . EQUIVAL
    (49) comparador -> . MINEQ
    (50) comparador -> . MAYEQ
    (51) comparador -> . NOEQUIVAL
    (52) comparador -> . AND
    (53) comparador -> . OR

    MAYORQUE        shift and go to state 97
    MENORQUE        shift and go to state 98
    EQUIVAL         shift and go to state 105
    MINEQ           shift and go to state 99
    MAYEQ           shift and go to state 100
    NOEQUIVAL       shift and go to state 101
    AND             shift and go to state 102
    OR              shift and go to state 103

    comparador                     shift and go to state 106

state 61

    (41) expresionBool -> NOT . ID

    ID              shift and go to state 107


state 62

    (44) booleano -> TRUE .

    RPAREN          reduce using rule 44 (booleano -> TRUE .)
    EQUIVAL         reduce using rule 44 (booleano -> TRUE .)
    MAYORQUE        reduce using rule 44 (booleano -> TRUE .)
    MENORQUE        reduce using rule 44 (booleano -> TRUE .)
    MINEQ           reduce using rule 44 (booleano -> TRUE .)
    MAYEQ           reduce using rule 44 (booleano -> TRUE .)
    NOEQUIVAL       reduce using rule 44 (booleano -> TRUE .)
    AND             reduce using rule 44 (booleano -> TRUE .)
    OR              reduce using rule 44 (booleano -> TRUE .)
    PUNTCOM         reduce using rule 44 (booleano -> TRUE .)


state 63

    (45) booleano -> FALSE .

    RPAREN          reduce using rule 45 (booleano -> FALSE .)
    EQUIVAL         reduce using rule 45 (booleano -> FALSE .)
    MAYORQUE        reduce using rule 45 (booleano -> FALSE .)
    MENORQUE        reduce using rule 45 (booleano -> FALSE .)
    MINEQ           reduce using rule 45 (booleano -> FALSE .)
    MAYEQ           reduce using rule 45 (booleano -> FALSE .)
    NOEQUIVAL       reduce using rule 45 (booleano -> FALSE .)
    AND             reduce using rule 45 (booleano -> FALSE .)
    OR              reduce using rule 45 (booleano -> FALSE .)
    PUNTCOM         reduce using rule 45 (booleano -> FALSE .)


state 64

    (35) expresionIf -> IF LPAREN expresionBool . RPAREN LCURLYB expresion RCURLYB
    (42) expresionBool -> expresionBool . comparador expresionBool
    (43) expresionBool -> expresionBool . EQUIVAL expresionBool
    (46) comparador -> . MAYORQUE
    (47) comparador -> . MENORQUE
    (48) comparador -> . EQUIVAL
    (49) comparador -> . MINEQ
    (50) comparador -> . MAYEQ
    (51) comparador -> . NOEQUIVAL
    (52) comparador -> . AND
    (53) comparador -> . OR

    RPAREN          shift and go to state 108
    EQUIVAL         shift and go to state 96
    MAYORQUE        shift and go to state 97
    MENORQUE        shift and go to state 98
    MINEQ           shift and go to state 99
    MAYEQ           shift and go to state 100
    NOEQUIVAL       shift and go to state 101
    AND             shift and go to state 102
    OR              shift and go to state 103

    comparador                     shift and go to state 95

state 65

    (93) print -> PRINT LPAREN printVal . RPAREN PUNTCOM

    RPAREN          shift and go to state 109


state 66

    (94) printVal -> ID .
    (37) expresionBool -> ID . comparador ID
    (38) expresionBool -> ID . comparador NUMBER
    (46) comparador -> . MAYORQUE
    (47) comparador -> . MENORQUE
    (48) comparador -> . EQUIVAL
    (49) comparador -> . MINEQ
    (50) comparador -> . MAYEQ
    (51) comparador -> . NOEQUIVAL
    (52) comparador -> . AND
    (53) comparador -> . OR

    RPAREN          reduce using rule 94 (printVal -> ID .)
    MAYORQUE        shift and go to state 97
    MENORQUE        shift and go to state 98
    EQUIVAL         shift and go to state 105
    MINEQ           shift and go to state 99
    MAYEQ           shift and go to state 100
    NOEQUIVAL       shift and go to state 101
    AND             shift and go to state 102
    OR              shift and go to state 103

    comparador                     shift and go to state 104

state 67

    (95) printVal -> valorVar .

    RPAREN          reduce using rule 95 (printVal -> valorVar .)


state 68

    (96) printVal -> expresionBool .
    (42) expresionBool -> expresionBool . comparador expresionBool
    (43) expresionBool -> expresionBool . EQUIVAL expresionBool
    (46) comparador -> . MAYORQUE
    (47) comparador -> . MENORQUE
    (48) comparador -> . EQUIVAL
    (49) comparador -> . MINEQ
    (50) comparador -> . MAYEQ
    (51) comparador -> . NOEQUIVAL
    (52) comparador -> . AND
    (53) comparador -> . OR

    RPAREN          reduce using rule 96 (printVal -> expresionBool .)
    EQUIVAL         shift and go to state 96
    MAYORQUE        shift and go to state 97
    MENORQUE        shift and go to state 98
    MINEQ           shift and go to state 99
    MAYEQ           shift and go to state 100
    NOEQUIVAL       shift and go to state 101
    AND             shift and go to state 102
    OR              shift and go to state 103

    comparador                     shift and go to state 95

state 69

    (18) valorVar -> NUMBER .
    (39) expresionBool -> NUMBER . comparador ID
    (40) expresionBool -> NUMBER . comparador NUMBER
    (46) comparador -> . MAYORQUE
    (47) comparador -> . MENORQUE
    (48) comparador -> . EQUIVAL
    (49) comparador -> . MINEQ
    (50) comparador -> . MAYEQ
    (51) comparador -> . NOEQUIVAL
    (52) comparador -> . AND
    (53) comparador -> . OR

    RPAREN          reduce using rule 18 (valorVar -> NUMBER .)
    MAYORQUE        shift and go to state 97
    MENORQUE        shift and go to state 98
    EQUIVAL         shift and go to state 105
    MINEQ           shift and go to state 99
    MAYEQ           shift and go to state 100
    NOEQUIVAL       shift and go to state 101
    AND             shift and go to state 102
    OR              shift and go to state 103

    comparador                     shift and go to state 106

state 70

    (19) valorVar -> DOUBLE .

    RPAREN          reduce using rule 19 (valorVar -> DOUBLE .)
    PUNTCOM         reduce using rule 19 (valorVar -> DOUBLE .)
    PLUS            reduce using rule 19 (valorVar -> DOUBLE .)
    MINUS           reduce using rule 19 (valorVar -> DOUBLE .)
    TIMES           reduce using rule 19 (valorVar -> DOUBLE .)
    DIVIDE          reduce using rule 19 (valorVar -> DOUBLE .)
    DIVIDE_E        reduce using rule 19 (valorVar -> DOUBLE .)


state 71

    (20) valorVar -> CADENA .

    RPAREN          reduce using rule 20 (valorVar -> CADENA .)
    PLUS            reduce using rule 20 (valorVar -> CADENA .)
    MINUS           reduce using rule 20 (valorVar -> CADENA .)
    TIMES           reduce using rule 20 (valorVar -> CADENA .)
    DIVIDE          reduce using rule 20 (valorVar -> CADENA .)
    DIVIDE_E        reduce using rule 20 (valorVar -> CADENA .)
    PUNTCOM         reduce using rule 20 (valorVar -> CADENA .)


state 72

    (97) funcion -> VOID ID LPAREN . parametroFuncion RPAREN final_key
    (98) parametroFuncion -> . VAR ID
    (99) parametroFuncion -> .

    VAR             shift and go to state 111
    RPAREN          reduce using rule 99 (parametroFuncion -> .)

    parametroFuncion               shift and go to state 110

state 73

    (78) expMapa -> MAPA ID EQUALS . LCURLYB elementosMapa RCURLYB PUNTCOM

    LCURLYB         shift and go to state 112


state 74

    (91) f_subtring -> VAR ID EQUALS ID . PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN PUNTCOM
    (92) accPosString -> VAR ID EQUALS ID . LCORCHETE NUMBER RCORCHETE PUNTCOM
    (22) expresionVar -> ID .
    (37) expresionBool -> ID . comparador ID
    (38) expresionBool -> ID . comparador NUMBER
    (46) comparador -> . MAYORQUE
    (47) comparador -> . MENORQUE
    (48) comparador -> . EQUIVAL
    (49) comparador -> . MINEQ
    (50) comparador -> . MAYEQ
    (51) comparador -> . NOEQUIVAL
    (52) comparador -> . AND
    (53) comparador -> . OR

    PTO             shift and go to state 113
    LCORCHETE       shift and go to state 114
    PUNTCOM         reduce using rule 22 (expresionVar -> ID .)
    PLUS            reduce using rule 22 (expresionVar -> ID .)
    MINUS           reduce using rule 22 (expresionVar -> ID .)
    TIMES           reduce using rule 22 (expresionVar -> ID .)
    DIVIDE          reduce using rule 22 (expresionVar -> ID .)
    DIVIDE_E        reduce using rule 22 (expresionVar -> ID .)
    MAYORQUE        shift and go to state 97
    MENORQUE        shift and go to state 98
    EQUIVAL         shift and go to state 105
    MINEQ           shift and go to state 99
    MAYEQ           shift and go to state 100
    NOEQUIVAL       shift and go to state 101
    AND             shift and go to state 102
    OR              shift and go to state 103

    comparador                     shift and go to state 104

state 75

    (15) variable -> VAR ID EQUALS expresionVar . PUNTCOM
    (23) expresionVar -> expresionVar . operadorA expresionVar
    (84) operadorA -> . PLUS
    (85) operadorA -> . MINUS
    (86) operadorA -> . TIMES
    (87) operadorA -> . DIVIDE
    (88) operadorA -> . DIVIDE_E

    PUNTCOM         shift and go to state 115
    PLUS            shift and go to state 117
    MINUS           shift and go to state 118
    TIMES           shift and go to state 119
    DIVIDE          shift and go to state 120
    DIVIDE_E        shift and go to state 121

    operadorA                      shift and go to state 116

state 76

    (17) variable -> VAR ID EQUALS expresionBool . PUNTCOM
    (42) expresionBool -> expresionBool . comparador expresionBool
    (43) expresionBool -> expresionBool . EQUIVAL expresionBool
    (46) comparador -> . MAYORQUE
    (47) comparador -> . MENORQUE
    (48) comparador -> . EQUIVAL
    (49) comparador -> . MINEQ
    (50) comparador -> . MAYEQ
    (51) comparador -> . NOEQUIVAL
    (52) comparador -> . AND
    (53) comparador -> . OR

    PUNTCOM         shift and go to state 122
    EQUIVAL         shift and go to state 96
    MAYORQUE        shift and go to state 97
    MENORQUE        shift and go to state 98
    MINEQ           shift and go to state 99
    MAYEQ           shift and go to state 100
    NOEQUIVAL       shift and go to state 101
    AND             shift and go to state 102
    OR              shift and go to state 103

    comparador                     shift and go to state 95

state 77

    (39) expresionBool -> NUMBER . comparador ID
    (40) expresionBool -> NUMBER . comparador NUMBER
    (18) valorVar -> NUMBER .
    (46) comparador -> . MAYORQUE
    (47) comparador -> . MENORQUE
    (48) comparador -> . EQUIVAL
    (49) comparador -> . MINEQ
    (50) comparador -> . MAYEQ
    (51) comparador -> . NOEQUIVAL
    (52) comparador -> . AND
    (53) comparador -> . OR

    PUNTCOM         reduce using rule 18 (valorVar -> NUMBER .)
    PLUS            reduce using rule 18 (valorVar -> NUMBER .)
    MINUS           reduce using rule 18 (valorVar -> NUMBER .)
    TIMES           reduce using rule 18 (valorVar -> NUMBER .)
    DIVIDE          reduce using rule 18 (valorVar -> NUMBER .)
    DIVIDE_E        reduce using rule 18 (valorVar -> NUMBER .)
    MAYORQUE        shift and go to state 97
    MENORQUE        shift and go to state 98
    EQUIVAL         shift and go to state 105
    MINEQ           shift and go to state 99
    MAYEQ           shift and go to state 100
    NOEQUIVAL       shift and go to state 101
    AND             shift and go to state 102
    OR              shift and go to state 103

    comparador                     shift and go to state 106

state 78

    (58) expLista -> VAR ID EQUALS LCORCHETE . elementosLista RCORCHETE PUNTCOM
    (67) elementosLista -> . CADENA
    (68) elementosLista -> . NUMBER
    (69) elementosLista -> . CADENA COMA elementosLista
    (70) elementosLista -> . NUMBER COMA elementosLista
    (71) elementosLista -> .

    CADENA          shift and go to state 124
    NUMBER          shift and go to state 125
    RCORCHETE       reduce using rule 71 (elementosLista -> .)

    elementosLista                 shift and go to state 123

state 79

    (101) concatenar -> VAR ID EQUALS concatenarRecursivo . PUNTCOM

    PUNTCOM         shift and go to state 126


state 80

    (57) expLista -> VAR ID EQUALS NEW . LISTA LPAREN inicializaLista RPAREN PUNTCOM
    (77) expMapa -> VAR ID EQUALS NEW . MAPA LPAREN RPAREN PUNTCOM

    LISTA           shift and go to state 127
    MAPA            shift and go to state 128


state 81

    (21) expresionVar -> valorVar .

    PUNTCOM         reduce using rule 21 (expresionVar -> valorVar .)
    PLUS            reduce using rule 21 (expresionVar -> valorVar .)
    MINUS           reduce using rule 21 (expresionVar -> valorVar .)
    TIMES           reduce using rule 21 (expresionVar -> valorVar .)
    DIVIDE          reduce using rule 21 (expresionVar -> valorVar .)
    DIVIDE_E        reduce using rule 21 (expresionVar -> valorVar .)


state 82

    (102) concatenarRecursivo -> CADENA . PLUS CADENA
    (104) concatenarRecursivo -> CADENA . PLUS concatenarRecursivo
    (20) valorVar -> CADENA .

  ! shift/reduce conflict for PLUS resolved as shift
    PLUS            shift and go to state 129
    PUNTCOM         reduce using rule 20 (valorVar -> CADENA .)
    MINUS           reduce using rule 20 (valorVar -> CADENA .)
    TIMES           reduce using rule 20 (valorVar -> CADENA .)
    DIVIDE          reduce using rule 20 (valorVar -> CADENA .)
    DIVIDE_E        reduce using rule 20 (valorVar -> CADENA .)

  ! PLUS            [ reduce using rule 20 (valorVar -> CADENA .) ]


state 83

    (103) concatenarRecursivo -> PLUS . CADENA

    CADENA          shift and go to state 130


state 84

    (61) add_lista -> ID LCORCHETE NUMBER RCORCHETE . EQUALS num_cadena PUNTCOM

    EQUALS          shift and go to state 131


state 85

    (81) add_mapa -> ID LCORCHETE num_cadena RCORCHETE . EQUALS num_cadena PUNTCOM

    EQUALS          shift and go to state 132


state 86

    (62) add_lista -> ID PTO ADD LPAREN . elementoAddLista RPAREN PUNTCOM
    (63) elementoAddLista -> . num_cadena
    (64) elementoAddLista -> . booleano
    (65) num_cadena -> . NUMBER
    (66) num_cadena -> . CADENA
    (44) booleano -> . TRUE
    (45) booleano -> . FALSE

    NUMBER          shift and go to state 136
    CADENA          shift and go to state 48
    TRUE            shift and go to state 62
    FALSE           shift and go to state 63

    elementoAddLista               shift and go to state 133
    num_cadena                     shift and go to state 134
    booleano                       shift and go to state 135

state 87

    (72) replace -> ID PTO REPLACE LPAREN . NUMBER COMA NUMBER COMA LCORCHETE NUMBER RCORCHETE RPAREN PUNTCOM

    NUMBER          shift and go to state 137


state 88

    (83) update_mapa -> ID PTO UPDATE LPAREN . CADENA COMA LPAREN VAR ID RPAREN EQUALS MAYORQUE CADENA COMA IFABSENT DOSPTO LPAREN RPAREN EQUALS MAYORQUE CADENA RPAREN PUNTCOM

    CADENA          shift and go to state 138


state 89

    (82) add_mapa_putIfAbsent -> ID PTO PUT LPAREN . num_cadena COMA LPAREN RPAREN EQUALS MAYORQUE num_cadena RPAREN PUNTCOM
    (65) num_cadena -> . NUMBER
    (66) num_cadena -> . CADENA

    NUMBER          shift and go to state 136
    CADENA          shift and go to state 48

    num_cadena                     shift and go to state 139

state 90

    (24) expresionFor -> FOR LPAREN forParameters RPAREN . LCURLYB expresion RCURLYB

    LCURLYB         shift and go to state 140


state 91

    (25) forParameters -> forIterator PUNTCOM . forCondition PUNTCOM forAction
    (28) forCondition -> . ID MAYORQUE NUMBER
    (29) forCondition -> . ID MENORQUE NUMBER

    ID              shift and go to state 142

    forCondition                   shift and go to state 141

state 92

    (26) forIterator -> INT ID . EQUALS NUMBER

    EQUALS          shift and go to state 143


state 93

    (27) forIterator -> ID EQUALS . NUMBER

    NUMBER          shift and go to state 144


state 94

    (34) expresionWhile -> WHILE LPAREN expresionBool RPAREN . LCURLYB expresion RCURLYB

    LCURLYB         shift and go to state 145


state 95

    (42) expresionBool -> expresionBool comparador . expresionBool
    (36) expresionBool -> . booleano
    (37) expresionBool -> . ID comparador ID
    (38) expresionBool -> . ID comparador NUMBER
    (39) expresionBool -> . NUMBER comparador ID
    (40) expresionBool -> . NUMBER comparador NUMBER
    (41) expresionBool -> . NOT ID
    (42) expresionBool -> . expresionBool comparador expresionBool
    (43) expresionBool -> . expresionBool EQUIVAL expresionBool
    (44) booleano -> . TRUE
    (45) booleano -> . FALSE

    ID              shift and go to state 59
    NUMBER          shift and go to state 60
    NOT             shift and go to state 61
    TRUE            shift and go to state 62
    FALSE           shift and go to state 63

    expresionBool                  shift and go to state 146
    booleano                       shift and go to state 58

state 96

    (43) expresionBool -> expresionBool EQUIVAL . expresionBool
    (48) comparador -> EQUIVAL .
    (36) expresionBool -> . booleano
    (37) expresionBool -> . ID comparador ID
    (38) expresionBool -> . ID comparador NUMBER
    (39) expresionBool -> . NUMBER comparador ID
    (40) expresionBool -> . NUMBER comparador NUMBER
    (41) expresionBool -> . NOT ID
    (42) expresionBool -> . expresionBool comparador expresionBool
    (43) expresionBool -> . expresionBool EQUIVAL expresionBool
    (44) booleano -> . TRUE
    (45) booleano -> . FALSE

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    ID              shift and go to state 59
    NUMBER          shift and go to state 60
    NOT             shift and go to state 61
    TRUE            shift and go to state 62
    FALSE           shift and go to state 63

  ! ID              [ reduce using rule 48 (comparador -> EQUIVAL .) ]
  ! NUMBER          [ reduce using rule 48 (comparador -> EQUIVAL .) ]
  ! NOT             [ reduce using rule 48 (comparador -> EQUIVAL .) ]
  ! TRUE            [ reduce using rule 48 (comparador -> EQUIVAL .) ]
  ! FALSE           [ reduce using rule 48 (comparador -> EQUIVAL .) ]

    expresionBool                  shift and go to state 147
    booleano                       shift and go to state 58

state 97

    (46) comparador -> MAYORQUE .

    ID              reduce using rule 46 (comparador -> MAYORQUE .)
    NUMBER          reduce using rule 46 (comparador -> MAYORQUE .)
    NOT             reduce using rule 46 (comparador -> MAYORQUE .)
    TRUE            reduce using rule 46 (comparador -> MAYORQUE .)
    FALSE           reduce using rule 46 (comparador -> MAYORQUE .)


state 98

    (47) comparador -> MENORQUE .

    ID              reduce using rule 47 (comparador -> MENORQUE .)
    NUMBER          reduce using rule 47 (comparador -> MENORQUE .)
    NOT             reduce using rule 47 (comparador -> MENORQUE .)
    TRUE            reduce using rule 47 (comparador -> MENORQUE .)
    FALSE           reduce using rule 47 (comparador -> MENORQUE .)


state 99

    (49) comparador -> MINEQ .

    ID              reduce using rule 49 (comparador -> MINEQ .)
    NUMBER          reduce using rule 49 (comparador -> MINEQ .)
    NOT             reduce using rule 49 (comparador -> MINEQ .)
    TRUE            reduce using rule 49 (comparador -> MINEQ .)
    FALSE           reduce using rule 49 (comparador -> MINEQ .)


state 100

    (50) comparador -> MAYEQ .

    ID              reduce using rule 50 (comparador -> MAYEQ .)
    NUMBER          reduce using rule 50 (comparador -> MAYEQ .)
    NOT             reduce using rule 50 (comparador -> MAYEQ .)
    TRUE            reduce using rule 50 (comparador -> MAYEQ .)
    FALSE           reduce using rule 50 (comparador -> MAYEQ .)


state 101

    (51) comparador -> NOEQUIVAL .

    ID              reduce using rule 51 (comparador -> NOEQUIVAL .)
    NUMBER          reduce using rule 51 (comparador -> NOEQUIVAL .)
    NOT             reduce using rule 51 (comparador -> NOEQUIVAL .)
    TRUE            reduce using rule 51 (comparador -> NOEQUIVAL .)
    FALSE           reduce using rule 51 (comparador -> NOEQUIVAL .)


state 102

    (52) comparador -> AND .

    ID              reduce using rule 52 (comparador -> AND .)
    NUMBER          reduce using rule 52 (comparador -> AND .)
    NOT             reduce using rule 52 (comparador -> AND .)
    TRUE            reduce using rule 52 (comparador -> AND .)
    FALSE           reduce using rule 52 (comparador -> AND .)


state 103

    (53) comparador -> OR .

    ID              reduce using rule 53 (comparador -> OR .)
    NUMBER          reduce using rule 53 (comparador -> OR .)
    NOT             reduce using rule 53 (comparador -> OR .)
    TRUE            reduce using rule 53 (comparador -> OR .)
    FALSE           reduce using rule 53 (comparador -> OR .)


state 104

    (37) expresionBool -> ID comparador . ID
    (38) expresionBool -> ID comparador . NUMBER

    ID              shift and go to state 148
    NUMBER          shift and go to state 149


state 105

    (48) comparador -> EQUIVAL .

    ID              reduce using rule 48 (comparador -> EQUIVAL .)
    NUMBER          reduce using rule 48 (comparador -> EQUIVAL .)


state 106

    (39) expresionBool -> NUMBER comparador . ID
    (40) expresionBool -> NUMBER comparador . NUMBER

    ID              shift and go to state 151
    NUMBER          shift and go to state 150


state 107

    (41) expresionBool -> NOT ID .

    RPAREN          reduce using rule 41 (expresionBool -> NOT ID .)
    EQUIVAL         reduce using rule 41 (expresionBool -> NOT ID .)
    MAYORQUE        reduce using rule 41 (expresionBool -> NOT ID .)
    MENORQUE        reduce using rule 41 (expresionBool -> NOT ID .)
    MINEQ           reduce using rule 41 (expresionBool -> NOT ID .)
    MAYEQ           reduce using rule 41 (expresionBool -> NOT ID .)
    NOEQUIVAL       reduce using rule 41 (expresionBool -> NOT ID .)
    AND             reduce using rule 41 (expresionBool -> NOT ID .)
    OR              reduce using rule 41 (expresionBool -> NOT ID .)
    PUNTCOM         reduce using rule 41 (expresionBool -> NOT ID .)


state 108

    (35) expresionIf -> IF LPAREN expresionBool RPAREN . LCURLYB expresion RCURLYB

    LCURLYB         shift and go to state 152


state 109

    (93) print -> PRINT LPAREN printVal RPAREN . PUNTCOM

    PUNTCOM         shift and go to state 153


state 110

    (97) funcion -> VOID ID LPAREN parametroFuncion . RPAREN final_key

    RPAREN          shift and go to state 154


state 111

    (98) parametroFuncion -> VAR . ID

    ID              shift and go to state 155


state 112

    (78) expMapa -> MAPA ID EQUALS LCURLYB . elementosMapa RCURLYB PUNTCOM
    (79) elementosMapa -> . num_cadena DOSPTO num_cadena
    (80) elementosMapa -> . num_cadena DOSPTO num_cadena COMA elementosMapa
    (65) num_cadena -> . NUMBER
    (66) num_cadena -> . CADENA

    NUMBER          shift and go to state 136
    CADENA          shift and go to state 48

    elementosMapa                  shift and go to state 156
    num_cadena                     shift and go to state 157

state 113

    (91) f_subtring -> VAR ID EQUALS ID PTO . SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN PUNTCOM

    SUBSTRING       shift and go to state 158


state 114

    (92) accPosString -> VAR ID EQUALS ID LCORCHETE . NUMBER RCORCHETE PUNTCOM

    NUMBER          shift and go to state 159


state 115

    (15) variable -> VAR ID EQUALS expresionVar PUNTCOM .

    VAR             reduce using rule 15 (variable -> VAR ID EQUALS expresionVar PUNTCOM .)
    FOR             reduce using rule 15 (variable -> VAR ID EQUALS expresionVar PUNTCOM .)
    WHILE           reduce using rule 15 (variable -> VAR ID EQUALS expresionVar PUNTCOM .)
    IF              reduce using rule 15 (variable -> VAR ID EQUALS expresionVar PUNTCOM .)
    ID              reduce using rule 15 (variable -> VAR ID EQUALS expresionVar PUNTCOM .)
    PRINT           reduce using rule 15 (variable -> VAR ID EQUALS expresionVar PUNTCOM .)
    VOID            reduce using rule 15 (variable -> VAR ID EQUALS expresionVar PUNTCOM .)
    MAPA            reduce using rule 15 (variable -> VAR ID EQUALS expresionVar PUNTCOM .)
    $end            reduce using rule 15 (variable -> VAR ID EQUALS expresionVar PUNTCOM .)
    RCURLYB         reduce using rule 15 (variable -> VAR ID EQUALS expresionVar PUNTCOM .)


state 116

    (23) expresionVar -> expresionVar operadorA . expresionVar
    (21) expresionVar -> . valorVar
    (22) expresionVar -> . ID
    (23) expresionVar -> . expresionVar operadorA expresionVar
    (18) valorVar -> . NUMBER
    (19) valorVar -> . DOUBLE
    (20) valorVar -> . CADENA

    ID              shift and go to state 161
    NUMBER          shift and go to state 162
    DOUBLE          shift and go to state 70
    CADENA          shift and go to state 71

    expresionVar                   shift and go to state 160
    valorVar                       shift and go to state 81

state 117

    (84) operadorA -> PLUS .

    ID              reduce using rule 84 (operadorA -> PLUS .)
    NUMBER          reduce using rule 84 (operadorA -> PLUS .)
    DOUBLE          reduce using rule 84 (operadorA -> PLUS .)
    CADENA          reduce using rule 84 (operadorA -> PLUS .)


state 118

    (85) operadorA -> MINUS .

    ID              reduce using rule 85 (operadorA -> MINUS .)
    NUMBER          reduce using rule 85 (operadorA -> MINUS .)
    DOUBLE          reduce using rule 85 (operadorA -> MINUS .)
    CADENA          reduce using rule 85 (operadorA -> MINUS .)


state 119

    (86) operadorA -> TIMES .

    ID              reduce using rule 86 (operadorA -> TIMES .)
    NUMBER          reduce using rule 86 (operadorA -> TIMES .)
    DOUBLE          reduce using rule 86 (operadorA -> TIMES .)
    CADENA          reduce using rule 86 (operadorA -> TIMES .)


state 120

    (87) operadorA -> DIVIDE .

    ID              reduce using rule 87 (operadorA -> DIVIDE .)
    NUMBER          reduce using rule 87 (operadorA -> DIVIDE .)
    DOUBLE          reduce using rule 87 (operadorA -> DIVIDE .)
    CADENA          reduce using rule 87 (operadorA -> DIVIDE .)


state 121

    (88) operadorA -> DIVIDE_E .

    ID              reduce using rule 88 (operadorA -> DIVIDE_E .)
    NUMBER          reduce using rule 88 (operadorA -> DIVIDE_E .)
    DOUBLE          reduce using rule 88 (operadorA -> DIVIDE_E .)
    CADENA          reduce using rule 88 (operadorA -> DIVIDE_E .)


state 122

    (17) variable -> VAR ID EQUALS expresionBool PUNTCOM .

    VAR             reduce using rule 17 (variable -> VAR ID EQUALS expresionBool PUNTCOM .)
    FOR             reduce using rule 17 (variable -> VAR ID EQUALS expresionBool PUNTCOM .)
    WHILE           reduce using rule 17 (variable -> VAR ID EQUALS expresionBool PUNTCOM .)
    IF              reduce using rule 17 (variable -> VAR ID EQUALS expresionBool PUNTCOM .)
    ID              reduce using rule 17 (variable -> VAR ID EQUALS expresionBool PUNTCOM .)
    PRINT           reduce using rule 17 (variable -> VAR ID EQUALS expresionBool PUNTCOM .)
    VOID            reduce using rule 17 (variable -> VAR ID EQUALS expresionBool PUNTCOM .)
    MAPA            reduce using rule 17 (variable -> VAR ID EQUALS expresionBool PUNTCOM .)
    $end            reduce using rule 17 (variable -> VAR ID EQUALS expresionBool PUNTCOM .)
    RCURLYB         reduce using rule 17 (variable -> VAR ID EQUALS expresionBool PUNTCOM .)


state 123

    (58) expLista -> VAR ID EQUALS LCORCHETE elementosLista . RCORCHETE PUNTCOM

    RCORCHETE       shift and go to state 163


state 124

    (67) elementosLista -> CADENA .
    (69) elementosLista -> CADENA . COMA elementosLista

    RCORCHETE       reduce using rule 67 (elementosLista -> CADENA .)
    COMA            shift and go to state 164


state 125

    (68) elementosLista -> NUMBER .
    (70) elementosLista -> NUMBER . COMA elementosLista

    RCORCHETE       reduce using rule 68 (elementosLista -> NUMBER .)
    COMA            shift and go to state 165


state 126

    (101) concatenar -> VAR ID EQUALS concatenarRecursivo PUNTCOM .

    VAR             reduce using rule 101 (concatenar -> VAR ID EQUALS concatenarRecursivo PUNTCOM .)
    FOR             reduce using rule 101 (concatenar -> VAR ID EQUALS concatenarRecursivo PUNTCOM .)
    WHILE           reduce using rule 101 (concatenar -> VAR ID EQUALS concatenarRecursivo PUNTCOM .)
    IF              reduce using rule 101 (concatenar -> VAR ID EQUALS concatenarRecursivo PUNTCOM .)
    ID              reduce using rule 101 (concatenar -> VAR ID EQUALS concatenarRecursivo PUNTCOM .)
    PRINT           reduce using rule 101 (concatenar -> VAR ID EQUALS concatenarRecursivo PUNTCOM .)
    VOID            reduce using rule 101 (concatenar -> VAR ID EQUALS concatenarRecursivo PUNTCOM .)
    MAPA            reduce using rule 101 (concatenar -> VAR ID EQUALS concatenarRecursivo PUNTCOM .)
    $end            reduce using rule 101 (concatenar -> VAR ID EQUALS concatenarRecursivo PUNTCOM .)
    RCURLYB         reduce using rule 101 (concatenar -> VAR ID EQUALS concatenarRecursivo PUNTCOM .)


state 127

    (57) expLista -> VAR ID EQUALS NEW LISTA . LPAREN inicializaLista RPAREN PUNTCOM

    LPAREN          shift and go to state 166


state 128

    (77) expMapa -> VAR ID EQUALS NEW MAPA . LPAREN RPAREN PUNTCOM

    LPAREN          shift and go to state 167


state 129

    (102) concatenarRecursivo -> CADENA PLUS . CADENA
    (104) concatenarRecursivo -> CADENA PLUS . concatenarRecursivo
    (102) concatenarRecursivo -> . CADENA PLUS CADENA
    (103) concatenarRecursivo -> . PLUS CADENA
    (104) concatenarRecursivo -> . CADENA PLUS concatenarRecursivo

    CADENA          shift and go to state 168
    PLUS            shift and go to state 83

    concatenarRecursivo            shift and go to state 169

state 130

    (103) concatenarRecursivo -> PLUS CADENA .

    PUNTCOM         reduce using rule 103 (concatenarRecursivo -> PLUS CADENA .)


state 131

    (61) add_lista -> ID LCORCHETE NUMBER RCORCHETE EQUALS . num_cadena PUNTCOM
    (65) num_cadena -> . NUMBER
    (66) num_cadena -> . CADENA

    NUMBER          shift and go to state 136
    CADENA          shift and go to state 48

    num_cadena                     shift and go to state 170

state 132

    (81) add_mapa -> ID LCORCHETE num_cadena RCORCHETE EQUALS . num_cadena PUNTCOM
    (65) num_cadena -> . NUMBER
    (66) num_cadena -> . CADENA

    NUMBER          shift and go to state 136
    CADENA          shift and go to state 48

    num_cadena                     shift and go to state 171

state 133

    (62) add_lista -> ID PTO ADD LPAREN elementoAddLista . RPAREN PUNTCOM

    RPAREN          shift and go to state 172


state 134

    (63) elementoAddLista -> num_cadena .

    RPAREN          reduce using rule 63 (elementoAddLista -> num_cadena .)


state 135

    (64) elementoAddLista -> booleano .

    RPAREN          reduce using rule 64 (elementoAddLista -> booleano .)


state 136

    (65) num_cadena -> NUMBER .

    RPAREN          reduce using rule 65 (num_cadena -> NUMBER .)
    COMA            reduce using rule 65 (num_cadena -> NUMBER .)
    DOSPTO          reduce using rule 65 (num_cadena -> NUMBER .)
    PUNTCOM         reduce using rule 65 (num_cadena -> NUMBER .)
    RCURLYB         reduce using rule 65 (num_cadena -> NUMBER .)


state 137

    (72) replace -> ID PTO REPLACE LPAREN NUMBER . COMA NUMBER COMA LCORCHETE NUMBER RCORCHETE RPAREN PUNTCOM

    COMA            shift and go to state 173


state 138

    (83) update_mapa -> ID PTO UPDATE LPAREN CADENA . COMA LPAREN VAR ID RPAREN EQUALS MAYORQUE CADENA COMA IFABSENT DOSPTO LPAREN RPAREN EQUALS MAYORQUE CADENA RPAREN PUNTCOM

    COMA            shift and go to state 174


state 139

    (82) add_mapa_putIfAbsent -> ID PTO PUT LPAREN num_cadena . COMA LPAREN RPAREN EQUALS MAYORQUE num_cadena RPAREN PUNTCOM

    COMA            shift and go to state 175


state 140

    (24) expresionFor -> FOR LPAREN forParameters RPAREN LCURLYB . expresion RCURLYB
    (1) expresion -> . lista
    (2) expresion -> . mapa
    (3) expresion -> . variable
    (4) expresion -> . expresionFor
    (5) expresion -> . expresionWhile
    (6) expresion -> . expresionIf
    (7) expresion -> . f_subtring
    (8) expresion -> . accPosString
    (9) expresion -> . incremento
    (10) expresion -> . decremento
    (11) expresion -> . print
    (12) expresion -> . funcion
    (13) expresion -> . concatenar
    (14) expresion -> . expresion expresion
    (54) lista -> . expLista
    (55) lista -> . add_lista
    (56) lista -> . replace
    (73) mapa -> . expMapa
    (74) mapa -> . add_mapa
    (75) mapa -> . update_mapa
    (76) mapa -> . add_mapa_putIfAbsent
    (15) variable -> . VAR ID EQUALS expresionVar PUNTCOM
    (16) variable -> . VAR ID PUNTCOM
    (17) variable -> . VAR ID EQUALS expresionBool PUNTCOM
    (24) expresionFor -> . FOR LPAREN forParameters RPAREN LCURLYB expresion RCURLYB
    (34) expresionWhile -> . WHILE LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB
    (35) expresionIf -> . IF LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB
    (91) f_subtring -> . VAR ID EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN PUNTCOM
    (92) accPosString -> . VAR ID EQUALS ID LCORCHETE NUMBER RCORCHETE PUNTCOM
    (89) incremento -> . ID INCREMENTO PUNTCOM
    (90) decremento -> . ID DECREMENTO PUNTCOM
    (93) print -> . PRINT LPAREN printVal RPAREN PUNTCOM
    (97) funcion -> . VOID ID LPAREN parametroFuncion RPAREN final_key
    (101) concatenar -> . VAR ID EQUALS concatenarRecursivo PUNTCOM
    (57) expLista -> . VAR ID EQUALS NEW LISTA LPAREN inicializaLista RPAREN PUNTCOM
    (58) expLista -> . VAR ID EQUALS LCORCHETE elementosLista RCORCHETE PUNTCOM
    (61) add_lista -> . ID LCORCHETE NUMBER RCORCHETE EQUALS num_cadena PUNTCOM
    (62) add_lista -> . ID PTO ADD LPAREN elementoAddLista RPAREN PUNTCOM
    (72) replace -> . ID PTO REPLACE LPAREN NUMBER COMA NUMBER COMA LCORCHETE NUMBER RCORCHETE RPAREN PUNTCOM
    (77) expMapa -> . VAR ID EQUALS NEW MAPA LPAREN RPAREN PUNTCOM
    (78) expMapa -> . MAPA ID EQUALS LCURLYB elementosMapa RCURLYB PUNTCOM
    (81) add_mapa -> . ID LCORCHETE num_cadena RCORCHETE EQUALS num_cadena PUNTCOM
    (83) update_mapa -> . ID PTO UPDATE LPAREN CADENA COMA LPAREN VAR ID RPAREN EQUALS MAYORQUE CADENA COMA IFABSENT DOSPTO LPAREN RPAREN EQUALS MAYORQUE CADENA RPAREN PUNTCOM
    (82) add_mapa_putIfAbsent -> . ID PTO PUT LPAREN num_cadena COMA LPAREN RPAREN EQUALS MAYORQUE num_cadena RPAREN PUNTCOM

    VAR             shift and go to state 22
    FOR             shift and go to state 24
    WHILE           shift and go to state 25
    IF              shift and go to state 26
    ID              shift and go to state 23
    PRINT           shift and go to state 27
    VOID            shift and go to state 28
    MAPA            shift and go to state 29

    expresion                      shift and go to state 176
    lista                          shift and go to state 2
    mapa                           shift and go to state 3
    variable                       shift and go to state 4
    expresionFor                   shift and go to state 5
    expresionWhile                 shift and go to state 6
    expresionIf                    shift and go to state 7
    f_subtring                     shift and go to state 8
    accPosString                   shift and go to state 9
    incremento                     shift and go to state 10
    decremento                     shift and go to state 11
    print                          shift and go to state 12
    funcion                        shift and go to state 13
    concatenar                     shift and go to state 14
    expLista                       shift and go to state 15
    add_lista                      shift and go to state 16
    replace                        shift and go to state 17
    expMapa                        shift and go to state 18
    add_mapa                       shift and go to state 19
    update_mapa                    shift and go to state 20
    add_mapa_putIfAbsent           shift and go to state 21

state 141

    (25) forParameters -> forIterator PUNTCOM forCondition . PUNTCOM forAction

    PUNTCOM         shift and go to state 177


state 142

    (28) forCondition -> ID . MAYORQUE NUMBER
    (29) forCondition -> ID . MENORQUE NUMBER

    MAYORQUE        shift and go to state 178
    MENORQUE        shift and go to state 179


state 143

    (26) forIterator -> INT ID EQUALS . NUMBER

    NUMBER          shift and go to state 180


state 144

    (27) forIterator -> ID EQUALS NUMBER .

    PUNTCOM         reduce using rule 27 (forIterator -> ID EQUALS NUMBER .)


state 145

    (34) expresionWhile -> WHILE LPAREN expresionBool RPAREN LCURLYB . expresion RCURLYB
    (1) expresion -> . lista
    (2) expresion -> . mapa
    (3) expresion -> . variable
    (4) expresion -> . expresionFor
    (5) expresion -> . expresionWhile
    (6) expresion -> . expresionIf
    (7) expresion -> . f_subtring
    (8) expresion -> . accPosString
    (9) expresion -> . incremento
    (10) expresion -> . decremento
    (11) expresion -> . print
    (12) expresion -> . funcion
    (13) expresion -> . concatenar
    (14) expresion -> . expresion expresion
    (54) lista -> . expLista
    (55) lista -> . add_lista
    (56) lista -> . replace
    (73) mapa -> . expMapa
    (74) mapa -> . add_mapa
    (75) mapa -> . update_mapa
    (76) mapa -> . add_mapa_putIfAbsent
    (15) variable -> . VAR ID EQUALS expresionVar PUNTCOM
    (16) variable -> . VAR ID PUNTCOM
    (17) variable -> . VAR ID EQUALS expresionBool PUNTCOM
    (24) expresionFor -> . FOR LPAREN forParameters RPAREN LCURLYB expresion RCURLYB
    (34) expresionWhile -> . WHILE LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB
    (35) expresionIf -> . IF LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB
    (91) f_subtring -> . VAR ID EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN PUNTCOM
    (92) accPosString -> . VAR ID EQUALS ID LCORCHETE NUMBER RCORCHETE PUNTCOM
    (89) incremento -> . ID INCREMENTO PUNTCOM
    (90) decremento -> . ID DECREMENTO PUNTCOM
    (93) print -> . PRINT LPAREN printVal RPAREN PUNTCOM
    (97) funcion -> . VOID ID LPAREN parametroFuncion RPAREN final_key
    (101) concatenar -> . VAR ID EQUALS concatenarRecursivo PUNTCOM
    (57) expLista -> . VAR ID EQUALS NEW LISTA LPAREN inicializaLista RPAREN PUNTCOM
    (58) expLista -> . VAR ID EQUALS LCORCHETE elementosLista RCORCHETE PUNTCOM
    (61) add_lista -> . ID LCORCHETE NUMBER RCORCHETE EQUALS num_cadena PUNTCOM
    (62) add_lista -> . ID PTO ADD LPAREN elementoAddLista RPAREN PUNTCOM
    (72) replace -> . ID PTO REPLACE LPAREN NUMBER COMA NUMBER COMA LCORCHETE NUMBER RCORCHETE RPAREN PUNTCOM
    (77) expMapa -> . VAR ID EQUALS NEW MAPA LPAREN RPAREN PUNTCOM
    (78) expMapa -> . MAPA ID EQUALS LCURLYB elementosMapa RCURLYB PUNTCOM
    (81) add_mapa -> . ID LCORCHETE num_cadena RCORCHETE EQUALS num_cadena PUNTCOM
    (83) update_mapa -> . ID PTO UPDATE LPAREN CADENA COMA LPAREN VAR ID RPAREN EQUALS MAYORQUE CADENA COMA IFABSENT DOSPTO LPAREN RPAREN EQUALS MAYORQUE CADENA RPAREN PUNTCOM
    (82) add_mapa_putIfAbsent -> . ID PTO PUT LPAREN num_cadena COMA LPAREN RPAREN EQUALS MAYORQUE num_cadena RPAREN PUNTCOM

    VAR             shift and go to state 22
    FOR             shift and go to state 24
    WHILE           shift and go to state 25
    IF              shift and go to state 26
    ID              shift and go to state 23
    PRINT           shift and go to state 27
    VOID            shift and go to state 28
    MAPA            shift and go to state 29

    expresion                      shift and go to state 181
    lista                          shift and go to state 2
    mapa                           shift and go to state 3
    variable                       shift and go to state 4
    expresionFor                   shift and go to state 5
    expresionWhile                 shift and go to state 6
    expresionIf                    shift and go to state 7
    f_subtring                     shift and go to state 8
    accPosString                   shift and go to state 9
    incremento                     shift and go to state 10
    decremento                     shift and go to state 11
    print                          shift and go to state 12
    funcion                        shift and go to state 13
    concatenar                     shift and go to state 14
    expLista                       shift and go to state 15
    add_lista                      shift and go to state 16
    replace                        shift and go to state 17
    expMapa                        shift and go to state 18
    add_mapa                       shift and go to state 19
    update_mapa                    shift and go to state 20
    add_mapa_putIfAbsent           shift and go to state 21

state 146

    (42) expresionBool -> expresionBool comparador expresionBool .
    (42) expresionBool -> expresionBool . comparador expresionBool
    (43) expresionBool -> expresionBool . EQUIVAL expresionBool
    (46) comparador -> . MAYORQUE
    (47) comparador -> . MENORQUE
    (48) comparador -> . EQUIVAL
    (49) comparador -> . MINEQ
    (50) comparador -> . MAYEQ
    (51) comparador -> . NOEQUIVAL
    (52) comparador -> . AND
    (53) comparador -> . OR

  ! shift/reduce conflict for EQUIVAL resolved as shift
  ! shift/reduce conflict for MAYORQUE resolved as shift
  ! shift/reduce conflict for MENORQUE resolved as shift
  ! shift/reduce conflict for MINEQ resolved as shift
  ! shift/reduce conflict for MAYEQ resolved as shift
  ! shift/reduce conflict for NOEQUIVAL resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    RPAREN          reduce using rule 42 (expresionBool -> expresionBool comparador expresionBool .)
    PUNTCOM         reduce using rule 42 (expresionBool -> expresionBool comparador expresionBool .)
    EQUIVAL         shift and go to state 96
    MAYORQUE        shift and go to state 97
    MENORQUE        shift and go to state 98
    MINEQ           shift and go to state 99
    MAYEQ           shift and go to state 100
    NOEQUIVAL       shift and go to state 101
    AND             shift and go to state 102
    OR              shift and go to state 103

  ! EQUIVAL         [ reduce using rule 42 (expresionBool -> expresionBool comparador expresionBool .) ]
  ! MAYORQUE        [ reduce using rule 42 (expresionBool -> expresionBool comparador expresionBool .) ]
  ! MENORQUE        [ reduce using rule 42 (expresionBool -> expresionBool comparador expresionBool .) ]
  ! MINEQ           [ reduce using rule 42 (expresionBool -> expresionBool comparador expresionBool .) ]
  ! MAYEQ           [ reduce using rule 42 (expresionBool -> expresionBool comparador expresionBool .) ]
  ! NOEQUIVAL       [ reduce using rule 42 (expresionBool -> expresionBool comparador expresionBool .) ]
  ! AND             [ reduce using rule 42 (expresionBool -> expresionBool comparador expresionBool .) ]
  ! OR              [ reduce using rule 42 (expresionBool -> expresionBool comparador expresionBool .) ]

    comparador                     shift and go to state 95

state 147

    (43) expresionBool -> expresionBool EQUIVAL expresionBool .
    (42) expresionBool -> expresionBool . comparador expresionBool
    (43) expresionBool -> expresionBool . EQUIVAL expresionBool
    (46) comparador -> . MAYORQUE
    (47) comparador -> . MENORQUE
    (48) comparador -> . EQUIVAL
    (49) comparador -> . MINEQ
    (50) comparador -> . MAYEQ
    (51) comparador -> . NOEQUIVAL
    (52) comparador -> . AND
    (53) comparador -> . OR

  ! shift/reduce conflict for EQUIVAL resolved as shift
  ! shift/reduce conflict for MAYORQUE resolved as shift
  ! shift/reduce conflict for MENORQUE resolved as shift
  ! shift/reduce conflict for MINEQ resolved as shift
  ! shift/reduce conflict for MAYEQ resolved as shift
  ! shift/reduce conflict for NOEQUIVAL resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    RPAREN          reduce using rule 43 (expresionBool -> expresionBool EQUIVAL expresionBool .)
    PUNTCOM         reduce using rule 43 (expresionBool -> expresionBool EQUIVAL expresionBool .)
    EQUIVAL         shift and go to state 96
    MAYORQUE        shift and go to state 97
    MENORQUE        shift and go to state 98
    MINEQ           shift and go to state 99
    MAYEQ           shift and go to state 100
    NOEQUIVAL       shift and go to state 101
    AND             shift and go to state 102
    OR              shift and go to state 103

  ! EQUIVAL         [ reduce using rule 43 (expresionBool -> expresionBool EQUIVAL expresionBool .) ]
  ! MAYORQUE        [ reduce using rule 43 (expresionBool -> expresionBool EQUIVAL expresionBool .) ]
  ! MENORQUE        [ reduce using rule 43 (expresionBool -> expresionBool EQUIVAL expresionBool .) ]
  ! MINEQ           [ reduce using rule 43 (expresionBool -> expresionBool EQUIVAL expresionBool .) ]
  ! MAYEQ           [ reduce using rule 43 (expresionBool -> expresionBool EQUIVAL expresionBool .) ]
  ! NOEQUIVAL       [ reduce using rule 43 (expresionBool -> expresionBool EQUIVAL expresionBool .) ]
  ! AND             [ reduce using rule 43 (expresionBool -> expresionBool EQUIVAL expresionBool .) ]
  ! OR              [ reduce using rule 43 (expresionBool -> expresionBool EQUIVAL expresionBool .) ]

    comparador                     shift and go to state 95

state 148

    (37) expresionBool -> ID comparador ID .

    RPAREN          reduce using rule 37 (expresionBool -> ID comparador ID .)
    EQUIVAL         reduce using rule 37 (expresionBool -> ID comparador ID .)
    MAYORQUE        reduce using rule 37 (expresionBool -> ID comparador ID .)
    MENORQUE        reduce using rule 37 (expresionBool -> ID comparador ID .)
    MINEQ           reduce using rule 37 (expresionBool -> ID comparador ID .)
    MAYEQ           reduce using rule 37 (expresionBool -> ID comparador ID .)
    NOEQUIVAL       reduce using rule 37 (expresionBool -> ID comparador ID .)
    AND             reduce using rule 37 (expresionBool -> ID comparador ID .)
    OR              reduce using rule 37 (expresionBool -> ID comparador ID .)
    PUNTCOM         reduce using rule 37 (expresionBool -> ID comparador ID .)


state 149

    (38) expresionBool -> ID comparador NUMBER .

    RPAREN          reduce using rule 38 (expresionBool -> ID comparador NUMBER .)
    EQUIVAL         reduce using rule 38 (expresionBool -> ID comparador NUMBER .)
    MAYORQUE        reduce using rule 38 (expresionBool -> ID comparador NUMBER .)
    MENORQUE        reduce using rule 38 (expresionBool -> ID comparador NUMBER .)
    MINEQ           reduce using rule 38 (expresionBool -> ID comparador NUMBER .)
    MAYEQ           reduce using rule 38 (expresionBool -> ID comparador NUMBER .)
    NOEQUIVAL       reduce using rule 38 (expresionBool -> ID comparador NUMBER .)
    AND             reduce using rule 38 (expresionBool -> ID comparador NUMBER .)
    OR              reduce using rule 38 (expresionBool -> ID comparador NUMBER .)
    PUNTCOM         reduce using rule 38 (expresionBool -> ID comparador NUMBER .)


state 150

    (40) expresionBool -> NUMBER comparador NUMBER .

    RPAREN          reduce using rule 40 (expresionBool -> NUMBER comparador NUMBER .)
    EQUIVAL         reduce using rule 40 (expresionBool -> NUMBER comparador NUMBER .)
    MAYORQUE        reduce using rule 40 (expresionBool -> NUMBER comparador NUMBER .)
    MENORQUE        reduce using rule 40 (expresionBool -> NUMBER comparador NUMBER .)
    MINEQ           reduce using rule 40 (expresionBool -> NUMBER comparador NUMBER .)
    MAYEQ           reduce using rule 40 (expresionBool -> NUMBER comparador NUMBER .)
    NOEQUIVAL       reduce using rule 40 (expresionBool -> NUMBER comparador NUMBER .)
    AND             reduce using rule 40 (expresionBool -> NUMBER comparador NUMBER .)
    OR              reduce using rule 40 (expresionBool -> NUMBER comparador NUMBER .)
    PUNTCOM         reduce using rule 40 (expresionBool -> NUMBER comparador NUMBER .)


state 151

    (39) expresionBool -> NUMBER comparador ID .

    RPAREN          reduce using rule 39 (expresionBool -> NUMBER comparador ID .)
    EQUIVAL         reduce using rule 39 (expresionBool -> NUMBER comparador ID .)
    MAYORQUE        reduce using rule 39 (expresionBool -> NUMBER comparador ID .)
    MENORQUE        reduce using rule 39 (expresionBool -> NUMBER comparador ID .)
    MINEQ           reduce using rule 39 (expresionBool -> NUMBER comparador ID .)
    MAYEQ           reduce using rule 39 (expresionBool -> NUMBER comparador ID .)
    NOEQUIVAL       reduce using rule 39 (expresionBool -> NUMBER comparador ID .)
    AND             reduce using rule 39 (expresionBool -> NUMBER comparador ID .)
    OR              reduce using rule 39 (expresionBool -> NUMBER comparador ID .)
    PUNTCOM         reduce using rule 39 (expresionBool -> NUMBER comparador ID .)


state 152

    (35) expresionIf -> IF LPAREN expresionBool RPAREN LCURLYB . expresion RCURLYB
    (1) expresion -> . lista
    (2) expresion -> . mapa
    (3) expresion -> . variable
    (4) expresion -> . expresionFor
    (5) expresion -> . expresionWhile
    (6) expresion -> . expresionIf
    (7) expresion -> . f_subtring
    (8) expresion -> . accPosString
    (9) expresion -> . incremento
    (10) expresion -> . decremento
    (11) expresion -> . print
    (12) expresion -> . funcion
    (13) expresion -> . concatenar
    (14) expresion -> . expresion expresion
    (54) lista -> . expLista
    (55) lista -> . add_lista
    (56) lista -> . replace
    (73) mapa -> . expMapa
    (74) mapa -> . add_mapa
    (75) mapa -> . update_mapa
    (76) mapa -> . add_mapa_putIfAbsent
    (15) variable -> . VAR ID EQUALS expresionVar PUNTCOM
    (16) variable -> . VAR ID PUNTCOM
    (17) variable -> . VAR ID EQUALS expresionBool PUNTCOM
    (24) expresionFor -> . FOR LPAREN forParameters RPAREN LCURLYB expresion RCURLYB
    (34) expresionWhile -> . WHILE LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB
    (35) expresionIf -> . IF LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB
    (91) f_subtring -> . VAR ID EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN PUNTCOM
    (92) accPosString -> . VAR ID EQUALS ID LCORCHETE NUMBER RCORCHETE PUNTCOM
    (89) incremento -> . ID INCREMENTO PUNTCOM
    (90) decremento -> . ID DECREMENTO PUNTCOM
    (93) print -> . PRINT LPAREN printVal RPAREN PUNTCOM
    (97) funcion -> . VOID ID LPAREN parametroFuncion RPAREN final_key
    (101) concatenar -> . VAR ID EQUALS concatenarRecursivo PUNTCOM
    (57) expLista -> . VAR ID EQUALS NEW LISTA LPAREN inicializaLista RPAREN PUNTCOM
    (58) expLista -> . VAR ID EQUALS LCORCHETE elementosLista RCORCHETE PUNTCOM
    (61) add_lista -> . ID LCORCHETE NUMBER RCORCHETE EQUALS num_cadena PUNTCOM
    (62) add_lista -> . ID PTO ADD LPAREN elementoAddLista RPAREN PUNTCOM
    (72) replace -> . ID PTO REPLACE LPAREN NUMBER COMA NUMBER COMA LCORCHETE NUMBER RCORCHETE RPAREN PUNTCOM
    (77) expMapa -> . VAR ID EQUALS NEW MAPA LPAREN RPAREN PUNTCOM
    (78) expMapa -> . MAPA ID EQUALS LCURLYB elementosMapa RCURLYB PUNTCOM
    (81) add_mapa -> . ID LCORCHETE num_cadena RCORCHETE EQUALS num_cadena PUNTCOM
    (83) update_mapa -> . ID PTO UPDATE LPAREN CADENA COMA LPAREN VAR ID RPAREN EQUALS MAYORQUE CADENA COMA IFABSENT DOSPTO LPAREN RPAREN EQUALS MAYORQUE CADENA RPAREN PUNTCOM
    (82) add_mapa_putIfAbsent -> . ID PTO PUT LPAREN num_cadena COMA LPAREN RPAREN EQUALS MAYORQUE num_cadena RPAREN PUNTCOM

    VAR             shift and go to state 22
    FOR             shift and go to state 24
    WHILE           shift and go to state 25
    IF              shift and go to state 26
    ID              shift and go to state 23
    PRINT           shift and go to state 27
    VOID            shift and go to state 28
    MAPA            shift and go to state 29

    expresion                      shift and go to state 182
    lista                          shift and go to state 2
    mapa                           shift and go to state 3
    variable                       shift and go to state 4
    expresionFor                   shift and go to state 5
    expresionWhile                 shift and go to state 6
    expresionIf                    shift and go to state 7
    f_subtring                     shift and go to state 8
    accPosString                   shift and go to state 9
    incremento                     shift and go to state 10
    decremento                     shift and go to state 11
    print                          shift and go to state 12
    funcion                        shift and go to state 13
    concatenar                     shift and go to state 14
    expLista                       shift and go to state 15
    add_lista                      shift and go to state 16
    replace                        shift and go to state 17
    expMapa                        shift and go to state 18
    add_mapa                       shift and go to state 19
    update_mapa                    shift and go to state 20
    add_mapa_putIfAbsent           shift and go to state 21

state 153

    (93) print -> PRINT LPAREN printVal RPAREN PUNTCOM .

    VAR             reduce using rule 93 (print -> PRINT LPAREN printVal RPAREN PUNTCOM .)
    FOR             reduce using rule 93 (print -> PRINT LPAREN printVal RPAREN PUNTCOM .)
    WHILE           reduce using rule 93 (print -> PRINT LPAREN printVal RPAREN PUNTCOM .)
    IF              reduce using rule 93 (print -> PRINT LPAREN printVal RPAREN PUNTCOM .)
    ID              reduce using rule 93 (print -> PRINT LPAREN printVal RPAREN PUNTCOM .)
    PRINT           reduce using rule 93 (print -> PRINT LPAREN printVal RPAREN PUNTCOM .)
    VOID            reduce using rule 93 (print -> PRINT LPAREN printVal RPAREN PUNTCOM .)
    MAPA            reduce using rule 93 (print -> PRINT LPAREN printVal RPAREN PUNTCOM .)
    $end            reduce using rule 93 (print -> PRINT LPAREN printVal RPAREN PUNTCOM .)
    RCURLYB         reduce using rule 93 (print -> PRINT LPAREN printVal RPAREN PUNTCOM .)


state 154

    (97) funcion -> VOID ID LPAREN parametroFuncion RPAREN . final_key
    (100) final_key -> . LCURLYB expresion RCURLYB

    LCURLYB         shift and go to state 184

    final_key                      shift and go to state 183

state 155

    (98) parametroFuncion -> VAR ID .

    RPAREN          reduce using rule 98 (parametroFuncion -> VAR ID .)


state 156

    (78) expMapa -> MAPA ID EQUALS LCURLYB elementosMapa . RCURLYB PUNTCOM

    RCURLYB         shift and go to state 185


state 157

    (79) elementosMapa -> num_cadena . DOSPTO num_cadena
    (80) elementosMapa -> num_cadena . DOSPTO num_cadena COMA elementosMapa

    DOSPTO          shift and go to state 186


state 158

    (91) f_subtring -> VAR ID EQUALS ID PTO SUBSTRING . LPAREN NUMBER COMA NUMBER RPAREN PUNTCOM

    LPAREN          shift and go to state 187


state 159

    (92) accPosString -> VAR ID EQUALS ID LCORCHETE NUMBER . RCORCHETE PUNTCOM

    RCORCHETE       shift and go to state 188


state 160

    (23) expresionVar -> expresionVar operadorA expresionVar .
    (23) expresionVar -> expresionVar . operadorA expresionVar
    (84) operadorA -> . PLUS
    (85) operadorA -> . MINUS
    (86) operadorA -> . TIMES
    (87) operadorA -> . DIVIDE
    (88) operadorA -> . DIVIDE_E

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DIVIDE_E resolved as shift
    PUNTCOM         reduce using rule 23 (expresionVar -> expresionVar operadorA expresionVar .)
    PLUS            shift and go to state 117
    MINUS           shift and go to state 118
    TIMES           shift and go to state 119
    DIVIDE          shift and go to state 120
    DIVIDE_E        shift and go to state 121

  ! PLUS            [ reduce using rule 23 (expresionVar -> expresionVar operadorA expresionVar .) ]
  ! MINUS           [ reduce using rule 23 (expresionVar -> expresionVar operadorA expresionVar .) ]
  ! TIMES           [ reduce using rule 23 (expresionVar -> expresionVar operadorA expresionVar .) ]
  ! DIVIDE          [ reduce using rule 23 (expresionVar -> expresionVar operadorA expresionVar .) ]
  ! DIVIDE_E        [ reduce using rule 23 (expresionVar -> expresionVar operadorA expresionVar .) ]

    operadorA                      shift and go to state 116

state 161

    (22) expresionVar -> ID .

    PLUS            reduce using rule 22 (expresionVar -> ID .)
    MINUS           reduce using rule 22 (expresionVar -> ID .)
    TIMES           reduce using rule 22 (expresionVar -> ID .)
    DIVIDE          reduce using rule 22 (expresionVar -> ID .)
    DIVIDE_E        reduce using rule 22 (expresionVar -> ID .)
    PUNTCOM         reduce using rule 22 (expresionVar -> ID .)


state 162

    (18) valorVar -> NUMBER .

    PLUS            reduce using rule 18 (valorVar -> NUMBER .)
    MINUS           reduce using rule 18 (valorVar -> NUMBER .)
    TIMES           reduce using rule 18 (valorVar -> NUMBER .)
    DIVIDE          reduce using rule 18 (valorVar -> NUMBER .)
    DIVIDE_E        reduce using rule 18 (valorVar -> NUMBER .)
    PUNTCOM         reduce using rule 18 (valorVar -> NUMBER .)


state 163

    (58) expLista -> VAR ID EQUALS LCORCHETE elementosLista RCORCHETE . PUNTCOM

    PUNTCOM         shift and go to state 189


state 164

    (69) elementosLista -> CADENA COMA . elementosLista
    (67) elementosLista -> . CADENA
    (68) elementosLista -> . NUMBER
    (69) elementosLista -> . CADENA COMA elementosLista
    (70) elementosLista -> . NUMBER COMA elementosLista
    (71) elementosLista -> .

    CADENA          shift and go to state 124
    NUMBER          shift and go to state 125
    RCORCHETE       reduce using rule 71 (elementosLista -> .)

    elementosLista                 shift and go to state 190

state 165

    (70) elementosLista -> NUMBER COMA . elementosLista
    (67) elementosLista -> . CADENA
    (68) elementosLista -> . NUMBER
    (69) elementosLista -> . CADENA COMA elementosLista
    (70) elementosLista -> . NUMBER COMA elementosLista
    (71) elementosLista -> .

    CADENA          shift and go to state 124
    NUMBER          shift and go to state 125
    RCORCHETE       reduce using rule 71 (elementosLista -> .)

    elementosLista                 shift and go to state 191

state 166

    (57) expLista -> VAR ID EQUALS NEW LISTA LPAREN . inicializaLista RPAREN PUNTCOM
    (59) inicializaLista -> . NUMBER
    (60) inicializaLista -> .

    NUMBER          shift and go to state 193
    RPAREN          reduce using rule 60 (inicializaLista -> .)

    inicializaLista                shift and go to state 192

state 167

    (77) expMapa -> VAR ID EQUALS NEW MAPA LPAREN . RPAREN PUNTCOM

    RPAREN          shift and go to state 194


state 168

    (102) concatenarRecursivo -> CADENA PLUS CADENA .
    (102) concatenarRecursivo -> CADENA . PLUS CADENA
    (104) concatenarRecursivo -> CADENA . PLUS concatenarRecursivo

    PUNTCOM         reduce using rule 102 (concatenarRecursivo -> CADENA PLUS CADENA .)
    PLUS            shift and go to state 129


state 169

    (104) concatenarRecursivo -> CADENA PLUS concatenarRecursivo .

    PUNTCOM         reduce using rule 104 (concatenarRecursivo -> CADENA PLUS concatenarRecursivo .)


state 170

    (61) add_lista -> ID LCORCHETE NUMBER RCORCHETE EQUALS num_cadena . PUNTCOM

    PUNTCOM         shift and go to state 195


state 171

    (81) add_mapa -> ID LCORCHETE num_cadena RCORCHETE EQUALS num_cadena . PUNTCOM

    PUNTCOM         shift and go to state 196


state 172

    (62) add_lista -> ID PTO ADD LPAREN elementoAddLista RPAREN . PUNTCOM

    PUNTCOM         shift and go to state 197


state 173

    (72) replace -> ID PTO REPLACE LPAREN NUMBER COMA . NUMBER COMA LCORCHETE NUMBER RCORCHETE RPAREN PUNTCOM

    NUMBER          shift and go to state 198


state 174

    (83) update_mapa -> ID PTO UPDATE LPAREN CADENA COMA . LPAREN VAR ID RPAREN EQUALS MAYORQUE CADENA COMA IFABSENT DOSPTO LPAREN RPAREN EQUALS MAYORQUE CADENA RPAREN PUNTCOM

    LPAREN          shift and go to state 199


state 175

    (82) add_mapa_putIfAbsent -> ID PTO PUT LPAREN num_cadena COMA . LPAREN RPAREN EQUALS MAYORQUE num_cadena RPAREN PUNTCOM

    LPAREN          shift and go to state 200


state 176

    (24) expresionFor -> FOR LPAREN forParameters RPAREN LCURLYB expresion . RCURLYB
    (14) expresion -> expresion . expresion
    (1) expresion -> . lista
    (2) expresion -> . mapa
    (3) expresion -> . variable
    (4) expresion -> . expresionFor
    (5) expresion -> . expresionWhile
    (6) expresion -> . expresionIf
    (7) expresion -> . f_subtring
    (8) expresion -> . accPosString
    (9) expresion -> . incremento
    (10) expresion -> . decremento
    (11) expresion -> . print
    (12) expresion -> . funcion
    (13) expresion -> . concatenar
    (14) expresion -> . expresion expresion
    (54) lista -> . expLista
    (55) lista -> . add_lista
    (56) lista -> . replace
    (73) mapa -> . expMapa
    (74) mapa -> . add_mapa
    (75) mapa -> . update_mapa
    (76) mapa -> . add_mapa_putIfAbsent
    (15) variable -> . VAR ID EQUALS expresionVar PUNTCOM
    (16) variable -> . VAR ID PUNTCOM
    (17) variable -> . VAR ID EQUALS expresionBool PUNTCOM
    (24) expresionFor -> . FOR LPAREN forParameters RPAREN LCURLYB expresion RCURLYB
    (34) expresionWhile -> . WHILE LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB
    (35) expresionIf -> . IF LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB
    (91) f_subtring -> . VAR ID EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN PUNTCOM
    (92) accPosString -> . VAR ID EQUALS ID LCORCHETE NUMBER RCORCHETE PUNTCOM
    (89) incremento -> . ID INCREMENTO PUNTCOM
    (90) decremento -> . ID DECREMENTO PUNTCOM
    (93) print -> . PRINT LPAREN printVal RPAREN PUNTCOM
    (97) funcion -> . VOID ID LPAREN parametroFuncion RPAREN final_key
    (101) concatenar -> . VAR ID EQUALS concatenarRecursivo PUNTCOM
    (57) expLista -> . VAR ID EQUALS NEW LISTA LPAREN inicializaLista RPAREN PUNTCOM
    (58) expLista -> . VAR ID EQUALS LCORCHETE elementosLista RCORCHETE PUNTCOM
    (61) add_lista -> . ID LCORCHETE NUMBER RCORCHETE EQUALS num_cadena PUNTCOM
    (62) add_lista -> . ID PTO ADD LPAREN elementoAddLista RPAREN PUNTCOM
    (72) replace -> . ID PTO REPLACE LPAREN NUMBER COMA NUMBER COMA LCORCHETE NUMBER RCORCHETE RPAREN PUNTCOM
    (77) expMapa -> . VAR ID EQUALS NEW MAPA LPAREN RPAREN PUNTCOM
    (78) expMapa -> . MAPA ID EQUALS LCURLYB elementosMapa RCURLYB PUNTCOM
    (81) add_mapa -> . ID LCORCHETE num_cadena RCORCHETE EQUALS num_cadena PUNTCOM
    (83) update_mapa -> . ID PTO UPDATE LPAREN CADENA COMA LPAREN VAR ID RPAREN EQUALS MAYORQUE CADENA COMA IFABSENT DOSPTO LPAREN RPAREN EQUALS MAYORQUE CADENA RPAREN PUNTCOM
    (82) add_mapa_putIfAbsent -> . ID PTO PUT LPAREN num_cadena COMA LPAREN RPAREN EQUALS MAYORQUE num_cadena RPAREN PUNTCOM

    RCURLYB         shift and go to state 201
    VAR             shift and go to state 22
    FOR             shift and go to state 24
    WHILE           shift and go to state 25
    IF              shift and go to state 26
    ID              shift and go to state 23
    PRINT           shift and go to state 27
    VOID            shift and go to state 28
    MAPA            shift and go to state 29

    expresion                      shift and go to state 30
    lista                          shift and go to state 2
    mapa                           shift and go to state 3
    variable                       shift and go to state 4
    expresionFor                   shift and go to state 5
    expresionWhile                 shift and go to state 6
    expresionIf                    shift and go to state 7
    f_subtring                     shift and go to state 8
    accPosString                   shift and go to state 9
    incremento                     shift and go to state 10
    decremento                     shift and go to state 11
    print                          shift and go to state 12
    funcion                        shift and go to state 13
    concatenar                     shift and go to state 14
    expLista                       shift and go to state 15
    add_lista                      shift and go to state 16
    replace                        shift and go to state 17
    expMapa                        shift and go to state 18
    add_mapa                       shift and go to state 19
    update_mapa                    shift and go to state 20
    add_mapa_putIfAbsent           shift and go to state 21

state 177

    (25) forParameters -> forIterator PUNTCOM forCondition PUNTCOM . forAction
    (30) forAction -> . ID INCREMENTO
    (31) forAction -> . ID DECREMENTO
    (32) forAction -> . INCREMENTO ID
    (33) forAction -> . DECREMENTO ID

    ID              shift and go to state 203
    INCREMENTO      shift and go to state 204
    DECREMENTO      shift and go to state 205

    forAction                      shift and go to state 202

state 178

    (28) forCondition -> ID MAYORQUE . NUMBER

    NUMBER          shift and go to state 206


state 179

    (29) forCondition -> ID MENORQUE . NUMBER

    NUMBER          shift and go to state 207


state 180

    (26) forIterator -> INT ID EQUALS NUMBER .

    PUNTCOM         reduce using rule 26 (forIterator -> INT ID EQUALS NUMBER .)


state 181

    (34) expresionWhile -> WHILE LPAREN expresionBool RPAREN LCURLYB expresion . RCURLYB
    (14) expresion -> expresion . expresion
    (1) expresion -> . lista
    (2) expresion -> . mapa
    (3) expresion -> . variable
    (4) expresion -> . expresionFor
    (5) expresion -> . expresionWhile
    (6) expresion -> . expresionIf
    (7) expresion -> . f_subtring
    (8) expresion -> . accPosString
    (9) expresion -> . incremento
    (10) expresion -> . decremento
    (11) expresion -> . print
    (12) expresion -> . funcion
    (13) expresion -> . concatenar
    (14) expresion -> . expresion expresion
    (54) lista -> . expLista
    (55) lista -> . add_lista
    (56) lista -> . replace
    (73) mapa -> . expMapa
    (74) mapa -> . add_mapa
    (75) mapa -> . update_mapa
    (76) mapa -> . add_mapa_putIfAbsent
    (15) variable -> . VAR ID EQUALS expresionVar PUNTCOM
    (16) variable -> . VAR ID PUNTCOM
    (17) variable -> . VAR ID EQUALS expresionBool PUNTCOM
    (24) expresionFor -> . FOR LPAREN forParameters RPAREN LCURLYB expresion RCURLYB
    (34) expresionWhile -> . WHILE LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB
    (35) expresionIf -> . IF LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB
    (91) f_subtring -> . VAR ID EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN PUNTCOM
    (92) accPosString -> . VAR ID EQUALS ID LCORCHETE NUMBER RCORCHETE PUNTCOM
    (89) incremento -> . ID INCREMENTO PUNTCOM
    (90) decremento -> . ID DECREMENTO PUNTCOM
    (93) print -> . PRINT LPAREN printVal RPAREN PUNTCOM
    (97) funcion -> . VOID ID LPAREN parametroFuncion RPAREN final_key
    (101) concatenar -> . VAR ID EQUALS concatenarRecursivo PUNTCOM
    (57) expLista -> . VAR ID EQUALS NEW LISTA LPAREN inicializaLista RPAREN PUNTCOM
    (58) expLista -> . VAR ID EQUALS LCORCHETE elementosLista RCORCHETE PUNTCOM
    (61) add_lista -> . ID LCORCHETE NUMBER RCORCHETE EQUALS num_cadena PUNTCOM
    (62) add_lista -> . ID PTO ADD LPAREN elementoAddLista RPAREN PUNTCOM
    (72) replace -> . ID PTO REPLACE LPAREN NUMBER COMA NUMBER COMA LCORCHETE NUMBER RCORCHETE RPAREN PUNTCOM
    (77) expMapa -> . VAR ID EQUALS NEW MAPA LPAREN RPAREN PUNTCOM
    (78) expMapa -> . MAPA ID EQUALS LCURLYB elementosMapa RCURLYB PUNTCOM
    (81) add_mapa -> . ID LCORCHETE num_cadena RCORCHETE EQUALS num_cadena PUNTCOM
    (83) update_mapa -> . ID PTO UPDATE LPAREN CADENA COMA LPAREN VAR ID RPAREN EQUALS MAYORQUE CADENA COMA IFABSENT DOSPTO LPAREN RPAREN EQUALS MAYORQUE CADENA RPAREN PUNTCOM
    (82) add_mapa_putIfAbsent -> . ID PTO PUT LPAREN num_cadena COMA LPAREN RPAREN EQUALS MAYORQUE num_cadena RPAREN PUNTCOM

    RCURLYB         shift and go to state 208
    VAR             shift and go to state 22
    FOR             shift and go to state 24
    WHILE           shift and go to state 25
    IF              shift and go to state 26
    ID              shift and go to state 23
    PRINT           shift and go to state 27
    VOID            shift and go to state 28
    MAPA            shift and go to state 29

    expresion                      shift and go to state 30
    lista                          shift and go to state 2
    mapa                           shift and go to state 3
    variable                       shift and go to state 4
    expresionFor                   shift and go to state 5
    expresionWhile                 shift and go to state 6
    expresionIf                    shift and go to state 7
    f_subtring                     shift and go to state 8
    accPosString                   shift and go to state 9
    incremento                     shift and go to state 10
    decremento                     shift and go to state 11
    print                          shift and go to state 12
    funcion                        shift and go to state 13
    concatenar                     shift and go to state 14
    expLista                       shift and go to state 15
    add_lista                      shift and go to state 16
    replace                        shift and go to state 17
    expMapa                        shift and go to state 18
    add_mapa                       shift and go to state 19
    update_mapa                    shift and go to state 20
    add_mapa_putIfAbsent           shift and go to state 21

state 182

    (35) expresionIf -> IF LPAREN expresionBool RPAREN LCURLYB expresion . RCURLYB
    (14) expresion -> expresion . expresion
    (1) expresion -> . lista
    (2) expresion -> . mapa
    (3) expresion -> . variable
    (4) expresion -> . expresionFor
    (5) expresion -> . expresionWhile
    (6) expresion -> . expresionIf
    (7) expresion -> . f_subtring
    (8) expresion -> . accPosString
    (9) expresion -> . incremento
    (10) expresion -> . decremento
    (11) expresion -> . print
    (12) expresion -> . funcion
    (13) expresion -> . concatenar
    (14) expresion -> . expresion expresion
    (54) lista -> . expLista
    (55) lista -> . add_lista
    (56) lista -> . replace
    (73) mapa -> . expMapa
    (74) mapa -> . add_mapa
    (75) mapa -> . update_mapa
    (76) mapa -> . add_mapa_putIfAbsent
    (15) variable -> . VAR ID EQUALS expresionVar PUNTCOM
    (16) variable -> . VAR ID PUNTCOM
    (17) variable -> . VAR ID EQUALS expresionBool PUNTCOM
    (24) expresionFor -> . FOR LPAREN forParameters RPAREN LCURLYB expresion RCURLYB
    (34) expresionWhile -> . WHILE LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB
    (35) expresionIf -> . IF LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB
    (91) f_subtring -> . VAR ID EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN PUNTCOM
    (92) accPosString -> . VAR ID EQUALS ID LCORCHETE NUMBER RCORCHETE PUNTCOM
    (89) incremento -> . ID INCREMENTO PUNTCOM
    (90) decremento -> . ID DECREMENTO PUNTCOM
    (93) print -> . PRINT LPAREN printVal RPAREN PUNTCOM
    (97) funcion -> . VOID ID LPAREN parametroFuncion RPAREN final_key
    (101) concatenar -> . VAR ID EQUALS concatenarRecursivo PUNTCOM
    (57) expLista -> . VAR ID EQUALS NEW LISTA LPAREN inicializaLista RPAREN PUNTCOM
    (58) expLista -> . VAR ID EQUALS LCORCHETE elementosLista RCORCHETE PUNTCOM
    (61) add_lista -> . ID LCORCHETE NUMBER RCORCHETE EQUALS num_cadena PUNTCOM
    (62) add_lista -> . ID PTO ADD LPAREN elementoAddLista RPAREN PUNTCOM
    (72) replace -> . ID PTO REPLACE LPAREN NUMBER COMA NUMBER COMA LCORCHETE NUMBER RCORCHETE RPAREN PUNTCOM
    (77) expMapa -> . VAR ID EQUALS NEW MAPA LPAREN RPAREN PUNTCOM
    (78) expMapa -> . MAPA ID EQUALS LCURLYB elementosMapa RCURLYB PUNTCOM
    (81) add_mapa -> . ID LCORCHETE num_cadena RCORCHETE EQUALS num_cadena PUNTCOM
    (83) update_mapa -> . ID PTO UPDATE LPAREN CADENA COMA LPAREN VAR ID RPAREN EQUALS MAYORQUE CADENA COMA IFABSENT DOSPTO LPAREN RPAREN EQUALS MAYORQUE CADENA RPAREN PUNTCOM
    (82) add_mapa_putIfAbsent -> . ID PTO PUT LPAREN num_cadena COMA LPAREN RPAREN EQUALS MAYORQUE num_cadena RPAREN PUNTCOM

    RCURLYB         shift and go to state 209
    VAR             shift and go to state 22
    FOR             shift and go to state 24
    WHILE           shift and go to state 25
    IF              shift and go to state 26
    ID              shift and go to state 23
    PRINT           shift and go to state 27
    VOID            shift and go to state 28
    MAPA            shift and go to state 29

    expresion                      shift and go to state 30
    lista                          shift and go to state 2
    mapa                           shift and go to state 3
    variable                       shift and go to state 4
    expresionFor                   shift and go to state 5
    expresionWhile                 shift and go to state 6
    expresionIf                    shift and go to state 7
    f_subtring                     shift and go to state 8
    accPosString                   shift and go to state 9
    incremento                     shift and go to state 10
    decremento                     shift and go to state 11
    print                          shift and go to state 12
    funcion                        shift and go to state 13
    concatenar                     shift and go to state 14
    expLista                       shift and go to state 15
    add_lista                      shift and go to state 16
    replace                        shift and go to state 17
    expMapa                        shift and go to state 18
    add_mapa                       shift and go to state 19
    update_mapa                    shift and go to state 20
    add_mapa_putIfAbsent           shift and go to state 21

state 183

    (97) funcion -> VOID ID LPAREN parametroFuncion RPAREN final_key .

    VAR             reduce using rule 97 (funcion -> VOID ID LPAREN parametroFuncion RPAREN final_key .)
    FOR             reduce using rule 97 (funcion -> VOID ID LPAREN parametroFuncion RPAREN final_key .)
    WHILE           reduce using rule 97 (funcion -> VOID ID LPAREN parametroFuncion RPAREN final_key .)
    IF              reduce using rule 97 (funcion -> VOID ID LPAREN parametroFuncion RPAREN final_key .)
    ID              reduce using rule 97 (funcion -> VOID ID LPAREN parametroFuncion RPAREN final_key .)
    PRINT           reduce using rule 97 (funcion -> VOID ID LPAREN parametroFuncion RPAREN final_key .)
    VOID            reduce using rule 97 (funcion -> VOID ID LPAREN parametroFuncion RPAREN final_key .)
    MAPA            reduce using rule 97 (funcion -> VOID ID LPAREN parametroFuncion RPAREN final_key .)
    $end            reduce using rule 97 (funcion -> VOID ID LPAREN parametroFuncion RPAREN final_key .)
    RCURLYB         reduce using rule 97 (funcion -> VOID ID LPAREN parametroFuncion RPAREN final_key .)


state 184

    (100) final_key -> LCURLYB . expresion RCURLYB
    (1) expresion -> . lista
    (2) expresion -> . mapa
    (3) expresion -> . variable
    (4) expresion -> . expresionFor
    (5) expresion -> . expresionWhile
    (6) expresion -> . expresionIf
    (7) expresion -> . f_subtring
    (8) expresion -> . accPosString
    (9) expresion -> . incremento
    (10) expresion -> . decremento
    (11) expresion -> . print
    (12) expresion -> . funcion
    (13) expresion -> . concatenar
    (14) expresion -> . expresion expresion
    (54) lista -> . expLista
    (55) lista -> . add_lista
    (56) lista -> . replace
    (73) mapa -> . expMapa
    (74) mapa -> . add_mapa
    (75) mapa -> . update_mapa
    (76) mapa -> . add_mapa_putIfAbsent
    (15) variable -> . VAR ID EQUALS expresionVar PUNTCOM
    (16) variable -> . VAR ID PUNTCOM
    (17) variable -> . VAR ID EQUALS expresionBool PUNTCOM
    (24) expresionFor -> . FOR LPAREN forParameters RPAREN LCURLYB expresion RCURLYB
    (34) expresionWhile -> . WHILE LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB
    (35) expresionIf -> . IF LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB
    (91) f_subtring -> . VAR ID EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN PUNTCOM
    (92) accPosString -> . VAR ID EQUALS ID LCORCHETE NUMBER RCORCHETE PUNTCOM
    (89) incremento -> . ID INCREMENTO PUNTCOM
    (90) decremento -> . ID DECREMENTO PUNTCOM
    (93) print -> . PRINT LPAREN printVal RPAREN PUNTCOM
    (97) funcion -> . VOID ID LPAREN parametroFuncion RPAREN final_key
    (101) concatenar -> . VAR ID EQUALS concatenarRecursivo PUNTCOM
    (57) expLista -> . VAR ID EQUALS NEW LISTA LPAREN inicializaLista RPAREN PUNTCOM
    (58) expLista -> . VAR ID EQUALS LCORCHETE elementosLista RCORCHETE PUNTCOM
    (61) add_lista -> . ID LCORCHETE NUMBER RCORCHETE EQUALS num_cadena PUNTCOM
    (62) add_lista -> . ID PTO ADD LPAREN elementoAddLista RPAREN PUNTCOM
    (72) replace -> . ID PTO REPLACE LPAREN NUMBER COMA NUMBER COMA LCORCHETE NUMBER RCORCHETE RPAREN PUNTCOM
    (77) expMapa -> . VAR ID EQUALS NEW MAPA LPAREN RPAREN PUNTCOM
    (78) expMapa -> . MAPA ID EQUALS LCURLYB elementosMapa RCURLYB PUNTCOM
    (81) add_mapa -> . ID LCORCHETE num_cadena RCORCHETE EQUALS num_cadena PUNTCOM
    (83) update_mapa -> . ID PTO UPDATE LPAREN CADENA COMA LPAREN VAR ID RPAREN EQUALS MAYORQUE CADENA COMA IFABSENT DOSPTO LPAREN RPAREN EQUALS MAYORQUE CADENA RPAREN PUNTCOM
    (82) add_mapa_putIfAbsent -> . ID PTO PUT LPAREN num_cadena COMA LPAREN RPAREN EQUALS MAYORQUE num_cadena RPAREN PUNTCOM

    VAR             shift and go to state 22
    FOR             shift and go to state 24
    WHILE           shift and go to state 25
    IF              shift and go to state 26
    ID              shift and go to state 23
    PRINT           shift and go to state 27
    VOID            shift and go to state 28
    MAPA            shift and go to state 29

    expresion                      shift and go to state 210
    lista                          shift and go to state 2
    mapa                           shift and go to state 3
    variable                       shift and go to state 4
    expresionFor                   shift and go to state 5
    expresionWhile                 shift and go to state 6
    expresionIf                    shift and go to state 7
    f_subtring                     shift and go to state 8
    accPosString                   shift and go to state 9
    incremento                     shift and go to state 10
    decremento                     shift and go to state 11
    print                          shift and go to state 12
    funcion                        shift and go to state 13
    concatenar                     shift and go to state 14
    expLista                       shift and go to state 15
    add_lista                      shift and go to state 16
    replace                        shift and go to state 17
    expMapa                        shift and go to state 18
    add_mapa                       shift and go to state 19
    update_mapa                    shift and go to state 20
    add_mapa_putIfAbsent           shift and go to state 21

state 185

    (78) expMapa -> MAPA ID EQUALS LCURLYB elementosMapa RCURLYB . PUNTCOM

    PUNTCOM         shift and go to state 211


state 186

    (79) elementosMapa -> num_cadena DOSPTO . num_cadena
    (80) elementosMapa -> num_cadena DOSPTO . num_cadena COMA elementosMapa
    (65) num_cadena -> . NUMBER
    (66) num_cadena -> . CADENA

    NUMBER          shift and go to state 136
    CADENA          shift and go to state 48

    num_cadena                     shift and go to state 212

state 187

    (91) f_subtring -> VAR ID EQUALS ID PTO SUBSTRING LPAREN . NUMBER COMA NUMBER RPAREN PUNTCOM

    NUMBER          shift and go to state 213


state 188

    (92) accPosString -> VAR ID EQUALS ID LCORCHETE NUMBER RCORCHETE . PUNTCOM

    PUNTCOM         shift and go to state 214


state 189

    (58) expLista -> VAR ID EQUALS LCORCHETE elementosLista RCORCHETE PUNTCOM .

    VAR             reduce using rule 58 (expLista -> VAR ID EQUALS LCORCHETE elementosLista RCORCHETE PUNTCOM .)
    FOR             reduce using rule 58 (expLista -> VAR ID EQUALS LCORCHETE elementosLista RCORCHETE PUNTCOM .)
    WHILE           reduce using rule 58 (expLista -> VAR ID EQUALS LCORCHETE elementosLista RCORCHETE PUNTCOM .)
    IF              reduce using rule 58 (expLista -> VAR ID EQUALS LCORCHETE elementosLista RCORCHETE PUNTCOM .)
    ID              reduce using rule 58 (expLista -> VAR ID EQUALS LCORCHETE elementosLista RCORCHETE PUNTCOM .)
    PRINT           reduce using rule 58 (expLista -> VAR ID EQUALS LCORCHETE elementosLista RCORCHETE PUNTCOM .)
    VOID            reduce using rule 58 (expLista -> VAR ID EQUALS LCORCHETE elementosLista RCORCHETE PUNTCOM .)
    MAPA            reduce using rule 58 (expLista -> VAR ID EQUALS LCORCHETE elementosLista RCORCHETE PUNTCOM .)
    $end            reduce using rule 58 (expLista -> VAR ID EQUALS LCORCHETE elementosLista RCORCHETE PUNTCOM .)
    RCURLYB         reduce using rule 58 (expLista -> VAR ID EQUALS LCORCHETE elementosLista RCORCHETE PUNTCOM .)


state 190

    (69) elementosLista -> CADENA COMA elementosLista .

    RCORCHETE       reduce using rule 69 (elementosLista -> CADENA COMA elementosLista .)


state 191

    (70) elementosLista -> NUMBER COMA elementosLista .

    RCORCHETE       reduce using rule 70 (elementosLista -> NUMBER COMA elementosLista .)


state 192

    (57) expLista -> VAR ID EQUALS NEW LISTA LPAREN inicializaLista . RPAREN PUNTCOM

    RPAREN          shift and go to state 215


state 193

    (59) inicializaLista -> NUMBER .

    RPAREN          reduce using rule 59 (inicializaLista -> NUMBER .)


state 194

    (77) expMapa -> VAR ID EQUALS NEW MAPA LPAREN RPAREN . PUNTCOM

    PUNTCOM         shift and go to state 216


state 195

    (61) add_lista -> ID LCORCHETE NUMBER RCORCHETE EQUALS num_cadena PUNTCOM .

    VAR             reduce using rule 61 (add_lista -> ID LCORCHETE NUMBER RCORCHETE EQUALS num_cadena PUNTCOM .)
    FOR             reduce using rule 61 (add_lista -> ID LCORCHETE NUMBER RCORCHETE EQUALS num_cadena PUNTCOM .)
    WHILE           reduce using rule 61 (add_lista -> ID LCORCHETE NUMBER RCORCHETE EQUALS num_cadena PUNTCOM .)
    IF              reduce using rule 61 (add_lista -> ID LCORCHETE NUMBER RCORCHETE EQUALS num_cadena PUNTCOM .)
    ID              reduce using rule 61 (add_lista -> ID LCORCHETE NUMBER RCORCHETE EQUALS num_cadena PUNTCOM .)
    PRINT           reduce using rule 61 (add_lista -> ID LCORCHETE NUMBER RCORCHETE EQUALS num_cadena PUNTCOM .)
    VOID            reduce using rule 61 (add_lista -> ID LCORCHETE NUMBER RCORCHETE EQUALS num_cadena PUNTCOM .)
    MAPA            reduce using rule 61 (add_lista -> ID LCORCHETE NUMBER RCORCHETE EQUALS num_cadena PUNTCOM .)
    $end            reduce using rule 61 (add_lista -> ID LCORCHETE NUMBER RCORCHETE EQUALS num_cadena PUNTCOM .)
    RCURLYB         reduce using rule 61 (add_lista -> ID LCORCHETE NUMBER RCORCHETE EQUALS num_cadena PUNTCOM .)


state 196

    (81) add_mapa -> ID LCORCHETE num_cadena RCORCHETE EQUALS num_cadena PUNTCOM .

    VAR             reduce using rule 81 (add_mapa -> ID LCORCHETE num_cadena RCORCHETE EQUALS num_cadena PUNTCOM .)
    FOR             reduce using rule 81 (add_mapa -> ID LCORCHETE num_cadena RCORCHETE EQUALS num_cadena PUNTCOM .)
    WHILE           reduce using rule 81 (add_mapa -> ID LCORCHETE num_cadena RCORCHETE EQUALS num_cadena PUNTCOM .)
    IF              reduce using rule 81 (add_mapa -> ID LCORCHETE num_cadena RCORCHETE EQUALS num_cadena PUNTCOM .)
    ID              reduce using rule 81 (add_mapa -> ID LCORCHETE num_cadena RCORCHETE EQUALS num_cadena PUNTCOM .)
    PRINT           reduce using rule 81 (add_mapa -> ID LCORCHETE num_cadena RCORCHETE EQUALS num_cadena PUNTCOM .)
    VOID            reduce using rule 81 (add_mapa -> ID LCORCHETE num_cadena RCORCHETE EQUALS num_cadena PUNTCOM .)
    MAPA            reduce using rule 81 (add_mapa -> ID LCORCHETE num_cadena RCORCHETE EQUALS num_cadena PUNTCOM .)
    $end            reduce using rule 81 (add_mapa -> ID LCORCHETE num_cadena RCORCHETE EQUALS num_cadena PUNTCOM .)
    RCURLYB         reduce using rule 81 (add_mapa -> ID LCORCHETE num_cadena RCORCHETE EQUALS num_cadena PUNTCOM .)


state 197

    (62) add_lista -> ID PTO ADD LPAREN elementoAddLista RPAREN PUNTCOM .

    VAR             reduce using rule 62 (add_lista -> ID PTO ADD LPAREN elementoAddLista RPAREN PUNTCOM .)
    FOR             reduce using rule 62 (add_lista -> ID PTO ADD LPAREN elementoAddLista RPAREN PUNTCOM .)
    WHILE           reduce using rule 62 (add_lista -> ID PTO ADD LPAREN elementoAddLista RPAREN PUNTCOM .)
    IF              reduce using rule 62 (add_lista -> ID PTO ADD LPAREN elementoAddLista RPAREN PUNTCOM .)
    ID              reduce using rule 62 (add_lista -> ID PTO ADD LPAREN elementoAddLista RPAREN PUNTCOM .)
    PRINT           reduce using rule 62 (add_lista -> ID PTO ADD LPAREN elementoAddLista RPAREN PUNTCOM .)
    VOID            reduce using rule 62 (add_lista -> ID PTO ADD LPAREN elementoAddLista RPAREN PUNTCOM .)
    MAPA            reduce using rule 62 (add_lista -> ID PTO ADD LPAREN elementoAddLista RPAREN PUNTCOM .)
    $end            reduce using rule 62 (add_lista -> ID PTO ADD LPAREN elementoAddLista RPAREN PUNTCOM .)
    RCURLYB         reduce using rule 62 (add_lista -> ID PTO ADD LPAREN elementoAddLista RPAREN PUNTCOM .)


state 198

    (72) replace -> ID PTO REPLACE LPAREN NUMBER COMA NUMBER . COMA LCORCHETE NUMBER RCORCHETE RPAREN PUNTCOM

    COMA            shift and go to state 217


state 199

    (83) update_mapa -> ID PTO UPDATE LPAREN CADENA COMA LPAREN . VAR ID RPAREN EQUALS MAYORQUE CADENA COMA IFABSENT DOSPTO LPAREN RPAREN EQUALS MAYORQUE CADENA RPAREN PUNTCOM

    VAR             shift and go to state 218


state 200

    (82) add_mapa_putIfAbsent -> ID PTO PUT LPAREN num_cadena COMA LPAREN . RPAREN EQUALS MAYORQUE num_cadena RPAREN PUNTCOM

    RPAREN          shift and go to state 219


state 201

    (24) expresionFor -> FOR LPAREN forParameters RPAREN LCURLYB expresion RCURLYB .

    VAR             reduce using rule 24 (expresionFor -> FOR LPAREN forParameters RPAREN LCURLYB expresion RCURLYB .)
    FOR             reduce using rule 24 (expresionFor -> FOR LPAREN forParameters RPAREN LCURLYB expresion RCURLYB .)
    WHILE           reduce using rule 24 (expresionFor -> FOR LPAREN forParameters RPAREN LCURLYB expresion RCURLYB .)
    IF              reduce using rule 24 (expresionFor -> FOR LPAREN forParameters RPAREN LCURLYB expresion RCURLYB .)
    ID              reduce using rule 24 (expresionFor -> FOR LPAREN forParameters RPAREN LCURLYB expresion RCURLYB .)
    PRINT           reduce using rule 24 (expresionFor -> FOR LPAREN forParameters RPAREN LCURLYB expresion RCURLYB .)
    VOID            reduce using rule 24 (expresionFor -> FOR LPAREN forParameters RPAREN LCURLYB expresion RCURLYB .)
    MAPA            reduce using rule 24 (expresionFor -> FOR LPAREN forParameters RPAREN LCURLYB expresion RCURLYB .)
    $end            reduce using rule 24 (expresionFor -> FOR LPAREN forParameters RPAREN LCURLYB expresion RCURLYB .)
    RCURLYB         reduce using rule 24 (expresionFor -> FOR LPAREN forParameters RPAREN LCURLYB expresion RCURLYB .)


state 202

    (25) forParameters -> forIterator PUNTCOM forCondition PUNTCOM forAction .

    RPAREN          reduce using rule 25 (forParameters -> forIterator PUNTCOM forCondition PUNTCOM forAction .)


state 203

    (30) forAction -> ID . INCREMENTO
    (31) forAction -> ID . DECREMENTO

    INCREMENTO      shift and go to state 220
    DECREMENTO      shift and go to state 221


state 204

    (32) forAction -> INCREMENTO . ID

    ID              shift and go to state 222


state 205

    (33) forAction -> DECREMENTO . ID

    ID              shift and go to state 223


state 206

    (28) forCondition -> ID MAYORQUE NUMBER .

    PUNTCOM         reduce using rule 28 (forCondition -> ID MAYORQUE NUMBER .)


state 207

    (29) forCondition -> ID MENORQUE NUMBER .

    PUNTCOM         reduce using rule 29 (forCondition -> ID MENORQUE NUMBER .)


state 208

    (34) expresionWhile -> WHILE LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB .

    VAR             reduce using rule 34 (expresionWhile -> WHILE LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB .)
    FOR             reduce using rule 34 (expresionWhile -> WHILE LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB .)
    WHILE           reduce using rule 34 (expresionWhile -> WHILE LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB .)
    IF              reduce using rule 34 (expresionWhile -> WHILE LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB .)
    ID              reduce using rule 34 (expresionWhile -> WHILE LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB .)
    PRINT           reduce using rule 34 (expresionWhile -> WHILE LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB .)
    VOID            reduce using rule 34 (expresionWhile -> WHILE LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB .)
    MAPA            reduce using rule 34 (expresionWhile -> WHILE LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB .)
    $end            reduce using rule 34 (expresionWhile -> WHILE LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB .)
    RCURLYB         reduce using rule 34 (expresionWhile -> WHILE LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB .)


state 209

    (35) expresionIf -> IF LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB .

    VAR             reduce using rule 35 (expresionIf -> IF LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB .)
    FOR             reduce using rule 35 (expresionIf -> IF LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB .)
    WHILE           reduce using rule 35 (expresionIf -> IF LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB .)
    IF              reduce using rule 35 (expresionIf -> IF LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB .)
    ID              reduce using rule 35 (expresionIf -> IF LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB .)
    PRINT           reduce using rule 35 (expresionIf -> IF LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB .)
    VOID            reduce using rule 35 (expresionIf -> IF LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB .)
    MAPA            reduce using rule 35 (expresionIf -> IF LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB .)
    $end            reduce using rule 35 (expresionIf -> IF LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB .)
    RCURLYB         reduce using rule 35 (expresionIf -> IF LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB .)


state 210

    (100) final_key -> LCURLYB expresion . RCURLYB
    (14) expresion -> expresion . expresion
    (1) expresion -> . lista
    (2) expresion -> . mapa
    (3) expresion -> . variable
    (4) expresion -> . expresionFor
    (5) expresion -> . expresionWhile
    (6) expresion -> . expresionIf
    (7) expresion -> . f_subtring
    (8) expresion -> . accPosString
    (9) expresion -> . incremento
    (10) expresion -> . decremento
    (11) expresion -> . print
    (12) expresion -> . funcion
    (13) expresion -> . concatenar
    (14) expresion -> . expresion expresion
    (54) lista -> . expLista
    (55) lista -> . add_lista
    (56) lista -> . replace
    (73) mapa -> . expMapa
    (74) mapa -> . add_mapa
    (75) mapa -> . update_mapa
    (76) mapa -> . add_mapa_putIfAbsent
    (15) variable -> . VAR ID EQUALS expresionVar PUNTCOM
    (16) variable -> . VAR ID PUNTCOM
    (17) variable -> . VAR ID EQUALS expresionBool PUNTCOM
    (24) expresionFor -> . FOR LPAREN forParameters RPAREN LCURLYB expresion RCURLYB
    (34) expresionWhile -> . WHILE LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB
    (35) expresionIf -> . IF LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB
    (91) f_subtring -> . VAR ID EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN PUNTCOM
    (92) accPosString -> . VAR ID EQUALS ID LCORCHETE NUMBER RCORCHETE PUNTCOM
    (89) incremento -> . ID INCREMENTO PUNTCOM
    (90) decremento -> . ID DECREMENTO PUNTCOM
    (93) print -> . PRINT LPAREN printVal RPAREN PUNTCOM
    (97) funcion -> . VOID ID LPAREN parametroFuncion RPAREN final_key
    (101) concatenar -> . VAR ID EQUALS concatenarRecursivo PUNTCOM
    (57) expLista -> . VAR ID EQUALS NEW LISTA LPAREN inicializaLista RPAREN PUNTCOM
    (58) expLista -> . VAR ID EQUALS LCORCHETE elementosLista RCORCHETE PUNTCOM
    (61) add_lista -> . ID LCORCHETE NUMBER RCORCHETE EQUALS num_cadena PUNTCOM
    (62) add_lista -> . ID PTO ADD LPAREN elementoAddLista RPAREN PUNTCOM
    (72) replace -> . ID PTO REPLACE LPAREN NUMBER COMA NUMBER COMA LCORCHETE NUMBER RCORCHETE RPAREN PUNTCOM
    (77) expMapa -> . VAR ID EQUALS NEW MAPA LPAREN RPAREN PUNTCOM
    (78) expMapa -> . MAPA ID EQUALS LCURLYB elementosMapa RCURLYB PUNTCOM
    (81) add_mapa -> . ID LCORCHETE num_cadena RCORCHETE EQUALS num_cadena PUNTCOM
    (83) update_mapa -> . ID PTO UPDATE LPAREN CADENA COMA LPAREN VAR ID RPAREN EQUALS MAYORQUE CADENA COMA IFABSENT DOSPTO LPAREN RPAREN EQUALS MAYORQUE CADENA RPAREN PUNTCOM
    (82) add_mapa_putIfAbsent -> . ID PTO PUT LPAREN num_cadena COMA LPAREN RPAREN EQUALS MAYORQUE num_cadena RPAREN PUNTCOM

    RCURLYB         shift and go to state 224
    VAR             shift and go to state 22
    FOR             shift and go to state 24
    WHILE           shift and go to state 25
    IF              shift and go to state 26
    ID              shift and go to state 23
    PRINT           shift and go to state 27
    VOID            shift and go to state 28
    MAPA            shift and go to state 29

    expresion                      shift and go to state 30
    lista                          shift and go to state 2
    mapa                           shift and go to state 3
    variable                       shift and go to state 4
    expresionFor                   shift and go to state 5
    expresionWhile                 shift and go to state 6
    expresionIf                    shift and go to state 7
    f_subtring                     shift and go to state 8
    accPosString                   shift and go to state 9
    incremento                     shift and go to state 10
    decremento                     shift and go to state 11
    print                          shift and go to state 12
    funcion                        shift and go to state 13
    concatenar                     shift and go to state 14
    expLista                       shift and go to state 15
    add_lista                      shift and go to state 16
    replace                        shift and go to state 17
    expMapa                        shift and go to state 18
    add_mapa                       shift and go to state 19
    update_mapa                    shift and go to state 20
    add_mapa_putIfAbsent           shift and go to state 21

state 211

    (78) expMapa -> MAPA ID EQUALS LCURLYB elementosMapa RCURLYB PUNTCOM .

    VAR             reduce using rule 78 (expMapa -> MAPA ID EQUALS LCURLYB elementosMapa RCURLYB PUNTCOM .)
    FOR             reduce using rule 78 (expMapa -> MAPA ID EQUALS LCURLYB elementosMapa RCURLYB PUNTCOM .)
    WHILE           reduce using rule 78 (expMapa -> MAPA ID EQUALS LCURLYB elementosMapa RCURLYB PUNTCOM .)
    IF              reduce using rule 78 (expMapa -> MAPA ID EQUALS LCURLYB elementosMapa RCURLYB PUNTCOM .)
    ID              reduce using rule 78 (expMapa -> MAPA ID EQUALS LCURLYB elementosMapa RCURLYB PUNTCOM .)
    PRINT           reduce using rule 78 (expMapa -> MAPA ID EQUALS LCURLYB elementosMapa RCURLYB PUNTCOM .)
    VOID            reduce using rule 78 (expMapa -> MAPA ID EQUALS LCURLYB elementosMapa RCURLYB PUNTCOM .)
    MAPA            reduce using rule 78 (expMapa -> MAPA ID EQUALS LCURLYB elementosMapa RCURLYB PUNTCOM .)
    $end            reduce using rule 78 (expMapa -> MAPA ID EQUALS LCURLYB elementosMapa RCURLYB PUNTCOM .)
    RCURLYB         reduce using rule 78 (expMapa -> MAPA ID EQUALS LCURLYB elementosMapa RCURLYB PUNTCOM .)


state 212

    (79) elementosMapa -> num_cadena DOSPTO num_cadena .
    (80) elementosMapa -> num_cadena DOSPTO num_cadena . COMA elementosMapa

    RCURLYB         reduce using rule 79 (elementosMapa -> num_cadena DOSPTO num_cadena .)
    COMA            shift and go to state 225


state 213

    (91) f_subtring -> VAR ID EQUALS ID PTO SUBSTRING LPAREN NUMBER . COMA NUMBER RPAREN PUNTCOM

    COMA            shift and go to state 226


state 214

    (92) accPosString -> VAR ID EQUALS ID LCORCHETE NUMBER RCORCHETE PUNTCOM .

    VAR             reduce using rule 92 (accPosString -> VAR ID EQUALS ID LCORCHETE NUMBER RCORCHETE PUNTCOM .)
    FOR             reduce using rule 92 (accPosString -> VAR ID EQUALS ID LCORCHETE NUMBER RCORCHETE PUNTCOM .)
    WHILE           reduce using rule 92 (accPosString -> VAR ID EQUALS ID LCORCHETE NUMBER RCORCHETE PUNTCOM .)
    IF              reduce using rule 92 (accPosString -> VAR ID EQUALS ID LCORCHETE NUMBER RCORCHETE PUNTCOM .)
    ID              reduce using rule 92 (accPosString -> VAR ID EQUALS ID LCORCHETE NUMBER RCORCHETE PUNTCOM .)
    PRINT           reduce using rule 92 (accPosString -> VAR ID EQUALS ID LCORCHETE NUMBER RCORCHETE PUNTCOM .)
    VOID            reduce using rule 92 (accPosString -> VAR ID EQUALS ID LCORCHETE NUMBER RCORCHETE PUNTCOM .)
    MAPA            reduce using rule 92 (accPosString -> VAR ID EQUALS ID LCORCHETE NUMBER RCORCHETE PUNTCOM .)
    $end            reduce using rule 92 (accPosString -> VAR ID EQUALS ID LCORCHETE NUMBER RCORCHETE PUNTCOM .)
    RCURLYB         reduce using rule 92 (accPosString -> VAR ID EQUALS ID LCORCHETE NUMBER RCORCHETE PUNTCOM .)


state 215

    (57) expLista -> VAR ID EQUALS NEW LISTA LPAREN inicializaLista RPAREN . PUNTCOM

    PUNTCOM         shift and go to state 227


state 216

    (77) expMapa -> VAR ID EQUALS NEW MAPA LPAREN RPAREN PUNTCOM .

    VAR             reduce using rule 77 (expMapa -> VAR ID EQUALS NEW MAPA LPAREN RPAREN PUNTCOM .)
    FOR             reduce using rule 77 (expMapa -> VAR ID EQUALS NEW MAPA LPAREN RPAREN PUNTCOM .)
    WHILE           reduce using rule 77 (expMapa -> VAR ID EQUALS NEW MAPA LPAREN RPAREN PUNTCOM .)
    IF              reduce using rule 77 (expMapa -> VAR ID EQUALS NEW MAPA LPAREN RPAREN PUNTCOM .)
    ID              reduce using rule 77 (expMapa -> VAR ID EQUALS NEW MAPA LPAREN RPAREN PUNTCOM .)
    PRINT           reduce using rule 77 (expMapa -> VAR ID EQUALS NEW MAPA LPAREN RPAREN PUNTCOM .)
    VOID            reduce using rule 77 (expMapa -> VAR ID EQUALS NEW MAPA LPAREN RPAREN PUNTCOM .)
    MAPA            reduce using rule 77 (expMapa -> VAR ID EQUALS NEW MAPA LPAREN RPAREN PUNTCOM .)
    $end            reduce using rule 77 (expMapa -> VAR ID EQUALS NEW MAPA LPAREN RPAREN PUNTCOM .)
    RCURLYB         reduce using rule 77 (expMapa -> VAR ID EQUALS NEW MAPA LPAREN RPAREN PUNTCOM .)


state 217

    (72) replace -> ID PTO REPLACE LPAREN NUMBER COMA NUMBER COMA . LCORCHETE NUMBER RCORCHETE RPAREN PUNTCOM

    LCORCHETE       shift and go to state 228


state 218

    (83) update_mapa -> ID PTO UPDATE LPAREN CADENA COMA LPAREN VAR . ID RPAREN EQUALS MAYORQUE CADENA COMA IFABSENT DOSPTO LPAREN RPAREN EQUALS MAYORQUE CADENA RPAREN PUNTCOM

    ID              shift and go to state 229


state 219

    (82) add_mapa_putIfAbsent -> ID PTO PUT LPAREN num_cadena COMA LPAREN RPAREN . EQUALS MAYORQUE num_cadena RPAREN PUNTCOM

    EQUALS          shift and go to state 230


state 220

    (30) forAction -> ID INCREMENTO .

    RPAREN          reduce using rule 30 (forAction -> ID INCREMENTO .)


state 221

    (31) forAction -> ID DECREMENTO .

    RPAREN          reduce using rule 31 (forAction -> ID DECREMENTO .)


state 222

    (32) forAction -> INCREMENTO ID .

    RPAREN          reduce using rule 32 (forAction -> INCREMENTO ID .)


state 223

    (33) forAction -> DECREMENTO ID .

    RPAREN          reduce using rule 33 (forAction -> DECREMENTO ID .)


state 224

    (100) final_key -> LCURLYB expresion RCURLYB .

    VAR             reduce using rule 100 (final_key -> LCURLYB expresion RCURLYB .)
    FOR             reduce using rule 100 (final_key -> LCURLYB expresion RCURLYB .)
    WHILE           reduce using rule 100 (final_key -> LCURLYB expresion RCURLYB .)
    IF              reduce using rule 100 (final_key -> LCURLYB expresion RCURLYB .)
    ID              reduce using rule 100 (final_key -> LCURLYB expresion RCURLYB .)
    PRINT           reduce using rule 100 (final_key -> LCURLYB expresion RCURLYB .)
    VOID            reduce using rule 100 (final_key -> LCURLYB expresion RCURLYB .)
    MAPA            reduce using rule 100 (final_key -> LCURLYB expresion RCURLYB .)
    $end            reduce using rule 100 (final_key -> LCURLYB expresion RCURLYB .)
    RCURLYB         reduce using rule 100 (final_key -> LCURLYB expresion RCURLYB .)


state 225

    (80) elementosMapa -> num_cadena DOSPTO num_cadena COMA . elementosMapa
    (79) elementosMapa -> . num_cadena DOSPTO num_cadena
    (80) elementosMapa -> . num_cadena DOSPTO num_cadena COMA elementosMapa
    (65) num_cadena -> . NUMBER
    (66) num_cadena -> . CADENA

    NUMBER          shift and go to state 136
    CADENA          shift and go to state 48

    num_cadena                     shift and go to state 157
    elementosMapa                  shift and go to state 231

state 226

    (91) f_subtring -> VAR ID EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA . NUMBER RPAREN PUNTCOM

    NUMBER          shift and go to state 232


state 227

    (57) expLista -> VAR ID EQUALS NEW LISTA LPAREN inicializaLista RPAREN PUNTCOM .

    VAR             reduce using rule 57 (expLista -> VAR ID EQUALS NEW LISTA LPAREN inicializaLista RPAREN PUNTCOM .)
    FOR             reduce using rule 57 (expLista -> VAR ID EQUALS NEW LISTA LPAREN inicializaLista RPAREN PUNTCOM .)
    WHILE           reduce using rule 57 (expLista -> VAR ID EQUALS NEW LISTA LPAREN inicializaLista RPAREN PUNTCOM .)
    IF              reduce using rule 57 (expLista -> VAR ID EQUALS NEW LISTA LPAREN inicializaLista RPAREN PUNTCOM .)
    ID              reduce using rule 57 (expLista -> VAR ID EQUALS NEW LISTA LPAREN inicializaLista RPAREN PUNTCOM .)
    PRINT           reduce using rule 57 (expLista -> VAR ID EQUALS NEW LISTA LPAREN inicializaLista RPAREN PUNTCOM .)
    VOID            reduce using rule 57 (expLista -> VAR ID EQUALS NEW LISTA LPAREN inicializaLista RPAREN PUNTCOM .)
    MAPA            reduce using rule 57 (expLista -> VAR ID EQUALS NEW LISTA LPAREN inicializaLista RPAREN PUNTCOM .)
    $end            reduce using rule 57 (expLista -> VAR ID EQUALS NEW LISTA LPAREN inicializaLista RPAREN PUNTCOM .)
    RCURLYB         reduce using rule 57 (expLista -> VAR ID EQUALS NEW LISTA LPAREN inicializaLista RPAREN PUNTCOM .)


state 228

    (72) replace -> ID PTO REPLACE LPAREN NUMBER COMA NUMBER COMA LCORCHETE . NUMBER RCORCHETE RPAREN PUNTCOM

    NUMBER          shift and go to state 233


state 229

    (83) update_mapa -> ID PTO UPDATE LPAREN CADENA COMA LPAREN VAR ID . RPAREN EQUALS MAYORQUE CADENA COMA IFABSENT DOSPTO LPAREN RPAREN EQUALS MAYORQUE CADENA RPAREN PUNTCOM

    RPAREN          shift and go to state 234


state 230

    (82) add_mapa_putIfAbsent -> ID PTO PUT LPAREN num_cadena COMA LPAREN RPAREN EQUALS . MAYORQUE num_cadena RPAREN PUNTCOM

    MAYORQUE        shift and go to state 235


state 231

    (80) elementosMapa -> num_cadena DOSPTO num_cadena COMA elementosMapa .

    RCURLYB         reduce using rule 80 (elementosMapa -> num_cadena DOSPTO num_cadena COMA elementosMapa .)


state 232

    (91) f_subtring -> VAR ID EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER . RPAREN PUNTCOM

    RPAREN          shift and go to state 236


state 233

    (72) replace -> ID PTO REPLACE LPAREN NUMBER COMA NUMBER COMA LCORCHETE NUMBER . RCORCHETE RPAREN PUNTCOM

    RCORCHETE       shift and go to state 237


state 234

    (83) update_mapa -> ID PTO UPDATE LPAREN CADENA COMA LPAREN VAR ID RPAREN . EQUALS MAYORQUE CADENA COMA IFABSENT DOSPTO LPAREN RPAREN EQUALS MAYORQUE CADENA RPAREN PUNTCOM

    EQUALS          shift and go to state 238


state 235

    (82) add_mapa_putIfAbsent -> ID PTO PUT LPAREN num_cadena COMA LPAREN RPAREN EQUALS MAYORQUE . num_cadena RPAREN PUNTCOM
    (65) num_cadena -> . NUMBER
    (66) num_cadena -> . CADENA

    NUMBER          shift and go to state 136
    CADENA          shift and go to state 48

    num_cadena                     shift and go to state 239

state 236

    (91) f_subtring -> VAR ID EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN . PUNTCOM

    PUNTCOM         shift and go to state 240


state 237

    (72) replace -> ID PTO REPLACE LPAREN NUMBER COMA NUMBER COMA LCORCHETE NUMBER RCORCHETE . RPAREN PUNTCOM

    RPAREN          shift and go to state 241


state 238

    (83) update_mapa -> ID PTO UPDATE LPAREN CADENA COMA LPAREN VAR ID RPAREN EQUALS . MAYORQUE CADENA COMA IFABSENT DOSPTO LPAREN RPAREN EQUALS MAYORQUE CADENA RPAREN PUNTCOM

    MAYORQUE        shift and go to state 242


state 239

    (82) add_mapa_putIfAbsent -> ID PTO PUT LPAREN num_cadena COMA LPAREN RPAREN EQUALS MAYORQUE num_cadena . RPAREN PUNTCOM

    RPAREN          shift and go to state 243


state 240

    (91) f_subtring -> VAR ID EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN PUNTCOM .

    VAR             reduce using rule 91 (f_subtring -> VAR ID EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN PUNTCOM .)
    FOR             reduce using rule 91 (f_subtring -> VAR ID EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN PUNTCOM .)
    WHILE           reduce using rule 91 (f_subtring -> VAR ID EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN PUNTCOM .)
    IF              reduce using rule 91 (f_subtring -> VAR ID EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN PUNTCOM .)
    ID              reduce using rule 91 (f_subtring -> VAR ID EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN PUNTCOM .)
    PRINT           reduce using rule 91 (f_subtring -> VAR ID EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN PUNTCOM .)
    VOID            reduce using rule 91 (f_subtring -> VAR ID EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN PUNTCOM .)
    MAPA            reduce using rule 91 (f_subtring -> VAR ID EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN PUNTCOM .)
    $end            reduce using rule 91 (f_subtring -> VAR ID EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN PUNTCOM .)
    RCURLYB         reduce using rule 91 (f_subtring -> VAR ID EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN PUNTCOM .)


state 241

    (72) replace -> ID PTO REPLACE LPAREN NUMBER COMA NUMBER COMA LCORCHETE NUMBER RCORCHETE RPAREN . PUNTCOM

    PUNTCOM         shift and go to state 244


state 242

    (83) update_mapa -> ID PTO UPDATE LPAREN CADENA COMA LPAREN VAR ID RPAREN EQUALS MAYORQUE . CADENA COMA IFABSENT DOSPTO LPAREN RPAREN EQUALS MAYORQUE CADENA RPAREN PUNTCOM

    CADENA          shift and go to state 245


state 243

    (82) add_mapa_putIfAbsent -> ID PTO PUT LPAREN num_cadena COMA LPAREN RPAREN EQUALS MAYORQUE num_cadena RPAREN . PUNTCOM

    PUNTCOM         shift and go to state 246


state 244

    (72) replace -> ID PTO REPLACE LPAREN NUMBER COMA NUMBER COMA LCORCHETE NUMBER RCORCHETE RPAREN PUNTCOM .

    VAR             reduce using rule 72 (replace -> ID PTO REPLACE LPAREN NUMBER COMA NUMBER COMA LCORCHETE NUMBER RCORCHETE RPAREN PUNTCOM .)
    FOR             reduce using rule 72 (replace -> ID PTO REPLACE LPAREN NUMBER COMA NUMBER COMA LCORCHETE NUMBER RCORCHETE RPAREN PUNTCOM .)
    WHILE           reduce using rule 72 (replace -> ID PTO REPLACE LPAREN NUMBER COMA NUMBER COMA LCORCHETE NUMBER RCORCHETE RPAREN PUNTCOM .)
    IF              reduce using rule 72 (replace -> ID PTO REPLACE LPAREN NUMBER COMA NUMBER COMA LCORCHETE NUMBER RCORCHETE RPAREN PUNTCOM .)
    ID              reduce using rule 72 (replace -> ID PTO REPLACE LPAREN NUMBER COMA NUMBER COMA LCORCHETE NUMBER RCORCHETE RPAREN PUNTCOM .)
    PRINT           reduce using rule 72 (replace -> ID PTO REPLACE LPAREN NUMBER COMA NUMBER COMA LCORCHETE NUMBER RCORCHETE RPAREN PUNTCOM .)
    VOID            reduce using rule 72 (replace -> ID PTO REPLACE LPAREN NUMBER COMA NUMBER COMA LCORCHETE NUMBER RCORCHETE RPAREN PUNTCOM .)
    MAPA            reduce using rule 72 (replace -> ID PTO REPLACE LPAREN NUMBER COMA NUMBER COMA LCORCHETE NUMBER RCORCHETE RPAREN PUNTCOM .)
    $end            reduce using rule 72 (replace -> ID PTO REPLACE LPAREN NUMBER COMA NUMBER COMA LCORCHETE NUMBER RCORCHETE RPAREN PUNTCOM .)
    RCURLYB         reduce using rule 72 (replace -> ID PTO REPLACE LPAREN NUMBER COMA NUMBER COMA LCORCHETE NUMBER RCORCHETE RPAREN PUNTCOM .)


state 245

    (83) update_mapa -> ID PTO UPDATE LPAREN CADENA COMA LPAREN VAR ID RPAREN EQUALS MAYORQUE CADENA . COMA IFABSENT DOSPTO LPAREN RPAREN EQUALS MAYORQUE CADENA RPAREN PUNTCOM

    COMA            shift and go to state 247


state 246

    (82) add_mapa_putIfAbsent -> ID PTO PUT LPAREN num_cadena COMA LPAREN RPAREN EQUALS MAYORQUE num_cadena RPAREN PUNTCOM .

    VAR             reduce using rule 82 (add_mapa_putIfAbsent -> ID PTO PUT LPAREN num_cadena COMA LPAREN RPAREN EQUALS MAYORQUE num_cadena RPAREN PUNTCOM .)
    FOR             reduce using rule 82 (add_mapa_putIfAbsent -> ID PTO PUT LPAREN num_cadena COMA LPAREN RPAREN EQUALS MAYORQUE num_cadena RPAREN PUNTCOM .)
    WHILE           reduce using rule 82 (add_mapa_putIfAbsent -> ID PTO PUT LPAREN num_cadena COMA LPAREN RPAREN EQUALS MAYORQUE num_cadena RPAREN PUNTCOM .)
    IF              reduce using rule 82 (add_mapa_putIfAbsent -> ID PTO PUT LPAREN num_cadena COMA LPAREN RPAREN EQUALS MAYORQUE num_cadena RPAREN PUNTCOM .)
    ID              reduce using rule 82 (add_mapa_putIfAbsent -> ID PTO PUT LPAREN num_cadena COMA LPAREN RPAREN EQUALS MAYORQUE num_cadena RPAREN PUNTCOM .)
    PRINT           reduce using rule 82 (add_mapa_putIfAbsent -> ID PTO PUT LPAREN num_cadena COMA LPAREN RPAREN EQUALS MAYORQUE num_cadena RPAREN PUNTCOM .)
    VOID            reduce using rule 82 (add_mapa_putIfAbsent -> ID PTO PUT LPAREN num_cadena COMA LPAREN RPAREN EQUALS MAYORQUE num_cadena RPAREN PUNTCOM .)
    MAPA            reduce using rule 82 (add_mapa_putIfAbsent -> ID PTO PUT LPAREN num_cadena COMA LPAREN RPAREN EQUALS MAYORQUE num_cadena RPAREN PUNTCOM .)
    $end            reduce using rule 82 (add_mapa_putIfAbsent -> ID PTO PUT LPAREN num_cadena COMA LPAREN RPAREN EQUALS MAYORQUE num_cadena RPAREN PUNTCOM .)
    RCURLYB         reduce using rule 82 (add_mapa_putIfAbsent -> ID PTO PUT LPAREN num_cadena COMA LPAREN RPAREN EQUALS MAYORQUE num_cadena RPAREN PUNTCOM .)


state 247

    (83) update_mapa -> ID PTO UPDATE LPAREN CADENA COMA LPAREN VAR ID RPAREN EQUALS MAYORQUE CADENA COMA . IFABSENT DOSPTO LPAREN RPAREN EQUALS MAYORQUE CADENA RPAREN PUNTCOM

    IFABSENT        shift and go to state 248


state 248

    (83) update_mapa -> ID PTO UPDATE LPAREN CADENA COMA LPAREN VAR ID RPAREN EQUALS MAYORQUE CADENA COMA IFABSENT . DOSPTO LPAREN RPAREN EQUALS MAYORQUE CADENA RPAREN PUNTCOM

    DOSPTO          shift and go to state 249


state 249

    (83) update_mapa -> ID PTO UPDATE LPAREN CADENA COMA LPAREN VAR ID RPAREN EQUALS MAYORQUE CADENA COMA IFABSENT DOSPTO . LPAREN RPAREN EQUALS MAYORQUE CADENA RPAREN PUNTCOM

    LPAREN          shift and go to state 250


state 250

    (83) update_mapa -> ID PTO UPDATE LPAREN CADENA COMA LPAREN VAR ID RPAREN EQUALS MAYORQUE CADENA COMA IFABSENT DOSPTO LPAREN . RPAREN EQUALS MAYORQUE CADENA RPAREN PUNTCOM

    RPAREN          shift and go to state 251


state 251

    (83) update_mapa -> ID PTO UPDATE LPAREN CADENA COMA LPAREN VAR ID RPAREN EQUALS MAYORQUE CADENA COMA IFABSENT DOSPTO LPAREN RPAREN . EQUALS MAYORQUE CADENA RPAREN PUNTCOM

    EQUALS          shift and go to state 252


state 252

    (83) update_mapa -> ID PTO UPDATE LPAREN CADENA COMA LPAREN VAR ID RPAREN EQUALS MAYORQUE CADENA COMA IFABSENT DOSPTO LPAREN RPAREN EQUALS . MAYORQUE CADENA RPAREN PUNTCOM

    MAYORQUE        shift and go to state 253


state 253

    (83) update_mapa -> ID PTO UPDATE LPAREN CADENA COMA LPAREN VAR ID RPAREN EQUALS MAYORQUE CADENA COMA IFABSENT DOSPTO LPAREN RPAREN EQUALS MAYORQUE . CADENA RPAREN PUNTCOM

    CADENA          shift and go to state 254


state 254

    (83) update_mapa -> ID PTO UPDATE LPAREN CADENA COMA LPAREN VAR ID RPAREN EQUALS MAYORQUE CADENA COMA IFABSENT DOSPTO LPAREN RPAREN EQUALS MAYORQUE CADENA . RPAREN PUNTCOM

    RPAREN          shift and go to state 255


state 255

    (83) update_mapa -> ID PTO UPDATE LPAREN CADENA COMA LPAREN VAR ID RPAREN EQUALS MAYORQUE CADENA COMA IFABSENT DOSPTO LPAREN RPAREN EQUALS MAYORQUE CADENA RPAREN . PUNTCOM

    PUNTCOM         shift and go to state 256


state 256

    (83) update_mapa -> ID PTO UPDATE LPAREN CADENA COMA LPAREN VAR ID RPAREN EQUALS MAYORQUE CADENA COMA IFABSENT DOSPTO LPAREN RPAREN EQUALS MAYORQUE CADENA RPAREN PUNTCOM .

    VAR             reduce using rule 83 (update_mapa -> ID PTO UPDATE LPAREN CADENA COMA LPAREN VAR ID RPAREN EQUALS MAYORQUE CADENA COMA IFABSENT DOSPTO LPAREN RPAREN EQUALS MAYORQUE CADENA RPAREN PUNTCOM .)
    FOR             reduce using rule 83 (update_mapa -> ID PTO UPDATE LPAREN CADENA COMA LPAREN VAR ID RPAREN EQUALS MAYORQUE CADENA COMA IFABSENT DOSPTO LPAREN RPAREN EQUALS MAYORQUE CADENA RPAREN PUNTCOM .)
    WHILE           reduce using rule 83 (update_mapa -> ID PTO UPDATE LPAREN CADENA COMA LPAREN VAR ID RPAREN EQUALS MAYORQUE CADENA COMA IFABSENT DOSPTO LPAREN RPAREN EQUALS MAYORQUE CADENA RPAREN PUNTCOM .)
    IF              reduce using rule 83 (update_mapa -> ID PTO UPDATE LPAREN CADENA COMA LPAREN VAR ID RPAREN EQUALS MAYORQUE CADENA COMA IFABSENT DOSPTO LPAREN RPAREN EQUALS MAYORQUE CADENA RPAREN PUNTCOM .)
    ID              reduce using rule 83 (update_mapa -> ID PTO UPDATE LPAREN CADENA COMA LPAREN VAR ID RPAREN EQUALS MAYORQUE CADENA COMA IFABSENT DOSPTO LPAREN RPAREN EQUALS MAYORQUE CADENA RPAREN PUNTCOM .)
    PRINT           reduce using rule 83 (update_mapa -> ID PTO UPDATE LPAREN CADENA COMA LPAREN VAR ID RPAREN EQUALS MAYORQUE CADENA COMA IFABSENT DOSPTO LPAREN RPAREN EQUALS MAYORQUE CADENA RPAREN PUNTCOM .)
    VOID            reduce using rule 83 (update_mapa -> ID PTO UPDATE LPAREN CADENA COMA LPAREN VAR ID RPAREN EQUALS MAYORQUE CADENA COMA IFABSENT DOSPTO LPAREN RPAREN EQUALS MAYORQUE CADENA RPAREN PUNTCOM .)
    MAPA            reduce using rule 83 (update_mapa -> ID PTO UPDATE LPAREN CADENA COMA LPAREN VAR ID RPAREN EQUALS MAYORQUE CADENA COMA IFABSENT DOSPTO LPAREN RPAREN EQUALS MAYORQUE CADENA RPAREN PUNTCOM .)
    $end            reduce using rule 83 (update_mapa -> ID PTO UPDATE LPAREN CADENA COMA LPAREN VAR ID RPAREN EQUALS MAYORQUE CADENA COMA IFABSENT DOSPTO LPAREN RPAREN EQUALS MAYORQUE CADENA RPAREN PUNTCOM .)
    RCURLYB         reduce using rule 83 (update_mapa -> ID PTO UPDATE LPAREN CADENA COMA LPAREN VAR ID RPAREN EQUALS MAYORQUE CADENA COMA IFABSENT DOSPTO LPAREN RPAREN EQUALS MAYORQUE CADENA RPAREN PUNTCOM .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for VAR in state 30 resolved as shift
WARNING: shift/reduce conflict for FOR in state 30 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 30 resolved as shift
WARNING: shift/reduce conflict for IF in state 30 resolved as shift
WARNING: shift/reduce conflict for ID in state 30 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 30 resolved as shift
WARNING: shift/reduce conflict for VOID in state 30 resolved as shift
WARNING: shift/reduce conflict for MAPA in state 30 resolved as shift
WARNING: shift/reduce conflict for RCORCHETE in state 46 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 82 resolved as shift
WARNING: shift/reduce conflict for ID in state 96 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 96 resolved as shift
WARNING: shift/reduce conflict for NOT in state 96 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 96 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 96 resolved as shift
WARNING: shift/reduce conflict for EQUIVAL in state 146 resolved as shift
WARNING: shift/reduce conflict for MAYORQUE in state 146 resolved as shift
WARNING: shift/reduce conflict for MENORQUE in state 146 resolved as shift
WARNING: shift/reduce conflict for MINEQ in state 146 resolved as shift
WARNING: shift/reduce conflict for MAYEQ in state 146 resolved as shift
WARNING: shift/reduce conflict for NOEQUIVAL in state 146 resolved as shift
WARNING: shift/reduce conflict for AND in state 146 resolved as shift
WARNING: shift/reduce conflict for OR in state 146 resolved as shift
WARNING: shift/reduce conflict for EQUIVAL in state 147 resolved as shift
WARNING: shift/reduce conflict for MAYORQUE in state 147 resolved as shift
WARNING: shift/reduce conflict for MENORQUE in state 147 resolved as shift
WARNING: shift/reduce conflict for MINEQ in state 147 resolved as shift
WARNING: shift/reduce conflict for MAYEQ in state 147 resolved as shift
WARNING: shift/reduce conflict for NOEQUIVAL in state 147 resolved as shift
WARNING: shift/reduce conflict for AND in state 147 resolved as shift
WARNING: shift/reduce conflict for OR in state 147 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 160 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 160 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 160 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 160 resolved as shift
WARNING: shift/reduce conflict for DIVIDE_E in state 160 resolved as shift
