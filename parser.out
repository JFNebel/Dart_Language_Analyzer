Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    COMIILLATS
    COMILLAD
    COMILLAS
    COMILLATD
    NOT
    OR
    PRINT
    PUT
    UPDATE
    VARDOUBLE
    WHILE

Grammar

Rule 0     S' -> expresion
Rule 1     expresion -> lista
Rule 2     expresion -> mapa
Rule 3     expresion -> variable
Rule 4     expresion -> expresionFor
Rule 5     expresion -> concatenacion
Rule 6     expresion -> incremento
Rule 7     expresion -> decremento
Rule 8     variable -> VAR ID EQUALS expresionVar PUNTCOM
Rule 9     variable -> VAR ID PUNTCOM
Rule 10    variable -> expresionBool
Rule 11    valorVar -> NUMBER
Rule 12    valorVar -> DOUBLE
Rule 13    valorVar -> CADENA
Rule 14    expresionVar -> valorVar
Rule 15    expresionVar -> ID
Rule 16    expresionVar -> expresionVar operadorA expresionVar
Rule 17    expresionFor -> FOR LPAREN forParameters
Rule 18    forParameters -> forIterator PUNTCOM forCondition PUNTCOM forAction
Rule 19    forIterator -> INT ID EQUALS NUMBER
Rule 20    forIterator -> ID EQUALS NUMBER
Rule 21    forCondition -> ID MAYORQUE NUMBER
Rule 22    forCondition -> ID MENORQUE NUMBER
Rule 23    forAction -> ID INCREMENTO
Rule 24    forAction -> ID DECREMENTO
Rule 25    forAction -> INCREMENTO ID
Rule 26    forAction -> DECREMENTO ID
Rule 27    expresionBool -> VARBOOL ID EQUALS booleano pto_coma
Rule 28    expresionBool -> VAR ID EQUALS booleano pto_coma
Rule 29    booleano -> TRUE
Rule 30    booleano -> FALSE
Rule 31    lista -> expLista
Rule 32    lista -> add_lista
Rule 33    expLista -> VAR ID EQUALS NEW LISTA LPAREN NUMBER RPAREN pto_coma
Rule 34    expLista -> VAR ID EQUALS NEW LISTA LPAREN RPAREN pto_coma
Rule 35    expLista -> VAR ID EQUALS LCORCHETE elementosLista RCORCHETE pto_coma
Rule 36    add_lista -> ID LCORCHETE NUMBER RCORCHETE EQUALS num_cadena pto_coma
Rule 37    add_lista -> ID PTO ADD LPAREN num_cadena RPAREN pto_coma
Rule 38    num_cadena -> NUMBER
Rule 39    num_cadena -> CADENA
Rule 40    elementosLista -> CADENA
Rule 41    elementosLista -> NUMBER
Rule 42    elementosLista -> CADENA COMA elementosLista
Rule 43    elementosLista -> NUMBER COMA elementosLista
Rule 44    elementosLista -> <empty>
Rule 45    mapa -> expMapa
Rule 46    mapa -> add_mapa
Rule 47    expMapa -> VAR ID EQUALS NEW MAPA LPAREN RPAREN pto_coma
Rule 48    expMapa -> MAPA ID EQUALS LCURLYB elementosMapa RCURLYB pto_coma
Rule 49    elementosMapa -> num_cadena DOSPTO num_cadena
Rule 50    elementosMapa -> num_cadena DOSPTO num_cadena COMA elementosMapa
Rule 51    add_mapa -> ID LCORCHETE CADENA RCORCHETE EQUALS CADENA pto_coma
Rule 52    operadorA -> PLUS
Rule 53    operadorA -> MINUS
Rule 54    operadorA -> TIMES
Rule 55    operadorA -> DIVIDE
Rule 56    operadorA -> DIVIDE_E
Rule 57    incremento -> ID INCREMENTO pto_coma
Rule 58    decremento -> ID DECREMENTO pto_coma
Rule 59    concatenacion -> VAR ID EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN pto_coma
Rule 60    pto_coma -> PUNTCOM

Terminals, with rules where they appear

ADD                  : 37
AND                  : 
CADENA               : 13 39 40 42 51 51
COMA                 : 42 43 50 59
COMIILLATS           : 
COMILLAD             : 
COMILLAS             : 
COMILLATD            : 
DECREMENTO           : 24 26 58
DIVIDE               : 55
DIVIDE_E             : 56
DOSPTO               : 49 50
DOUBLE               : 12
EQUALS               : 8 19 20 27 28 33 34 35 36 47 48 51 59
FALSE                : 30
FOR                  : 17
ID                   : 8 9 15 19 20 21 22 23 24 25 26 27 28 33 34 35 36 37 47 48 51 57 58 59 59
INCREMENTO           : 23 25 57
INT                  : 19
LCORCHETE            : 35 36 51
LCURLYB              : 48
LISTA                : 33 34
LPAREN               : 17 33 34 37 47 59
MAPA                 : 47 48
MAYORQUE             : 21
MENORQUE             : 22
MINUS                : 53
NEW                  : 33 34 47
NOT                  : 
NUMBER               : 11 19 20 21 22 33 36 38 41 43 59 59
OR                   : 
PLUS                 : 52
PRINT                : 
PTO                  : 37 59
PUNTCOM              : 8 9 18 18 60
PUT                  : 
RCORCHETE            : 35 36 51
RCURLYB              : 48
RPAREN               : 33 34 37 47 59
SUBSTRING            : 59
TIMES                : 54
TRUE                 : 29
UPDATE               : 
VAR                  : 8 9 28 33 34 35 47 59
VARBOOL              : 27
VARDOUBLE            : 
WHILE                : 
error                : 

Nonterminals, with rules where they appear

add_lista            : 32
add_mapa             : 46
booleano             : 27 28
concatenacion        : 5
decremento           : 7
elementosLista       : 35 42 43
elementosMapa        : 48 50
expLista             : 31
expMapa              : 45
expresion            : 0
expresionBool        : 10
expresionFor         : 4
expresionVar         : 8 16 16
forAction            : 18
forCondition         : 18
forIterator          : 18
forParameters        : 17
incremento           : 6
lista                : 1
mapa                 : 2
num_cadena           : 36 37 49 49 50 50
operadorA            : 16
pto_coma             : 27 28 33 34 35 36 37 47 48 51 57 58 59
valorVar             : 14
variable             : 3

Parsing method: LALR

state 0

    (0) S' -> . expresion
    (1) expresion -> . lista
    (2) expresion -> . mapa
    (3) expresion -> . variable
    (4) expresion -> . expresionFor
    (5) expresion -> . concatenacion
    (6) expresion -> . incremento
    (7) expresion -> . decremento
    (31) lista -> . expLista
    (32) lista -> . add_lista
    (45) mapa -> . expMapa
    (46) mapa -> . add_mapa
    (8) variable -> . VAR ID EQUALS expresionVar PUNTCOM
    (9) variable -> . VAR ID PUNTCOM
    (10) variable -> . expresionBool
    (17) expresionFor -> . FOR LPAREN forParameters
    (59) concatenacion -> . VAR ID EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN pto_coma
    (57) incremento -> . ID INCREMENTO pto_coma
    (58) decremento -> . ID DECREMENTO pto_coma
    (33) expLista -> . VAR ID EQUALS NEW LISTA LPAREN NUMBER RPAREN pto_coma
    (34) expLista -> . VAR ID EQUALS NEW LISTA LPAREN RPAREN pto_coma
    (35) expLista -> . VAR ID EQUALS LCORCHETE elementosLista RCORCHETE pto_coma
    (36) add_lista -> . ID LCORCHETE NUMBER RCORCHETE EQUALS num_cadena pto_coma
    (37) add_lista -> . ID PTO ADD LPAREN num_cadena RPAREN pto_coma
    (47) expMapa -> . VAR ID EQUALS NEW MAPA LPAREN RPAREN pto_coma
    (48) expMapa -> . MAPA ID EQUALS LCURLYB elementosMapa RCURLYB pto_coma
    (51) add_mapa -> . ID LCORCHETE CADENA RCORCHETE EQUALS CADENA pto_coma
    (27) expresionBool -> . VARBOOL ID EQUALS booleano pto_coma
    (28) expresionBool -> . VAR ID EQUALS booleano pto_coma

    VAR             shift and go to state 13
    FOR             shift and go to state 16
    ID              shift and go to state 14
    MAPA            shift and go to state 17
    VARBOOL         shift and go to state 18

    expresion                      shift and go to state 1
    lista                          shift and go to state 2
    mapa                           shift and go to state 3
    variable                       shift and go to state 4
    expresionFor                   shift and go to state 5
    concatenacion                  shift and go to state 6
    incremento                     shift and go to state 7
    decremento                     shift and go to state 8
    expLista                       shift and go to state 9
    add_lista                      shift and go to state 10
    expMapa                        shift and go to state 11
    add_mapa                       shift and go to state 12
    expresionBool                  shift and go to state 15

state 1

    (0) S' -> expresion .



state 2

    (1) expresion -> lista .

    $end            reduce using rule 1 (expresion -> lista .)


state 3

    (2) expresion -> mapa .

    $end            reduce using rule 2 (expresion -> mapa .)


state 4

    (3) expresion -> variable .

    $end            reduce using rule 3 (expresion -> variable .)


state 5

    (4) expresion -> expresionFor .

    $end            reduce using rule 4 (expresion -> expresionFor .)


state 6

    (5) expresion -> concatenacion .

    $end            reduce using rule 5 (expresion -> concatenacion .)


state 7

    (6) expresion -> incremento .

    $end            reduce using rule 6 (expresion -> incremento .)


state 8

    (7) expresion -> decremento .

    $end            reduce using rule 7 (expresion -> decremento .)


state 9

    (31) lista -> expLista .

    $end            reduce using rule 31 (lista -> expLista .)


state 10

    (32) lista -> add_lista .

    $end            reduce using rule 32 (lista -> add_lista .)


state 11

    (45) mapa -> expMapa .

    $end            reduce using rule 45 (mapa -> expMapa .)


state 12

    (46) mapa -> add_mapa .

    $end            reduce using rule 46 (mapa -> add_mapa .)


state 13

    (8) variable -> VAR . ID EQUALS expresionVar PUNTCOM
    (9) variable -> VAR . ID PUNTCOM
    (59) concatenacion -> VAR . ID EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN pto_coma
    (33) expLista -> VAR . ID EQUALS NEW LISTA LPAREN NUMBER RPAREN pto_coma
    (34) expLista -> VAR . ID EQUALS NEW LISTA LPAREN RPAREN pto_coma
    (35) expLista -> VAR . ID EQUALS LCORCHETE elementosLista RCORCHETE pto_coma
    (47) expMapa -> VAR . ID EQUALS NEW MAPA LPAREN RPAREN pto_coma
    (28) expresionBool -> VAR . ID EQUALS booleano pto_coma

    ID              shift and go to state 19


state 14

    (57) incremento -> ID . INCREMENTO pto_coma
    (58) decremento -> ID . DECREMENTO pto_coma
    (36) add_lista -> ID . LCORCHETE NUMBER RCORCHETE EQUALS num_cadena pto_coma
    (37) add_lista -> ID . PTO ADD LPAREN num_cadena RPAREN pto_coma
    (51) add_mapa -> ID . LCORCHETE CADENA RCORCHETE EQUALS CADENA pto_coma

    INCREMENTO      shift and go to state 20
    DECREMENTO      shift and go to state 21
    LCORCHETE       shift and go to state 22
    PTO             shift and go to state 23


state 15

    (10) variable -> expresionBool .

    $end            reduce using rule 10 (variable -> expresionBool .)


state 16

    (17) expresionFor -> FOR . LPAREN forParameters

    LPAREN          shift and go to state 24


state 17

    (48) expMapa -> MAPA . ID EQUALS LCURLYB elementosMapa RCURLYB pto_coma

    ID              shift and go to state 25


state 18

    (27) expresionBool -> VARBOOL . ID EQUALS booleano pto_coma

    ID              shift and go to state 26


state 19

    (8) variable -> VAR ID . EQUALS expresionVar PUNTCOM
    (9) variable -> VAR ID . PUNTCOM
    (59) concatenacion -> VAR ID . EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN pto_coma
    (33) expLista -> VAR ID . EQUALS NEW LISTA LPAREN NUMBER RPAREN pto_coma
    (34) expLista -> VAR ID . EQUALS NEW LISTA LPAREN RPAREN pto_coma
    (35) expLista -> VAR ID . EQUALS LCORCHETE elementosLista RCORCHETE pto_coma
    (47) expMapa -> VAR ID . EQUALS NEW MAPA LPAREN RPAREN pto_coma
    (28) expresionBool -> VAR ID . EQUALS booleano pto_coma

    EQUALS          shift and go to state 27
    PUNTCOM         shift and go to state 28


state 20

    (57) incremento -> ID INCREMENTO . pto_coma
    (60) pto_coma -> . PUNTCOM

    PUNTCOM         shift and go to state 30

    pto_coma                       shift and go to state 29

state 21

    (58) decremento -> ID DECREMENTO . pto_coma
    (60) pto_coma -> . PUNTCOM

    PUNTCOM         shift and go to state 30

    pto_coma                       shift and go to state 31

state 22

    (36) add_lista -> ID LCORCHETE . NUMBER RCORCHETE EQUALS num_cadena pto_coma
    (51) add_mapa -> ID LCORCHETE . CADENA RCORCHETE EQUALS CADENA pto_coma

    NUMBER          shift and go to state 32
    CADENA          shift and go to state 33


state 23

    (37) add_lista -> ID PTO . ADD LPAREN num_cadena RPAREN pto_coma

    ADD             shift and go to state 34


state 24

    (17) expresionFor -> FOR LPAREN . forParameters
    (18) forParameters -> . forIterator PUNTCOM forCondition PUNTCOM forAction
    (19) forIterator -> . INT ID EQUALS NUMBER
    (20) forIterator -> . ID EQUALS NUMBER

    INT             shift and go to state 37
    ID              shift and go to state 38

    forParameters                  shift and go to state 35
    forIterator                    shift and go to state 36

state 25

    (48) expMapa -> MAPA ID . EQUALS LCURLYB elementosMapa RCURLYB pto_coma

    EQUALS          shift and go to state 39


state 26

    (27) expresionBool -> VARBOOL ID . EQUALS booleano pto_coma

    EQUALS          shift and go to state 40


state 27

    (8) variable -> VAR ID EQUALS . expresionVar PUNTCOM
    (59) concatenacion -> VAR ID EQUALS . ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN pto_coma
    (33) expLista -> VAR ID EQUALS . NEW LISTA LPAREN NUMBER RPAREN pto_coma
    (34) expLista -> VAR ID EQUALS . NEW LISTA LPAREN RPAREN pto_coma
    (35) expLista -> VAR ID EQUALS . LCORCHETE elementosLista RCORCHETE pto_coma
    (47) expMapa -> VAR ID EQUALS . NEW MAPA LPAREN RPAREN pto_coma
    (28) expresionBool -> VAR ID EQUALS . booleano pto_coma
    (14) expresionVar -> . valorVar
    (15) expresionVar -> . ID
    (16) expresionVar -> . expresionVar operadorA expresionVar
    (29) booleano -> . TRUE
    (30) booleano -> . FALSE
    (11) valorVar -> . NUMBER
    (12) valorVar -> . DOUBLE
    (13) valorVar -> . CADENA

    ID              shift and go to state 41
    NEW             shift and go to state 44
    LCORCHETE       shift and go to state 45
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    NUMBER          shift and go to state 43
    DOUBLE          shift and go to state 50
    CADENA          shift and go to state 51

    expresionVar                   shift and go to state 42
    booleano                       shift and go to state 46
    valorVar                       shift and go to state 47

state 28

    (9) variable -> VAR ID PUNTCOM .

    $end            reduce using rule 9 (variable -> VAR ID PUNTCOM .)


state 29

    (57) incremento -> ID INCREMENTO pto_coma .

    $end            reduce using rule 57 (incremento -> ID INCREMENTO pto_coma .)


state 30

    (60) pto_coma -> PUNTCOM .

    $end            reduce using rule 60 (pto_coma -> PUNTCOM .)


state 31

    (58) decremento -> ID DECREMENTO pto_coma .

    $end            reduce using rule 58 (decremento -> ID DECREMENTO pto_coma .)


state 32

    (36) add_lista -> ID LCORCHETE NUMBER . RCORCHETE EQUALS num_cadena pto_coma

    RCORCHETE       shift and go to state 52


state 33

    (51) add_mapa -> ID LCORCHETE CADENA . RCORCHETE EQUALS CADENA pto_coma

    RCORCHETE       shift and go to state 53


state 34

    (37) add_lista -> ID PTO ADD . LPAREN num_cadena RPAREN pto_coma

    LPAREN          shift and go to state 54


state 35

    (17) expresionFor -> FOR LPAREN forParameters .

    $end            reduce using rule 17 (expresionFor -> FOR LPAREN forParameters .)


state 36

    (18) forParameters -> forIterator . PUNTCOM forCondition PUNTCOM forAction

    PUNTCOM         shift and go to state 55


state 37

    (19) forIterator -> INT . ID EQUALS NUMBER

    ID              shift and go to state 56


state 38

    (20) forIterator -> ID . EQUALS NUMBER

    EQUALS          shift and go to state 57


state 39

    (48) expMapa -> MAPA ID EQUALS . LCURLYB elementosMapa RCURLYB pto_coma

    LCURLYB         shift and go to state 58


state 40

    (27) expresionBool -> VARBOOL ID EQUALS . booleano pto_coma
    (29) booleano -> . TRUE
    (30) booleano -> . FALSE

    TRUE            shift and go to state 48
    FALSE           shift and go to state 49

    booleano                       shift and go to state 59

state 41

    (59) concatenacion -> VAR ID EQUALS ID . PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN pto_coma
    (15) expresionVar -> ID .

    PTO             shift and go to state 60
    PUNTCOM         reduce using rule 15 (expresionVar -> ID .)
    PLUS            reduce using rule 15 (expresionVar -> ID .)
    MINUS           reduce using rule 15 (expresionVar -> ID .)
    TIMES           reduce using rule 15 (expresionVar -> ID .)
    DIVIDE          reduce using rule 15 (expresionVar -> ID .)
    DIVIDE_E        reduce using rule 15 (expresionVar -> ID .)


state 42

    (8) variable -> VAR ID EQUALS expresionVar . PUNTCOM
    (16) expresionVar -> expresionVar . operadorA expresionVar
    (52) operadorA -> . PLUS
    (53) operadorA -> . MINUS
    (54) operadorA -> . TIMES
    (55) operadorA -> . DIVIDE
    (56) operadorA -> . DIVIDE_E

    PUNTCOM         shift and go to state 61
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 65
    DIVIDE          shift and go to state 66
    DIVIDE_E        shift and go to state 67

    operadorA                      shift and go to state 62

state 43

    (11) valorVar -> NUMBER .

    PUNTCOM         reduce using rule 11 (valorVar -> NUMBER .)
    PLUS            reduce using rule 11 (valorVar -> NUMBER .)
    MINUS           reduce using rule 11 (valorVar -> NUMBER .)
    TIMES           reduce using rule 11 (valorVar -> NUMBER .)
    DIVIDE          reduce using rule 11 (valorVar -> NUMBER .)
    DIVIDE_E        reduce using rule 11 (valorVar -> NUMBER .)


state 44

    (33) expLista -> VAR ID EQUALS NEW . LISTA LPAREN NUMBER RPAREN pto_coma
    (34) expLista -> VAR ID EQUALS NEW . LISTA LPAREN RPAREN pto_coma
    (47) expMapa -> VAR ID EQUALS NEW . MAPA LPAREN RPAREN pto_coma

    LISTA           shift and go to state 68
    MAPA            shift and go to state 69


state 45

    (35) expLista -> VAR ID EQUALS LCORCHETE . elementosLista RCORCHETE pto_coma
    (40) elementosLista -> . CADENA
    (41) elementosLista -> . NUMBER
    (42) elementosLista -> . CADENA COMA elementosLista
    (43) elementosLista -> . NUMBER COMA elementosLista
    (44) elementosLista -> .

    CADENA          shift and go to state 71
    NUMBER          shift and go to state 72
    RCORCHETE       reduce using rule 44 (elementosLista -> .)

    elementosLista                 shift and go to state 70

state 46

    (28) expresionBool -> VAR ID EQUALS booleano . pto_coma
    (60) pto_coma -> . PUNTCOM

    PUNTCOM         shift and go to state 30

    pto_coma                       shift and go to state 73

state 47

    (14) expresionVar -> valorVar .

    PUNTCOM         reduce using rule 14 (expresionVar -> valorVar .)
    PLUS            reduce using rule 14 (expresionVar -> valorVar .)
    MINUS           reduce using rule 14 (expresionVar -> valorVar .)
    TIMES           reduce using rule 14 (expresionVar -> valorVar .)
    DIVIDE          reduce using rule 14 (expresionVar -> valorVar .)
    DIVIDE_E        reduce using rule 14 (expresionVar -> valorVar .)


state 48

    (29) booleano -> TRUE .

    PUNTCOM         reduce using rule 29 (booleano -> TRUE .)


state 49

    (30) booleano -> FALSE .

    PUNTCOM         reduce using rule 30 (booleano -> FALSE .)


state 50

    (12) valorVar -> DOUBLE .

    PUNTCOM         reduce using rule 12 (valorVar -> DOUBLE .)
    PLUS            reduce using rule 12 (valorVar -> DOUBLE .)
    MINUS           reduce using rule 12 (valorVar -> DOUBLE .)
    TIMES           reduce using rule 12 (valorVar -> DOUBLE .)
    DIVIDE          reduce using rule 12 (valorVar -> DOUBLE .)
    DIVIDE_E        reduce using rule 12 (valorVar -> DOUBLE .)


state 51

    (13) valorVar -> CADENA .

    PUNTCOM         reduce using rule 13 (valorVar -> CADENA .)
    PLUS            reduce using rule 13 (valorVar -> CADENA .)
    MINUS           reduce using rule 13 (valorVar -> CADENA .)
    TIMES           reduce using rule 13 (valorVar -> CADENA .)
    DIVIDE          reduce using rule 13 (valorVar -> CADENA .)
    DIVIDE_E        reduce using rule 13 (valorVar -> CADENA .)


state 52

    (36) add_lista -> ID LCORCHETE NUMBER RCORCHETE . EQUALS num_cadena pto_coma

    EQUALS          shift and go to state 74


state 53

    (51) add_mapa -> ID LCORCHETE CADENA RCORCHETE . EQUALS CADENA pto_coma

    EQUALS          shift and go to state 75


state 54

    (37) add_lista -> ID PTO ADD LPAREN . num_cadena RPAREN pto_coma
    (38) num_cadena -> . NUMBER
    (39) num_cadena -> . CADENA

    NUMBER          shift and go to state 77
    CADENA          shift and go to state 78

    num_cadena                     shift and go to state 76

state 55

    (18) forParameters -> forIterator PUNTCOM . forCondition PUNTCOM forAction
    (21) forCondition -> . ID MAYORQUE NUMBER
    (22) forCondition -> . ID MENORQUE NUMBER

    ID              shift and go to state 80

    forCondition                   shift and go to state 79

state 56

    (19) forIterator -> INT ID . EQUALS NUMBER

    EQUALS          shift and go to state 81


state 57

    (20) forIterator -> ID EQUALS . NUMBER

    NUMBER          shift and go to state 82


state 58

    (48) expMapa -> MAPA ID EQUALS LCURLYB . elementosMapa RCURLYB pto_coma
    (49) elementosMapa -> . num_cadena DOSPTO num_cadena
    (50) elementosMapa -> . num_cadena DOSPTO num_cadena COMA elementosMapa
    (38) num_cadena -> . NUMBER
    (39) num_cadena -> . CADENA

    NUMBER          shift and go to state 77
    CADENA          shift and go to state 78

    elementosMapa                  shift and go to state 83
    num_cadena                     shift and go to state 84

state 59

    (27) expresionBool -> VARBOOL ID EQUALS booleano . pto_coma
    (60) pto_coma -> . PUNTCOM

    PUNTCOM         shift and go to state 30

    pto_coma                       shift and go to state 85

state 60

    (59) concatenacion -> VAR ID EQUALS ID PTO . SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN pto_coma

    SUBSTRING       shift and go to state 86


state 61

    (8) variable -> VAR ID EQUALS expresionVar PUNTCOM .

    $end            reduce using rule 8 (variable -> VAR ID EQUALS expresionVar PUNTCOM .)


state 62

    (16) expresionVar -> expresionVar operadorA . expresionVar
    (14) expresionVar -> . valorVar
    (15) expresionVar -> . ID
    (16) expresionVar -> . expresionVar operadorA expresionVar
    (11) valorVar -> . NUMBER
    (12) valorVar -> . DOUBLE
    (13) valorVar -> . CADENA

    ID              shift and go to state 88
    NUMBER          shift and go to state 43
    DOUBLE          shift and go to state 50
    CADENA          shift and go to state 51

    expresionVar                   shift and go to state 87
    valorVar                       shift and go to state 47

state 63

    (52) operadorA -> PLUS .

    ID              reduce using rule 52 (operadorA -> PLUS .)
    NUMBER          reduce using rule 52 (operadorA -> PLUS .)
    DOUBLE          reduce using rule 52 (operadorA -> PLUS .)
    CADENA          reduce using rule 52 (operadorA -> PLUS .)


state 64

    (53) operadorA -> MINUS .

    ID              reduce using rule 53 (operadorA -> MINUS .)
    NUMBER          reduce using rule 53 (operadorA -> MINUS .)
    DOUBLE          reduce using rule 53 (operadorA -> MINUS .)
    CADENA          reduce using rule 53 (operadorA -> MINUS .)


state 65

    (54) operadorA -> TIMES .

    ID              reduce using rule 54 (operadorA -> TIMES .)
    NUMBER          reduce using rule 54 (operadorA -> TIMES .)
    DOUBLE          reduce using rule 54 (operadorA -> TIMES .)
    CADENA          reduce using rule 54 (operadorA -> TIMES .)


state 66

    (55) operadorA -> DIVIDE .

    ID              reduce using rule 55 (operadorA -> DIVIDE .)
    NUMBER          reduce using rule 55 (operadorA -> DIVIDE .)
    DOUBLE          reduce using rule 55 (operadorA -> DIVIDE .)
    CADENA          reduce using rule 55 (operadorA -> DIVIDE .)


state 67

    (56) operadorA -> DIVIDE_E .

    ID              reduce using rule 56 (operadorA -> DIVIDE_E .)
    NUMBER          reduce using rule 56 (operadorA -> DIVIDE_E .)
    DOUBLE          reduce using rule 56 (operadorA -> DIVIDE_E .)
    CADENA          reduce using rule 56 (operadorA -> DIVIDE_E .)


state 68

    (33) expLista -> VAR ID EQUALS NEW LISTA . LPAREN NUMBER RPAREN pto_coma
    (34) expLista -> VAR ID EQUALS NEW LISTA . LPAREN RPAREN pto_coma

    LPAREN          shift and go to state 89


state 69

    (47) expMapa -> VAR ID EQUALS NEW MAPA . LPAREN RPAREN pto_coma

    LPAREN          shift and go to state 90


state 70

    (35) expLista -> VAR ID EQUALS LCORCHETE elementosLista . RCORCHETE pto_coma

    RCORCHETE       shift and go to state 91


state 71

    (40) elementosLista -> CADENA .
    (42) elementosLista -> CADENA . COMA elementosLista

    RCORCHETE       reduce using rule 40 (elementosLista -> CADENA .)
    COMA            shift and go to state 92


state 72

    (41) elementosLista -> NUMBER .
    (43) elementosLista -> NUMBER . COMA elementosLista

    RCORCHETE       reduce using rule 41 (elementosLista -> NUMBER .)
    COMA            shift and go to state 93


state 73

    (28) expresionBool -> VAR ID EQUALS booleano pto_coma .

    $end            reduce using rule 28 (expresionBool -> VAR ID EQUALS booleano pto_coma .)


state 74

    (36) add_lista -> ID LCORCHETE NUMBER RCORCHETE EQUALS . num_cadena pto_coma
    (38) num_cadena -> . NUMBER
    (39) num_cadena -> . CADENA

    NUMBER          shift and go to state 77
    CADENA          shift and go to state 78

    num_cadena                     shift and go to state 94

state 75

    (51) add_mapa -> ID LCORCHETE CADENA RCORCHETE EQUALS . CADENA pto_coma

    CADENA          shift and go to state 95


state 76

    (37) add_lista -> ID PTO ADD LPAREN num_cadena . RPAREN pto_coma

    RPAREN          shift and go to state 96


state 77

    (38) num_cadena -> NUMBER .

    RPAREN          reduce using rule 38 (num_cadena -> NUMBER .)
    DOSPTO          reduce using rule 38 (num_cadena -> NUMBER .)
    PUNTCOM         reduce using rule 38 (num_cadena -> NUMBER .)
    COMA            reduce using rule 38 (num_cadena -> NUMBER .)
    RCURLYB         reduce using rule 38 (num_cadena -> NUMBER .)


state 78

    (39) num_cadena -> CADENA .

    RPAREN          reduce using rule 39 (num_cadena -> CADENA .)
    DOSPTO          reduce using rule 39 (num_cadena -> CADENA .)
    PUNTCOM         reduce using rule 39 (num_cadena -> CADENA .)
    COMA            reduce using rule 39 (num_cadena -> CADENA .)
    RCURLYB         reduce using rule 39 (num_cadena -> CADENA .)


state 79

    (18) forParameters -> forIterator PUNTCOM forCondition . PUNTCOM forAction

    PUNTCOM         shift and go to state 97


state 80

    (21) forCondition -> ID . MAYORQUE NUMBER
    (22) forCondition -> ID . MENORQUE NUMBER

    MAYORQUE        shift and go to state 98
    MENORQUE        shift and go to state 99


state 81

    (19) forIterator -> INT ID EQUALS . NUMBER

    NUMBER          shift and go to state 100


state 82

    (20) forIterator -> ID EQUALS NUMBER .

    PUNTCOM         reduce using rule 20 (forIterator -> ID EQUALS NUMBER .)


state 83

    (48) expMapa -> MAPA ID EQUALS LCURLYB elementosMapa . RCURLYB pto_coma

    RCURLYB         shift and go to state 101


state 84

    (49) elementosMapa -> num_cadena . DOSPTO num_cadena
    (50) elementosMapa -> num_cadena . DOSPTO num_cadena COMA elementosMapa

    DOSPTO          shift and go to state 102


state 85

    (27) expresionBool -> VARBOOL ID EQUALS booleano pto_coma .

    $end            reduce using rule 27 (expresionBool -> VARBOOL ID EQUALS booleano pto_coma .)


state 86

    (59) concatenacion -> VAR ID EQUALS ID PTO SUBSTRING . LPAREN NUMBER COMA NUMBER RPAREN pto_coma

    LPAREN          shift and go to state 103


state 87

    (16) expresionVar -> expresionVar operadorA expresionVar .
    (16) expresionVar -> expresionVar . operadorA expresionVar
    (52) operadorA -> . PLUS
    (53) operadorA -> . MINUS
    (54) operadorA -> . TIMES
    (55) operadorA -> . DIVIDE
    (56) operadorA -> . DIVIDE_E

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DIVIDE_E resolved as shift
    PUNTCOM         reduce using rule 16 (expresionVar -> expresionVar operadorA expresionVar .)
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 65
    DIVIDE          shift and go to state 66
    DIVIDE_E        shift and go to state 67

  ! PLUS            [ reduce using rule 16 (expresionVar -> expresionVar operadorA expresionVar .) ]
  ! MINUS           [ reduce using rule 16 (expresionVar -> expresionVar operadorA expresionVar .) ]
  ! TIMES           [ reduce using rule 16 (expresionVar -> expresionVar operadorA expresionVar .) ]
  ! DIVIDE          [ reduce using rule 16 (expresionVar -> expresionVar operadorA expresionVar .) ]
  ! DIVIDE_E        [ reduce using rule 16 (expresionVar -> expresionVar operadorA expresionVar .) ]

    operadorA                      shift and go to state 62

state 88

    (15) expresionVar -> ID .

    PLUS            reduce using rule 15 (expresionVar -> ID .)
    MINUS           reduce using rule 15 (expresionVar -> ID .)
    TIMES           reduce using rule 15 (expresionVar -> ID .)
    DIVIDE          reduce using rule 15 (expresionVar -> ID .)
    DIVIDE_E        reduce using rule 15 (expresionVar -> ID .)
    PUNTCOM         reduce using rule 15 (expresionVar -> ID .)


state 89

    (33) expLista -> VAR ID EQUALS NEW LISTA LPAREN . NUMBER RPAREN pto_coma
    (34) expLista -> VAR ID EQUALS NEW LISTA LPAREN . RPAREN pto_coma

    NUMBER          shift and go to state 104
    RPAREN          shift and go to state 105


state 90

    (47) expMapa -> VAR ID EQUALS NEW MAPA LPAREN . RPAREN pto_coma

    RPAREN          shift and go to state 106


state 91

    (35) expLista -> VAR ID EQUALS LCORCHETE elementosLista RCORCHETE . pto_coma
    (60) pto_coma -> . PUNTCOM

    PUNTCOM         shift and go to state 30

    pto_coma                       shift and go to state 107

state 92

    (42) elementosLista -> CADENA COMA . elementosLista
    (40) elementosLista -> . CADENA
    (41) elementosLista -> . NUMBER
    (42) elementosLista -> . CADENA COMA elementosLista
    (43) elementosLista -> . NUMBER COMA elementosLista
    (44) elementosLista -> .

    CADENA          shift and go to state 71
    NUMBER          shift and go to state 72
    RCORCHETE       reduce using rule 44 (elementosLista -> .)

    elementosLista                 shift and go to state 108

state 93

    (43) elementosLista -> NUMBER COMA . elementosLista
    (40) elementosLista -> . CADENA
    (41) elementosLista -> . NUMBER
    (42) elementosLista -> . CADENA COMA elementosLista
    (43) elementosLista -> . NUMBER COMA elementosLista
    (44) elementosLista -> .

    CADENA          shift and go to state 71
    NUMBER          shift and go to state 72
    RCORCHETE       reduce using rule 44 (elementosLista -> .)

    elementosLista                 shift and go to state 109

state 94

    (36) add_lista -> ID LCORCHETE NUMBER RCORCHETE EQUALS num_cadena . pto_coma
    (60) pto_coma -> . PUNTCOM

    PUNTCOM         shift and go to state 30

    pto_coma                       shift and go to state 110

state 95

    (51) add_mapa -> ID LCORCHETE CADENA RCORCHETE EQUALS CADENA . pto_coma
    (60) pto_coma -> . PUNTCOM

    PUNTCOM         shift and go to state 30

    pto_coma                       shift and go to state 111

state 96

    (37) add_lista -> ID PTO ADD LPAREN num_cadena RPAREN . pto_coma
    (60) pto_coma -> . PUNTCOM

    PUNTCOM         shift and go to state 30

    pto_coma                       shift and go to state 112

state 97

    (18) forParameters -> forIterator PUNTCOM forCondition PUNTCOM . forAction
    (23) forAction -> . ID INCREMENTO
    (24) forAction -> . ID DECREMENTO
    (25) forAction -> . INCREMENTO ID
    (26) forAction -> . DECREMENTO ID

    ID              shift and go to state 114
    INCREMENTO      shift and go to state 115
    DECREMENTO      shift and go to state 116

    forAction                      shift and go to state 113

state 98

    (21) forCondition -> ID MAYORQUE . NUMBER

    NUMBER          shift and go to state 117


state 99

    (22) forCondition -> ID MENORQUE . NUMBER

    NUMBER          shift and go to state 118


state 100

    (19) forIterator -> INT ID EQUALS NUMBER .

    PUNTCOM         reduce using rule 19 (forIterator -> INT ID EQUALS NUMBER .)


state 101

    (48) expMapa -> MAPA ID EQUALS LCURLYB elementosMapa RCURLYB . pto_coma
    (60) pto_coma -> . PUNTCOM

    PUNTCOM         shift and go to state 30

    pto_coma                       shift and go to state 119

state 102

    (49) elementosMapa -> num_cadena DOSPTO . num_cadena
    (50) elementosMapa -> num_cadena DOSPTO . num_cadena COMA elementosMapa
    (38) num_cadena -> . NUMBER
    (39) num_cadena -> . CADENA

    NUMBER          shift and go to state 77
    CADENA          shift and go to state 78

    num_cadena                     shift and go to state 120

state 103

    (59) concatenacion -> VAR ID EQUALS ID PTO SUBSTRING LPAREN . NUMBER COMA NUMBER RPAREN pto_coma

    NUMBER          shift and go to state 121


state 104

    (33) expLista -> VAR ID EQUALS NEW LISTA LPAREN NUMBER . RPAREN pto_coma

    RPAREN          shift and go to state 122


state 105

    (34) expLista -> VAR ID EQUALS NEW LISTA LPAREN RPAREN . pto_coma
    (60) pto_coma -> . PUNTCOM

    PUNTCOM         shift and go to state 30

    pto_coma                       shift and go to state 123

state 106

    (47) expMapa -> VAR ID EQUALS NEW MAPA LPAREN RPAREN . pto_coma
    (60) pto_coma -> . PUNTCOM

    PUNTCOM         shift and go to state 30

    pto_coma                       shift and go to state 124

state 107

    (35) expLista -> VAR ID EQUALS LCORCHETE elementosLista RCORCHETE pto_coma .

    $end            reduce using rule 35 (expLista -> VAR ID EQUALS LCORCHETE elementosLista RCORCHETE pto_coma .)


state 108

    (42) elementosLista -> CADENA COMA elementosLista .

    RCORCHETE       reduce using rule 42 (elementosLista -> CADENA COMA elementosLista .)


state 109

    (43) elementosLista -> NUMBER COMA elementosLista .

    RCORCHETE       reduce using rule 43 (elementosLista -> NUMBER COMA elementosLista .)


state 110

    (36) add_lista -> ID LCORCHETE NUMBER RCORCHETE EQUALS num_cadena pto_coma .

    $end            reduce using rule 36 (add_lista -> ID LCORCHETE NUMBER RCORCHETE EQUALS num_cadena pto_coma .)


state 111

    (51) add_mapa -> ID LCORCHETE CADENA RCORCHETE EQUALS CADENA pto_coma .

    $end            reduce using rule 51 (add_mapa -> ID LCORCHETE CADENA RCORCHETE EQUALS CADENA pto_coma .)


state 112

    (37) add_lista -> ID PTO ADD LPAREN num_cadena RPAREN pto_coma .

    $end            reduce using rule 37 (add_lista -> ID PTO ADD LPAREN num_cadena RPAREN pto_coma .)


state 113

    (18) forParameters -> forIterator PUNTCOM forCondition PUNTCOM forAction .

    $end            reduce using rule 18 (forParameters -> forIterator PUNTCOM forCondition PUNTCOM forAction .)


state 114

    (23) forAction -> ID . INCREMENTO
    (24) forAction -> ID . DECREMENTO

    INCREMENTO      shift and go to state 125
    DECREMENTO      shift and go to state 126


state 115

    (25) forAction -> INCREMENTO . ID

    ID              shift and go to state 127


state 116

    (26) forAction -> DECREMENTO . ID

    ID              shift and go to state 128


state 117

    (21) forCondition -> ID MAYORQUE NUMBER .

    PUNTCOM         reduce using rule 21 (forCondition -> ID MAYORQUE NUMBER .)


state 118

    (22) forCondition -> ID MENORQUE NUMBER .

    PUNTCOM         reduce using rule 22 (forCondition -> ID MENORQUE NUMBER .)


state 119

    (48) expMapa -> MAPA ID EQUALS LCURLYB elementosMapa RCURLYB pto_coma .

    $end            reduce using rule 48 (expMapa -> MAPA ID EQUALS LCURLYB elementosMapa RCURLYB pto_coma .)


state 120

    (49) elementosMapa -> num_cadena DOSPTO num_cadena .
    (50) elementosMapa -> num_cadena DOSPTO num_cadena . COMA elementosMapa

    RCURLYB         reduce using rule 49 (elementosMapa -> num_cadena DOSPTO num_cadena .)
    COMA            shift and go to state 129


state 121

    (59) concatenacion -> VAR ID EQUALS ID PTO SUBSTRING LPAREN NUMBER . COMA NUMBER RPAREN pto_coma

    COMA            shift and go to state 130


state 122

    (33) expLista -> VAR ID EQUALS NEW LISTA LPAREN NUMBER RPAREN . pto_coma
    (60) pto_coma -> . PUNTCOM

    PUNTCOM         shift and go to state 30

    pto_coma                       shift and go to state 131

state 123

    (34) expLista -> VAR ID EQUALS NEW LISTA LPAREN RPAREN pto_coma .

    $end            reduce using rule 34 (expLista -> VAR ID EQUALS NEW LISTA LPAREN RPAREN pto_coma .)


state 124

    (47) expMapa -> VAR ID EQUALS NEW MAPA LPAREN RPAREN pto_coma .

    $end            reduce using rule 47 (expMapa -> VAR ID EQUALS NEW MAPA LPAREN RPAREN pto_coma .)


state 125

    (23) forAction -> ID INCREMENTO .

    $end            reduce using rule 23 (forAction -> ID INCREMENTO .)


state 126

    (24) forAction -> ID DECREMENTO .

    $end            reduce using rule 24 (forAction -> ID DECREMENTO .)


state 127

    (25) forAction -> INCREMENTO ID .

    $end            reduce using rule 25 (forAction -> INCREMENTO ID .)


state 128

    (26) forAction -> DECREMENTO ID .

    $end            reduce using rule 26 (forAction -> DECREMENTO ID .)


state 129

    (50) elementosMapa -> num_cadena DOSPTO num_cadena COMA . elementosMapa
    (49) elementosMapa -> . num_cadena DOSPTO num_cadena
    (50) elementosMapa -> . num_cadena DOSPTO num_cadena COMA elementosMapa
    (38) num_cadena -> . NUMBER
    (39) num_cadena -> . CADENA

    NUMBER          shift and go to state 77
    CADENA          shift and go to state 78

    num_cadena                     shift and go to state 84
    elementosMapa                  shift and go to state 132

state 130

    (59) concatenacion -> VAR ID EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA . NUMBER RPAREN pto_coma

    NUMBER          shift and go to state 133


state 131

    (33) expLista -> VAR ID EQUALS NEW LISTA LPAREN NUMBER RPAREN pto_coma .

    $end            reduce using rule 33 (expLista -> VAR ID EQUALS NEW LISTA LPAREN NUMBER RPAREN pto_coma .)


state 132

    (50) elementosMapa -> num_cadena DOSPTO num_cadena COMA elementosMapa .

    RCURLYB         reduce using rule 50 (elementosMapa -> num_cadena DOSPTO num_cadena COMA elementosMapa .)


state 133

    (59) concatenacion -> VAR ID EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER . RPAREN pto_coma

    RPAREN          shift and go to state 134


state 134

    (59) concatenacion -> VAR ID EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN . pto_coma
    (60) pto_coma -> . PUNTCOM

    PUNTCOM         shift and go to state 30

    pto_coma                       shift and go to state 135

state 135

    (59) concatenacion -> VAR ID EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN pto_coma .

    $end            reduce using rule 59 (concatenacion -> VAR ID EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN pto_coma .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 87 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 87 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 87 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 87 resolved as shift
WARNING: shift/reduce conflict for DIVIDE_E in state 87 resolved as shift
