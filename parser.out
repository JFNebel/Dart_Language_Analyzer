Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    COMIILLATS
    COMILLAD
    COMILLAS
    COMILLATD
    FOR
    INT
    MAYORQUE
    MENORQUE
    NOT
    OR
    PRINT
    PUT
    UPDATE
    VARDOUBLE
    WHILE

Grammar

Rule 0     S' -> expresion
Rule 1     expresion -> lista
Rule 2     expresion -> mapa
Rule 3     expresion -> variable
Rule 4     expresion -> concatenacion
Rule 5     expresion -> incremento
Rule 6     expresion -> decremento
Rule 7     variable -> VAR ID EQUALS expresionVar PUNTCOM
Rule 8     variable -> VAR ID PUNTCOM
Rule 9     variable -> expresionBool
Rule 10    valorVar -> NUMBER
Rule 11    valorVar -> DOUBLE
Rule 12    valorVar -> CADENA
Rule 13    expresionVar -> valorVar
Rule 14    expresionVar -> ID
Rule 15    expresionVar -> expresionVar operadorA expresionVar
Rule 16    expresionBool -> VARBOOL ID EQUALS booleano pto_coma
Rule 17    expresionBool -> VAR ID EQUALS booleano pto_coma
Rule 18    booleano -> TRUE
Rule 19    booleano -> FALSE
Rule 20    lista -> expLista
Rule 21    lista -> add_lista
Rule 22    expLista -> VAR ID EQUALS NEW LISTA LPAREN NUMBER RPAREN pto_coma
Rule 23    expLista -> VAR ID EQUALS NEW LISTA LPAREN RPAREN pto_coma
Rule 24    expLista -> VAR ID EQUALS LCORCHETE elementosLista RCORCHETE pto_coma
Rule 25    add_lista -> ID LCORCHETE NUMBER RCORCHETE EQUALS num_cadena pto_coma
Rule 26    add_lista -> ID PTO ADD LPAREN num_cadena RPAREN pto_coma
Rule 27    num_cadena -> NUMBER
Rule 28    num_cadena -> CADENA
Rule 29    elementosLista -> CADENA
Rule 30    elementosLista -> NUMBER
Rule 31    elementosLista -> CADENA COMA elementosLista
Rule 32    elementosLista -> NUMBER COMA elementosLista
Rule 33    elementosLista -> <empty>
Rule 34    mapa -> expMapa
Rule 35    mapa -> add_mapa
Rule 36    expMapa -> VAR ID EQUALS NEW MAPA LPAREN RPAREN pto_coma
Rule 37    expMapa -> MAPA ID EQUALS LCURLYB elementosMapa RCURLYB pto_coma
Rule 38    elementosMapa -> num_cadena DOSPTO num_cadena
Rule 39    elementosMapa -> num_cadena DOSPTO num_cadena COMA elementosMapa
Rule 40    add_mapa -> ID LCORCHETE CADENA RCORCHETE EQUALS CADENA pto_coma
Rule 41    operadorA -> PLUS
Rule 42    operadorA -> MINUS
Rule 43    operadorA -> TIMES
Rule 44    operadorA -> DIVIDE
Rule 45    operadorA -> DIVIDE_E
Rule 46    incremento -> ID INCREMENTO pto_coma
Rule 47    decremento -> ID DECREMENTO pto_coma
Rule 48    concatenacion -> VAR ID EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN pto_coma
Rule 49    pto_coma -> PUNTCOM

Terminals, with rules where they appear

ADD                  : 26
AND                  : 
CADENA               : 12 28 29 31 40 40
COMA                 : 31 32 39 48
COMIILLATS           : 
COMILLAD             : 
COMILLAS             : 
COMILLATD            : 
DECREMENTO           : 47
DIVIDE               : 44
DIVIDE_E             : 45
DOSPTO               : 38 39
DOUBLE               : 11
EQUALS               : 7 16 17 22 23 24 25 36 37 40 48
FALSE                : 19
FOR                  : 
ID                   : 7 8 14 16 17 22 23 24 25 26 36 37 40 46 47 48 48
INCREMENTO           : 46
INT                  : 
LCORCHETE            : 24 25 40
LCURLYB              : 37
LISTA                : 22 23
LPAREN               : 22 23 26 36 48
MAPA                 : 36 37
MAYORQUE             : 
MENORQUE             : 
MINUS                : 42
NEW                  : 22 23 36
NOT                  : 
NUMBER               : 10 22 25 27 30 32 48 48
OR                   : 
PLUS                 : 41
PRINT                : 
PTO                  : 26 48
PUNTCOM              : 7 8 49
PUT                  : 
RCORCHETE            : 24 25 40
RCURLYB              : 37
RPAREN               : 22 23 26 36 48
SUBSTRING            : 48
TIMES                : 43
TRUE                 : 18
UPDATE               : 
VAR                  : 7 8 17 22 23 24 36 48
VARBOOL              : 16
VARDOUBLE            : 
WHILE                : 
error                : 

Nonterminals, with rules where they appear

add_lista            : 21
add_mapa             : 35
booleano             : 16 17
concatenacion        : 4
decremento           : 6
elementosLista       : 24 31 32
elementosMapa        : 37 39
expLista             : 20
expMapa              : 34
expresion            : 0
expresionBool        : 9
expresionVar         : 7 15 15
incremento           : 5
lista                : 1
mapa                 : 2
num_cadena           : 25 26 38 38 39 39
operadorA            : 15
pto_coma             : 16 17 22 23 24 25 26 36 37 40 46 47 48
valorVar             : 13
variable             : 3

Parsing method: LALR

state 0

    (0) S' -> . expresion
    (1) expresion -> . lista
    (2) expresion -> . mapa
    (3) expresion -> . variable
    (4) expresion -> . concatenacion
    (5) expresion -> . incremento
    (6) expresion -> . decremento
    (20) lista -> . expLista
    (21) lista -> . add_lista
    (34) mapa -> . expMapa
    (35) mapa -> . add_mapa
    (7) variable -> . VAR ID EQUALS expresionVar PUNTCOM
    (8) variable -> . VAR ID PUNTCOM
    (9) variable -> . expresionBool
    (48) concatenacion -> . VAR ID EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN pto_coma
    (46) incremento -> . ID INCREMENTO pto_coma
    (47) decremento -> . ID DECREMENTO pto_coma
    (22) expLista -> . VAR ID EQUALS NEW LISTA LPAREN NUMBER RPAREN pto_coma
    (23) expLista -> . VAR ID EQUALS NEW LISTA LPAREN RPAREN pto_coma
    (24) expLista -> . VAR ID EQUALS LCORCHETE elementosLista RCORCHETE pto_coma
    (25) add_lista -> . ID LCORCHETE NUMBER RCORCHETE EQUALS num_cadena pto_coma
    (26) add_lista -> . ID PTO ADD LPAREN num_cadena RPAREN pto_coma
    (36) expMapa -> . VAR ID EQUALS NEW MAPA LPAREN RPAREN pto_coma
    (37) expMapa -> . MAPA ID EQUALS LCURLYB elementosMapa RCURLYB pto_coma
    (40) add_mapa -> . ID LCORCHETE CADENA RCORCHETE EQUALS CADENA pto_coma
    (16) expresionBool -> . VARBOOL ID EQUALS booleano pto_coma
    (17) expresionBool -> . VAR ID EQUALS booleano pto_coma

    VAR             shift and go to state 12
    ID              shift and go to state 13
    MAPA            shift and go to state 15
    VARBOOL         shift and go to state 16

    expresion                      shift and go to state 1
    lista                          shift and go to state 2
    mapa                           shift and go to state 3
    variable                       shift and go to state 4
    concatenacion                  shift and go to state 5
    incremento                     shift and go to state 6
    decremento                     shift and go to state 7
    expLista                       shift and go to state 8
    add_lista                      shift and go to state 9
    expMapa                        shift and go to state 10
    add_mapa                       shift and go to state 11
    expresionBool                  shift and go to state 14

state 1

    (0) S' -> expresion .



state 2

    (1) expresion -> lista .

    $end            reduce using rule 1 (expresion -> lista .)


state 3

    (2) expresion -> mapa .

    $end            reduce using rule 2 (expresion -> mapa .)


state 4

    (3) expresion -> variable .

    $end            reduce using rule 3 (expresion -> variable .)


state 5

    (4) expresion -> concatenacion .

    $end            reduce using rule 4 (expresion -> concatenacion .)


state 6

    (5) expresion -> incremento .

    $end            reduce using rule 5 (expresion -> incremento .)


state 7

    (6) expresion -> decremento .

    $end            reduce using rule 6 (expresion -> decremento .)


state 8

    (20) lista -> expLista .

    $end            reduce using rule 20 (lista -> expLista .)


state 9

    (21) lista -> add_lista .

    $end            reduce using rule 21 (lista -> add_lista .)


state 10

    (34) mapa -> expMapa .

    $end            reduce using rule 34 (mapa -> expMapa .)


state 11

    (35) mapa -> add_mapa .

    $end            reduce using rule 35 (mapa -> add_mapa .)


state 12

    (7) variable -> VAR . ID EQUALS expresionVar PUNTCOM
    (8) variable -> VAR . ID PUNTCOM
    (48) concatenacion -> VAR . ID EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN pto_coma
    (22) expLista -> VAR . ID EQUALS NEW LISTA LPAREN NUMBER RPAREN pto_coma
    (23) expLista -> VAR . ID EQUALS NEW LISTA LPAREN RPAREN pto_coma
    (24) expLista -> VAR . ID EQUALS LCORCHETE elementosLista RCORCHETE pto_coma
    (36) expMapa -> VAR . ID EQUALS NEW MAPA LPAREN RPAREN pto_coma
    (17) expresionBool -> VAR . ID EQUALS booleano pto_coma

    ID              shift and go to state 17


state 13

    (46) incremento -> ID . INCREMENTO pto_coma
    (47) decremento -> ID . DECREMENTO pto_coma
    (25) add_lista -> ID . LCORCHETE NUMBER RCORCHETE EQUALS num_cadena pto_coma
    (26) add_lista -> ID . PTO ADD LPAREN num_cadena RPAREN pto_coma
    (40) add_mapa -> ID . LCORCHETE CADENA RCORCHETE EQUALS CADENA pto_coma

    INCREMENTO      shift and go to state 18
    DECREMENTO      shift and go to state 19
    LCORCHETE       shift and go to state 20
    PTO             shift and go to state 21


state 14

    (9) variable -> expresionBool .

    $end            reduce using rule 9 (variable -> expresionBool .)


state 15

    (37) expMapa -> MAPA . ID EQUALS LCURLYB elementosMapa RCURLYB pto_coma

    ID              shift and go to state 22


state 16

    (16) expresionBool -> VARBOOL . ID EQUALS booleano pto_coma

    ID              shift and go to state 23


state 17

    (7) variable -> VAR ID . EQUALS expresionVar PUNTCOM
    (8) variable -> VAR ID . PUNTCOM
    (48) concatenacion -> VAR ID . EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN pto_coma
    (22) expLista -> VAR ID . EQUALS NEW LISTA LPAREN NUMBER RPAREN pto_coma
    (23) expLista -> VAR ID . EQUALS NEW LISTA LPAREN RPAREN pto_coma
    (24) expLista -> VAR ID . EQUALS LCORCHETE elementosLista RCORCHETE pto_coma
    (36) expMapa -> VAR ID . EQUALS NEW MAPA LPAREN RPAREN pto_coma
    (17) expresionBool -> VAR ID . EQUALS booleano pto_coma

    EQUALS          shift and go to state 24
    PUNTCOM         shift and go to state 25


state 18

    (46) incremento -> ID INCREMENTO . pto_coma
    (49) pto_coma -> . PUNTCOM

    PUNTCOM         shift and go to state 27

    pto_coma                       shift and go to state 26

state 19

    (47) decremento -> ID DECREMENTO . pto_coma
    (49) pto_coma -> . PUNTCOM

    PUNTCOM         shift and go to state 27

    pto_coma                       shift and go to state 28

state 20

    (25) add_lista -> ID LCORCHETE . NUMBER RCORCHETE EQUALS num_cadena pto_coma
    (40) add_mapa -> ID LCORCHETE . CADENA RCORCHETE EQUALS CADENA pto_coma

    NUMBER          shift and go to state 29
    CADENA          shift and go to state 30


state 21

    (26) add_lista -> ID PTO . ADD LPAREN num_cadena RPAREN pto_coma

    ADD             shift and go to state 31


state 22

    (37) expMapa -> MAPA ID . EQUALS LCURLYB elementosMapa RCURLYB pto_coma

    EQUALS          shift and go to state 32


state 23

    (16) expresionBool -> VARBOOL ID . EQUALS booleano pto_coma

    EQUALS          shift and go to state 33


state 24

    (7) variable -> VAR ID EQUALS . expresionVar PUNTCOM
    (48) concatenacion -> VAR ID EQUALS . ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN pto_coma
    (22) expLista -> VAR ID EQUALS . NEW LISTA LPAREN NUMBER RPAREN pto_coma
    (23) expLista -> VAR ID EQUALS . NEW LISTA LPAREN RPAREN pto_coma
    (24) expLista -> VAR ID EQUALS . LCORCHETE elementosLista RCORCHETE pto_coma
    (36) expMapa -> VAR ID EQUALS . NEW MAPA LPAREN RPAREN pto_coma
    (17) expresionBool -> VAR ID EQUALS . booleano pto_coma
    (13) expresionVar -> . valorVar
    (14) expresionVar -> . ID
    (15) expresionVar -> . expresionVar operadorA expresionVar
    (18) booleano -> . TRUE
    (19) booleano -> . FALSE
    (10) valorVar -> . NUMBER
    (11) valorVar -> . DOUBLE
    (12) valorVar -> . CADENA

    ID              shift and go to state 34
    NEW             shift and go to state 37
    LCORCHETE       shift and go to state 38
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42
    NUMBER          shift and go to state 36
    DOUBLE          shift and go to state 43
    CADENA          shift and go to state 44

    expresionVar                   shift and go to state 35
    booleano                       shift and go to state 39
    valorVar                       shift and go to state 40

state 25

    (8) variable -> VAR ID PUNTCOM .

    $end            reduce using rule 8 (variable -> VAR ID PUNTCOM .)


state 26

    (46) incremento -> ID INCREMENTO pto_coma .

    $end            reduce using rule 46 (incremento -> ID INCREMENTO pto_coma .)


state 27

    (49) pto_coma -> PUNTCOM .

    $end            reduce using rule 49 (pto_coma -> PUNTCOM .)


state 28

    (47) decremento -> ID DECREMENTO pto_coma .

    $end            reduce using rule 47 (decremento -> ID DECREMENTO pto_coma .)


state 29

    (25) add_lista -> ID LCORCHETE NUMBER . RCORCHETE EQUALS num_cadena pto_coma

    RCORCHETE       shift and go to state 45


state 30

    (40) add_mapa -> ID LCORCHETE CADENA . RCORCHETE EQUALS CADENA pto_coma

    RCORCHETE       shift and go to state 46


state 31

    (26) add_lista -> ID PTO ADD . LPAREN num_cadena RPAREN pto_coma

    LPAREN          shift and go to state 47


state 32

    (37) expMapa -> MAPA ID EQUALS . LCURLYB elementosMapa RCURLYB pto_coma

    LCURLYB         shift and go to state 48


state 33

    (16) expresionBool -> VARBOOL ID EQUALS . booleano pto_coma
    (18) booleano -> . TRUE
    (19) booleano -> . FALSE

    TRUE            shift and go to state 41
    FALSE           shift and go to state 42

    booleano                       shift and go to state 49

state 34

    (48) concatenacion -> VAR ID EQUALS ID . PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN pto_coma
    (14) expresionVar -> ID .

    PTO             shift and go to state 50
    PUNTCOM         reduce using rule 14 (expresionVar -> ID .)
    PLUS            reduce using rule 14 (expresionVar -> ID .)
    MINUS           reduce using rule 14 (expresionVar -> ID .)
    TIMES           reduce using rule 14 (expresionVar -> ID .)
    DIVIDE          reduce using rule 14 (expresionVar -> ID .)
    DIVIDE_E        reduce using rule 14 (expresionVar -> ID .)


state 35

    (7) variable -> VAR ID EQUALS expresionVar . PUNTCOM
    (15) expresionVar -> expresionVar . operadorA expresionVar
    (41) operadorA -> . PLUS
    (42) operadorA -> . MINUS
    (43) operadorA -> . TIMES
    (44) operadorA -> . DIVIDE
    (45) operadorA -> . DIVIDE_E

    PUNTCOM         shift and go to state 51
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    TIMES           shift and go to state 55
    DIVIDE          shift and go to state 56
    DIVIDE_E        shift and go to state 57

    operadorA                      shift and go to state 52

state 36

    (10) valorVar -> NUMBER .

    PUNTCOM         reduce using rule 10 (valorVar -> NUMBER .)
    PLUS            reduce using rule 10 (valorVar -> NUMBER .)
    MINUS           reduce using rule 10 (valorVar -> NUMBER .)
    TIMES           reduce using rule 10 (valorVar -> NUMBER .)
    DIVIDE          reduce using rule 10 (valorVar -> NUMBER .)
    DIVIDE_E        reduce using rule 10 (valorVar -> NUMBER .)


state 37

    (22) expLista -> VAR ID EQUALS NEW . LISTA LPAREN NUMBER RPAREN pto_coma
    (23) expLista -> VAR ID EQUALS NEW . LISTA LPAREN RPAREN pto_coma
    (36) expMapa -> VAR ID EQUALS NEW . MAPA LPAREN RPAREN pto_coma

    LISTA           shift and go to state 58
    MAPA            shift and go to state 59


state 38

    (24) expLista -> VAR ID EQUALS LCORCHETE . elementosLista RCORCHETE pto_coma
    (29) elementosLista -> . CADENA
    (30) elementosLista -> . NUMBER
    (31) elementosLista -> . CADENA COMA elementosLista
    (32) elementosLista -> . NUMBER COMA elementosLista
    (33) elementosLista -> .

    CADENA          shift and go to state 61
    NUMBER          shift and go to state 62
    RCORCHETE       reduce using rule 33 (elementosLista -> .)

    elementosLista                 shift and go to state 60

state 39

    (17) expresionBool -> VAR ID EQUALS booleano . pto_coma
    (49) pto_coma -> . PUNTCOM

    PUNTCOM         shift and go to state 27

    pto_coma                       shift and go to state 63

state 40

    (13) expresionVar -> valorVar .

    PUNTCOM         reduce using rule 13 (expresionVar -> valorVar .)
    PLUS            reduce using rule 13 (expresionVar -> valorVar .)
    MINUS           reduce using rule 13 (expresionVar -> valorVar .)
    TIMES           reduce using rule 13 (expresionVar -> valorVar .)
    DIVIDE          reduce using rule 13 (expresionVar -> valorVar .)
    DIVIDE_E        reduce using rule 13 (expresionVar -> valorVar .)


state 41

    (18) booleano -> TRUE .

    PUNTCOM         reduce using rule 18 (booleano -> TRUE .)


state 42

    (19) booleano -> FALSE .

    PUNTCOM         reduce using rule 19 (booleano -> FALSE .)


state 43

    (11) valorVar -> DOUBLE .

    PUNTCOM         reduce using rule 11 (valorVar -> DOUBLE .)
    PLUS            reduce using rule 11 (valorVar -> DOUBLE .)
    MINUS           reduce using rule 11 (valorVar -> DOUBLE .)
    TIMES           reduce using rule 11 (valorVar -> DOUBLE .)
    DIVIDE          reduce using rule 11 (valorVar -> DOUBLE .)
    DIVIDE_E        reduce using rule 11 (valorVar -> DOUBLE .)


state 44

    (12) valorVar -> CADENA .

    PUNTCOM         reduce using rule 12 (valorVar -> CADENA .)
    PLUS            reduce using rule 12 (valorVar -> CADENA .)
    MINUS           reduce using rule 12 (valorVar -> CADENA .)
    TIMES           reduce using rule 12 (valorVar -> CADENA .)
    DIVIDE          reduce using rule 12 (valorVar -> CADENA .)
    DIVIDE_E        reduce using rule 12 (valorVar -> CADENA .)


state 45

    (25) add_lista -> ID LCORCHETE NUMBER RCORCHETE . EQUALS num_cadena pto_coma

    EQUALS          shift and go to state 64


state 46

    (40) add_mapa -> ID LCORCHETE CADENA RCORCHETE . EQUALS CADENA pto_coma

    EQUALS          shift and go to state 65


state 47

    (26) add_lista -> ID PTO ADD LPAREN . num_cadena RPAREN pto_coma
    (27) num_cadena -> . NUMBER
    (28) num_cadena -> . CADENA

    NUMBER          shift and go to state 67
    CADENA          shift and go to state 68

    num_cadena                     shift and go to state 66

state 48

    (37) expMapa -> MAPA ID EQUALS LCURLYB . elementosMapa RCURLYB pto_coma
    (38) elementosMapa -> . num_cadena DOSPTO num_cadena
    (39) elementosMapa -> . num_cadena DOSPTO num_cadena COMA elementosMapa
    (27) num_cadena -> . NUMBER
    (28) num_cadena -> . CADENA

    NUMBER          shift and go to state 67
    CADENA          shift and go to state 68

    elementosMapa                  shift and go to state 69
    num_cadena                     shift and go to state 70

state 49

    (16) expresionBool -> VARBOOL ID EQUALS booleano . pto_coma
    (49) pto_coma -> . PUNTCOM

    PUNTCOM         shift and go to state 27

    pto_coma                       shift and go to state 71

state 50

    (48) concatenacion -> VAR ID EQUALS ID PTO . SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN pto_coma

    SUBSTRING       shift and go to state 72


state 51

    (7) variable -> VAR ID EQUALS expresionVar PUNTCOM .

    $end            reduce using rule 7 (variable -> VAR ID EQUALS expresionVar PUNTCOM .)


state 52

    (15) expresionVar -> expresionVar operadorA . expresionVar
    (13) expresionVar -> . valorVar
    (14) expresionVar -> . ID
    (15) expresionVar -> . expresionVar operadorA expresionVar
    (10) valorVar -> . NUMBER
    (11) valorVar -> . DOUBLE
    (12) valorVar -> . CADENA

    ID              shift and go to state 74
    NUMBER          shift and go to state 36
    DOUBLE          shift and go to state 43
    CADENA          shift and go to state 44

    expresionVar                   shift and go to state 73
    valorVar                       shift and go to state 40

state 53

    (41) operadorA -> PLUS .

    ID              reduce using rule 41 (operadorA -> PLUS .)
    NUMBER          reduce using rule 41 (operadorA -> PLUS .)
    DOUBLE          reduce using rule 41 (operadorA -> PLUS .)
    CADENA          reduce using rule 41 (operadorA -> PLUS .)


state 54

    (42) operadorA -> MINUS .

    ID              reduce using rule 42 (operadorA -> MINUS .)
    NUMBER          reduce using rule 42 (operadorA -> MINUS .)
    DOUBLE          reduce using rule 42 (operadorA -> MINUS .)
    CADENA          reduce using rule 42 (operadorA -> MINUS .)


state 55

    (43) operadorA -> TIMES .

    ID              reduce using rule 43 (operadorA -> TIMES .)
    NUMBER          reduce using rule 43 (operadorA -> TIMES .)
    DOUBLE          reduce using rule 43 (operadorA -> TIMES .)
    CADENA          reduce using rule 43 (operadorA -> TIMES .)


state 56

    (44) operadorA -> DIVIDE .

    ID              reduce using rule 44 (operadorA -> DIVIDE .)
    NUMBER          reduce using rule 44 (operadorA -> DIVIDE .)
    DOUBLE          reduce using rule 44 (operadorA -> DIVIDE .)
    CADENA          reduce using rule 44 (operadorA -> DIVIDE .)


state 57

    (45) operadorA -> DIVIDE_E .

    ID              reduce using rule 45 (operadorA -> DIVIDE_E .)
    NUMBER          reduce using rule 45 (operadorA -> DIVIDE_E .)
    DOUBLE          reduce using rule 45 (operadorA -> DIVIDE_E .)
    CADENA          reduce using rule 45 (operadorA -> DIVIDE_E .)


state 58

    (22) expLista -> VAR ID EQUALS NEW LISTA . LPAREN NUMBER RPAREN pto_coma
    (23) expLista -> VAR ID EQUALS NEW LISTA . LPAREN RPAREN pto_coma

    LPAREN          shift and go to state 75


state 59

    (36) expMapa -> VAR ID EQUALS NEW MAPA . LPAREN RPAREN pto_coma

    LPAREN          shift and go to state 76


state 60

    (24) expLista -> VAR ID EQUALS LCORCHETE elementosLista . RCORCHETE pto_coma

    RCORCHETE       shift and go to state 77


state 61

    (29) elementosLista -> CADENA .
    (31) elementosLista -> CADENA . COMA elementosLista

    RCORCHETE       reduce using rule 29 (elementosLista -> CADENA .)
    COMA            shift and go to state 78


state 62

    (30) elementosLista -> NUMBER .
    (32) elementosLista -> NUMBER . COMA elementosLista

    RCORCHETE       reduce using rule 30 (elementosLista -> NUMBER .)
    COMA            shift and go to state 79


state 63

    (17) expresionBool -> VAR ID EQUALS booleano pto_coma .

    $end            reduce using rule 17 (expresionBool -> VAR ID EQUALS booleano pto_coma .)


state 64

    (25) add_lista -> ID LCORCHETE NUMBER RCORCHETE EQUALS . num_cadena pto_coma
    (27) num_cadena -> . NUMBER
    (28) num_cadena -> . CADENA

    NUMBER          shift and go to state 67
    CADENA          shift and go to state 68

    num_cadena                     shift and go to state 80

state 65

    (40) add_mapa -> ID LCORCHETE CADENA RCORCHETE EQUALS . CADENA pto_coma

    CADENA          shift and go to state 81


state 66

    (26) add_lista -> ID PTO ADD LPAREN num_cadena . RPAREN pto_coma

    RPAREN          shift and go to state 82


state 67

    (27) num_cadena -> NUMBER .

    RPAREN          reduce using rule 27 (num_cadena -> NUMBER .)
    DOSPTO          reduce using rule 27 (num_cadena -> NUMBER .)
    PUNTCOM         reduce using rule 27 (num_cadena -> NUMBER .)
    COMA            reduce using rule 27 (num_cadena -> NUMBER .)
    RCURLYB         reduce using rule 27 (num_cadena -> NUMBER .)


state 68

    (28) num_cadena -> CADENA .

    RPAREN          reduce using rule 28 (num_cadena -> CADENA .)
    DOSPTO          reduce using rule 28 (num_cadena -> CADENA .)
    PUNTCOM         reduce using rule 28 (num_cadena -> CADENA .)
    COMA            reduce using rule 28 (num_cadena -> CADENA .)
    RCURLYB         reduce using rule 28 (num_cadena -> CADENA .)


state 69

    (37) expMapa -> MAPA ID EQUALS LCURLYB elementosMapa . RCURLYB pto_coma

    RCURLYB         shift and go to state 83


state 70

    (38) elementosMapa -> num_cadena . DOSPTO num_cadena
    (39) elementosMapa -> num_cadena . DOSPTO num_cadena COMA elementosMapa

    DOSPTO          shift and go to state 84


state 71

    (16) expresionBool -> VARBOOL ID EQUALS booleano pto_coma .

    $end            reduce using rule 16 (expresionBool -> VARBOOL ID EQUALS booleano pto_coma .)


state 72

    (48) concatenacion -> VAR ID EQUALS ID PTO SUBSTRING . LPAREN NUMBER COMA NUMBER RPAREN pto_coma

    LPAREN          shift and go to state 85


state 73

    (15) expresionVar -> expresionVar operadorA expresionVar .
    (15) expresionVar -> expresionVar . operadorA expresionVar
    (41) operadorA -> . PLUS
    (42) operadorA -> . MINUS
    (43) operadorA -> . TIMES
    (44) operadorA -> . DIVIDE
    (45) operadorA -> . DIVIDE_E

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DIVIDE_E resolved as shift
    PUNTCOM         reduce using rule 15 (expresionVar -> expresionVar operadorA expresionVar .)
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    TIMES           shift and go to state 55
    DIVIDE          shift and go to state 56
    DIVIDE_E        shift and go to state 57

  ! PLUS            [ reduce using rule 15 (expresionVar -> expresionVar operadorA expresionVar .) ]
  ! MINUS           [ reduce using rule 15 (expresionVar -> expresionVar operadorA expresionVar .) ]
  ! TIMES           [ reduce using rule 15 (expresionVar -> expresionVar operadorA expresionVar .) ]
  ! DIVIDE          [ reduce using rule 15 (expresionVar -> expresionVar operadorA expresionVar .) ]
  ! DIVIDE_E        [ reduce using rule 15 (expresionVar -> expresionVar operadorA expresionVar .) ]

    operadorA                      shift and go to state 52

state 74

    (14) expresionVar -> ID .

    PLUS            reduce using rule 14 (expresionVar -> ID .)
    MINUS           reduce using rule 14 (expresionVar -> ID .)
    TIMES           reduce using rule 14 (expresionVar -> ID .)
    DIVIDE          reduce using rule 14 (expresionVar -> ID .)
    DIVIDE_E        reduce using rule 14 (expresionVar -> ID .)
    PUNTCOM         reduce using rule 14 (expresionVar -> ID .)


state 75

    (22) expLista -> VAR ID EQUALS NEW LISTA LPAREN . NUMBER RPAREN pto_coma
    (23) expLista -> VAR ID EQUALS NEW LISTA LPAREN . RPAREN pto_coma

    NUMBER          shift and go to state 86
    RPAREN          shift and go to state 87


state 76

    (36) expMapa -> VAR ID EQUALS NEW MAPA LPAREN . RPAREN pto_coma

    RPAREN          shift and go to state 88


state 77

    (24) expLista -> VAR ID EQUALS LCORCHETE elementosLista RCORCHETE . pto_coma
    (49) pto_coma -> . PUNTCOM

    PUNTCOM         shift and go to state 27

    pto_coma                       shift and go to state 89

state 78

    (31) elementosLista -> CADENA COMA . elementosLista
    (29) elementosLista -> . CADENA
    (30) elementosLista -> . NUMBER
    (31) elementosLista -> . CADENA COMA elementosLista
    (32) elementosLista -> . NUMBER COMA elementosLista
    (33) elementosLista -> .

    CADENA          shift and go to state 61
    NUMBER          shift and go to state 62
    RCORCHETE       reduce using rule 33 (elementosLista -> .)

    elementosLista                 shift and go to state 90

state 79

    (32) elementosLista -> NUMBER COMA . elementosLista
    (29) elementosLista -> . CADENA
    (30) elementosLista -> . NUMBER
    (31) elementosLista -> . CADENA COMA elementosLista
    (32) elementosLista -> . NUMBER COMA elementosLista
    (33) elementosLista -> .

    CADENA          shift and go to state 61
    NUMBER          shift and go to state 62
    RCORCHETE       reduce using rule 33 (elementosLista -> .)

    elementosLista                 shift and go to state 91

state 80

    (25) add_lista -> ID LCORCHETE NUMBER RCORCHETE EQUALS num_cadena . pto_coma
    (49) pto_coma -> . PUNTCOM

    PUNTCOM         shift and go to state 27

    pto_coma                       shift and go to state 92

state 81

    (40) add_mapa -> ID LCORCHETE CADENA RCORCHETE EQUALS CADENA . pto_coma
    (49) pto_coma -> . PUNTCOM

    PUNTCOM         shift and go to state 27

    pto_coma                       shift and go to state 93

state 82

    (26) add_lista -> ID PTO ADD LPAREN num_cadena RPAREN . pto_coma
    (49) pto_coma -> . PUNTCOM

    PUNTCOM         shift and go to state 27

    pto_coma                       shift and go to state 94

state 83

    (37) expMapa -> MAPA ID EQUALS LCURLYB elementosMapa RCURLYB . pto_coma
    (49) pto_coma -> . PUNTCOM

    PUNTCOM         shift and go to state 27

    pto_coma                       shift and go to state 95

state 84

    (38) elementosMapa -> num_cadena DOSPTO . num_cadena
    (39) elementosMapa -> num_cadena DOSPTO . num_cadena COMA elementosMapa
    (27) num_cadena -> . NUMBER
    (28) num_cadena -> . CADENA

    NUMBER          shift and go to state 67
    CADENA          shift and go to state 68

    num_cadena                     shift and go to state 96

state 85

    (48) concatenacion -> VAR ID EQUALS ID PTO SUBSTRING LPAREN . NUMBER COMA NUMBER RPAREN pto_coma

    NUMBER          shift and go to state 97


state 86

    (22) expLista -> VAR ID EQUALS NEW LISTA LPAREN NUMBER . RPAREN pto_coma

    RPAREN          shift and go to state 98


state 87

    (23) expLista -> VAR ID EQUALS NEW LISTA LPAREN RPAREN . pto_coma
    (49) pto_coma -> . PUNTCOM

    PUNTCOM         shift and go to state 27

    pto_coma                       shift and go to state 99

state 88

    (36) expMapa -> VAR ID EQUALS NEW MAPA LPAREN RPAREN . pto_coma
    (49) pto_coma -> . PUNTCOM

    PUNTCOM         shift and go to state 27

    pto_coma                       shift and go to state 100

state 89

    (24) expLista -> VAR ID EQUALS LCORCHETE elementosLista RCORCHETE pto_coma .

    $end            reduce using rule 24 (expLista -> VAR ID EQUALS LCORCHETE elementosLista RCORCHETE pto_coma .)


state 90

    (31) elementosLista -> CADENA COMA elementosLista .

    RCORCHETE       reduce using rule 31 (elementosLista -> CADENA COMA elementosLista .)


state 91

    (32) elementosLista -> NUMBER COMA elementosLista .

    RCORCHETE       reduce using rule 32 (elementosLista -> NUMBER COMA elementosLista .)


state 92

    (25) add_lista -> ID LCORCHETE NUMBER RCORCHETE EQUALS num_cadena pto_coma .

    $end            reduce using rule 25 (add_lista -> ID LCORCHETE NUMBER RCORCHETE EQUALS num_cadena pto_coma .)


state 93

    (40) add_mapa -> ID LCORCHETE CADENA RCORCHETE EQUALS CADENA pto_coma .

    $end            reduce using rule 40 (add_mapa -> ID LCORCHETE CADENA RCORCHETE EQUALS CADENA pto_coma .)


state 94

    (26) add_lista -> ID PTO ADD LPAREN num_cadena RPAREN pto_coma .

    $end            reduce using rule 26 (add_lista -> ID PTO ADD LPAREN num_cadena RPAREN pto_coma .)


state 95

    (37) expMapa -> MAPA ID EQUALS LCURLYB elementosMapa RCURLYB pto_coma .

    $end            reduce using rule 37 (expMapa -> MAPA ID EQUALS LCURLYB elementosMapa RCURLYB pto_coma .)


state 96

    (38) elementosMapa -> num_cadena DOSPTO num_cadena .
    (39) elementosMapa -> num_cadena DOSPTO num_cadena . COMA elementosMapa

    RCURLYB         reduce using rule 38 (elementosMapa -> num_cadena DOSPTO num_cadena .)
    COMA            shift and go to state 101


state 97

    (48) concatenacion -> VAR ID EQUALS ID PTO SUBSTRING LPAREN NUMBER . COMA NUMBER RPAREN pto_coma

    COMA            shift and go to state 102


state 98

    (22) expLista -> VAR ID EQUALS NEW LISTA LPAREN NUMBER RPAREN . pto_coma
    (49) pto_coma -> . PUNTCOM

    PUNTCOM         shift and go to state 27

    pto_coma                       shift and go to state 103

state 99

    (23) expLista -> VAR ID EQUALS NEW LISTA LPAREN RPAREN pto_coma .

    $end            reduce using rule 23 (expLista -> VAR ID EQUALS NEW LISTA LPAREN RPAREN pto_coma .)


state 100

    (36) expMapa -> VAR ID EQUALS NEW MAPA LPAREN RPAREN pto_coma .

    $end            reduce using rule 36 (expMapa -> VAR ID EQUALS NEW MAPA LPAREN RPAREN pto_coma .)


state 101

    (39) elementosMapa -> num_cadena DOSPTO num_cadena COMA . elementosMapa
    (38) elementosMapa -> . num_cadena DOSPTO num_cadena
    (39) elementosMapa -> . num_cadena DOSPTO num_cadena COMA elementosMapa
    (27) num_cadena -> . NUMBER
    (28) num_cadena -> . CADENA

    NUMBER          shift and go to state 67
    CADENA          shift and go to state 68

    num_cadena                     shift and go to state 70
    elementosMapa                  shift and go to state 104

state 102

    (48) concatenacion -> VAR ID EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA . NUMBER RPAREN pto_coma

    NUMBER          shift and go to state 105


state 103

    (22) expLista -> VAR ID EQUALS NEW LISTA LPAREN NUMBER RPAREN pto_coma .

    $end            reduce using rule 22 (expLista -> VAR ID EQUALS NEW LISTA LPAREN NUMBER RPAREN pto_coma .)


state 104

    (39) elementosMapa -> num_cadena DOSPTO num_cadena COMA elementosMapa .

    RCURLYB         reduce using rule 39 (elementosMapa -> num_cadena DOSPTO num_cadena COMA elementosMapa .)


state 105

    (48) concatenacion -> VAR ID EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER . RPAREN pto_coma

    RPAREN          shift and go to state 106


state 106

    (48) concatenacion -> VAR ID EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN . pto_coma
    (49) pto_coma -> . PUNTCOM

    PUNTCOM         shift and go to state 27

    pto_coma                       shift and go to state 107

state 107

    (48) concatenacion -> VAR ID EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN pto_coma .

    $end            reduce using rule 48 (concatenacion -> VAR ID EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN pto_coma .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 73 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 73 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 73 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 73 resolved as shift
WARNING: shift/reduce conflict for DIVIDE_E in state 73 resolved as shift
