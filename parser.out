Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    COMIILLATS
    COMILLAD
    COMILLAS
    COMILLATD
    NOT
    OR
    PRINT
    PUT
    UPDATE
    VARDOUBLE

Grammar

Rule 0     S' -> expresion
Rule 1     expresion -> lista
Rule 2     expresion -> mapa
Rule 3     expresion -> variable
Rule 4     expresion -> expresionFor
Rule 5     expresion -> expresionWhile
Rule 6     expresion -> concatenacion
Rule 7     expresion -> incremento
Rule 8     expresion -> decremento
Rule 9     variable -> VAR ID EQUALS expresionVar PUNTCOM
Rule 10    variable -> VAR ID PUNTCOM
Rule 11    variable -> expresionBool
Rule 12    valorVar -> NUMBER
Rule 13    valorVar -> DOUBLE
Rule 14    valorVar -> CADENA
Rule 15    expresionVar -> valorVar
Rule 16    expresionVar -> ID
Rule 17    expresionVar -> expresionVar operadorA expresionVar
Rule 18    expresionFor -> FOR LPAREN forParameters RPAREN LCURLYB RCURLYB
Rule 19    forParameters -> forIterator PUNTCOM forCondition PUNTCOM forAction
Rule 20    forIterator -> INT ID EQUALS NUMBER
Rule 21    forIterator -> ID EQUALS NUMBER
Rule 22    forCondition -> ID MAYORQUE NUMBER
Rule 23    forCondition -> ID MENORQUE NUMBER
Rule 24    forAction -> ID INCREMENTO
Rule 25    forAction -> ID DECREMENTO
Rule 26    forAction -> INCREMENTO ID
Rule 27    forAction -> DECREMENTO ID
Rule 28    expresionWhile -> WHILE LPAREN booleano RPAREN LCURLYB RCURLYB
Rule 29    expresionBool -> VARBOOL ID EQUALS booleano pto_coma
Rule 30    expresionBool -> VAR ID EQUALS booleano pto_coma
Rule 31    booleano -> TRUE
Rule 32    booleano -> FALSE
Rule 33    lista -> expLista
Rule 34    lista -> add_lista
Rule 35    expLista -> VAR ID EQUALS NEW LISTA LPAREN NUMBER RPAREN pto_coma
Rule 36    expLista -> VAR ID EQUALS NEW LISTA LPAREN RPAREN pto_coma
Rule 37    expLista -> VAR ID EQUALS LCORCHETE elementosLista RCORCHETE pto_coma
Rule 38    add_lista -> ID LCORCHETE NUMBER RCORCHETE EQUALS num_cadena pto_coma
Rule 39    add_lista -> ID PTO ADD LPAREN num_cadena RPAREN pto_coma
Rule 40    num_cadena -> NUMBER
Rule 41    num_cadena -> CADENA
Rule 42    elementosLista -> CADENA
Rule 43    elementosLista -> NUMBER
Rule 44    elementosLista -> CADENA COMA elementosLista
Rule 45    elementosLista -> NUMBER COMA elementosLista
Rule 46    elementosLista -> <empty>
Rule 47    mapa -> expMapa
Rule 48    mapa -> add_mapa
Rule 49    expMapa -> VAR ID EQUALS NEW MAPA LPAREN RPAREN pto_coma
Rule 50    expMapa -> MAPA ID EQUALS LCURLYB elementosMapa RCURLYB pto_coma
Rule 51    elementosMapa -> num_cadena DOSPTO num_cadena
Rule 52    elementosMapa -> num_cadena DOSPTO num_cadena COMA elementosMapa
Rule 53    add_mapa -> ID LCORCHETE CADENA RCORCHETE EQUALS CADENA pto_coma
Rule 54    operadorA -> PLUS
Rule 55    operadorA -> MINUS
Rule 56    operadorA -> TIMES
Rule 57    operadorA -> DIVIDE
Rule 58    operadorA -> DIVIDE_E
Rule 59    incremento -> ID INCREMENTO pto_coma
Rule 60    decremento -> ID DECREMENTO pto_coma
Rule 61    concatenacion -> VAR ID EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN pto_coma
Rule 62    pto_coma -> PUNTCOM

Terminals, with rules where they appear

ADD                  : 39
AND                  : 
CADENA               : 14 41 42 44 53 53
COMA                 : 44 45 52 61
COMIILLATS           : 
COMILLAD             : 
COMILLAS             : 
COMILLATD            : 
DECREMENTO           : 25 27 60
DIVIDE               : 57
DIVIDE_E             : 58
DOSPTO               : 51 52
DOUBLE               : 13
EQUALS               : 9 20 21 29 30 35 36 37 38 49 50 53 61
FALSE                : 32
FOR                  : 18
ID                   : 9 10 16 20 21 22 23 24 25 26 27 29 30 35 36 37 38 39 49 50 53 59 60 61 61
INCREMENTO           : 24 26 59
INT                  : 20
LCORCHETE            : 37 38 53
LCURLYB              : 18 28 50
LISTA                : 35 36
LPAREN               : 18 28 35 36 39 49 61
MAPA                 : 49 50
MAYORQUE             : 22
MENORQUE             : 23
MINUS                : 55
NEW                  : 35 36 49
NOT                  : 
NUMBER               : 12 20 21 22 23 35 38 40 43 45 61 61
OR                   : 
PLUS                 : 54
PRINT                : 
PTO                  : 39 61
PUNTCOM              : 9 10 19 19 62
PUT                  : 
RCORCHETE            : 37 38 53
RCURLYB              : 18 28 50
RPAREN               : 18 28 35 36 39 49 61
SUBSTRING            : 61
TIMES                : 56
TRUE                 : 31
UPDATE               : 
VAR                  : 9 10 30 35 36 37 49 61
VARBOOL              : 29
VARDOUBLE            : 
WHILE                : 28
error                : 

Nonterminals, with rules where they appear

add_lista            : 34
add_mapa             : 48
booleano             : 28 29 30
concatenacion        : 6
decremento           : 8
elementosLista       : 37 44 45
elementosMapa        : 50 52
expLista             : 33
expMapa              : 47
expresion            : 0
expresionBool        : 11
expresionFor         : 4
expresionVar         : 9 17 17
expresionWhile       : 5
forAction            : 19
forCondition         : 19
forIterator          : 19
forParameters        : 18
incremento           : 7
lista                : 1
mapa                 : 2
num_cadena           : 38 39 51 51 52 52
operadorA            : 17
pto_coma             : 29 30 35 36 37 38 39 49 50 53 59 60 61
valorVar             : 15
variable             : 3

Parsing method: LALR

state 0

    (0) S' -> . expresion
    (1) expresion -> . lista
    (2) expresion -> . mapa
    (3) expresion -> . variable
    (4) expresion -> . expresionFor
    (5) expresion -> . expresionWhile
    (6) expresion -> . concatenacion
    (7) expresion -> . incremento
    (8) expresion -> . decremento
    (33) lista -> . expLista
    (34) lista -> . add_lista
    (47) mapa -> . expMapa
    (48) mapa -> . add_mapa
    (9) variable -> . VAR ID EQUALS expresionVar PUNTCOM
    (10) variable -> . VAR ID PUNTCOM
    (11) variable -> . expresionBool
    (18) expresionFor -> . FOR LPAREN forParameters RPAREN LCURLYB RCURLYB
    (28) expresionWhile -> . WHILE LPAREN booleano RPAREN LCURLYB RCURLYB
    (61) concatenacion -> . VAR ID EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN pto_coma
    (59) incremento -> . ID INCREMENTO pto_coma
    (60) decremento -> . ID DECREMENTO pto_coma
    (35) expLista -> . VAR ID EQUALS NEW LISTA LPAREN NUMBER RPAREN pto_coma
    (36) expLista -> . VAR ID EQUALS NEW LISTA LPAREN RPAREN pto_coma
    (37) expLista -> . VAR ID EQUALS LCORCHETE elementosLista RCORCHETE pto_coma
    (38) add_lista -> . ID LCORCHETE NUMBER RCORCHETE EQUALS num_cadena pto_coma
    (39) add_lista -> . ID PTO ADD LPAREN num_cadena RPAREN pto_coma
    (49) expMapa -> . VAR ID EQUALS NEW MAPA LPAREN RPAREN pto_coma
    (50) expMapa -> . MAPA ID EQUALS LCURLYB elementosMapa RCURLYB pto_coma
    (53) add_mapa -> . ID LCORCHETE CADENA RCORCHETE EQUALS CADENA pto_coma
    (29) expresionBool -> . VARBOOL ID EQUALS booleano pto_coma
    (30) expresionBool -> . VAR ID EQUALS booleano pto_coma

    VAR             shift and go to state 14
    FOR             shift and go to state 17
    WHILE           shift and go to state 18
    ID              shift and go to state 15
    MAPA            shift and go to state 19
    VARBOOL         shift and go to state 20

    expresion                      shift and go to state 1
    lista                          shift and go to state 2
    mapa                           shift and go to state 3
    variable                       shift and go to state 4
    expresionFor                   shift and go to state 5
    expresionWhile                 shift and go to state 6
    concatenacion                  shift and go to state 7
    incremento                     shift and go to state 8
    decremento                     shift and go to state 9
    expLista                       shift and go to state 10
    add_lista                      shift and go to state 11
    expMapa                        shift and go to state 12
    add_mapa                       shift and go to state 13
    expresionBool                  shift and go to state 16

state 1

    (0) S' -> expresion .



state 2

    (1) expresion -> lista .

    $end            reduce using rule 1 (expresion -> lista .)


state 3

    (2) expresion -> mapa .

    $end            reduce using rule 2 (expresion -> mapa .)


state 4

    (3) expresion -> variable .

    $end            reduce using rule 3 (expresion -> variable .)


state 5

    (4) expresion -> expresionFor .

    $end            reduce using rule 4 (expresion -> expresionFor .)


state 6

    (5) expresion -> expresionWhile .

    $end            reduce using rule 5 (expresion -> expresionWhile .)


state 7

    (6) expresion -> concatenacion .

    $end            reduce using rule 6 (expresion -> concatenacion .)


state 8

    (7) expresion -> incremento .

    $end            reduce using rule 7 (expresion -> incremento .)


state 9

    (8) expresion -> decremento .

    $end            reduce using rule 8 (expresion -> decremento .)


state 10

    (33) lista -> expLista .

    $end            reduce using rule 33 (lista -> expLista .)


state 11

    (34) lista -> add_lista .

    $end            reduce using rule 34 (lista -> add_lista .)


state 12

    (47) mapa -> expMapa .

    $end            reduce using rule 47 (mapa -> expMapa .)


state 13

    (48) mapa -> add_mapa .

    $end            reduce using rule 48 (mapa -> add_mapa .)


state 14

    (9) variable -> VAR . ID EQUALS expresionVar PUNTCOM
    (10) variable -> VAR . ID PUNTCOM
    (61) concatenacion -> VAR . ID EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN pto_coma
    (35) expLista -> VAR . ID EQUALS NEW LISTA LPAREN NUMBER RPAREN pto_coma
    (36) expLista -> VAR . ID EQUALS NEW LISTA LPAREN RPAREN pto_coma
    (37) expLista -> VAR . ID EQUALS LCORCHETE elementosLista RCORCHETE pto_coma
    (49) expMapa -> VAR . ID EQUALS NEW MAPA LPAREN RPAREN pto_coma
    (30) expresionBool -> VAR . ID EQUALS booleano pto_coma

    ID              shift and go to state 21


state 15

    (59) incremento -> ID . INCREMENTO pto_coma
    (60) decremento -> ID . DECREMENTO pto_coma
    (38) add_lista -> ID . LCORCHETE NUMBER RCORCHETE EQUALS num_cadena pto_coma
    (39) add_lista -> ID . PTO ADD LPAREN num_cadena RPAREN pto_coma
    (53) add_mapa -> ID . LCORCHETE CADENA RCORCHETE EQUALS CADENA pto_coma

    INCREMENTO      shift and go to state 22
    DECREMENTO      shift and go to state 23
    LCORCHETE       shift and go to state 24
    PTO             shift and go to state 25


state 16

    (11) variable -> expresionBool .

    $end            reduce using rule 11 (variable -> expresionBool .)


state 17

    (18) expresionFor -> FOR . LPAREN forParameters RPAREN LCURLYB RCURLYB

    LPAREN          shift and go to state 26


state 18

    (28) expresionWhile -> WHILE . LPAREN booleano RPAREN LCURLYB RCURLYB

    LPAREN          shift and go to state 27


state 19

    (50) expMapa -> MAPA . ID EQUALS LCURLYB elementosMapa RCURLYB pto_coma

    ID              shift and go to state 28


state 20

    (29) expresionBool -> VARBOOL . ID EQUALS booleano pto_coma

    ID              shift and go to state 29


state 21

    (9) variable -> VAR ID . EQUALS expresionVar PUNTCOM
    (10) variable -> VAR ID . PUNTCOM
    (61) concatenacion -> VAR ID . EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN pto_coma
    (35) expLista -> VAR ID . EQUALS NEW LISTA LPAREN NUMBER RPAREN pto_coma
    (36) expLista -> VAR ID . EQUALS NEW LISTA LPAREN RPAREN pto_coma
    (37) expLista -> VAR ID . EQUALS LCORCHETE elementosLista RCORCHETE pto_coma
    (49) expMapa -> VAR ID . EQUALS NEW MAPA LPAREN RPAREN pto_coma
    (30) expresionBool -> VAR ID . EQUALS booleano pto_coma

    EQUALS          shift and go to state 30
    PUNTCOM         shift and go to state 31


state 22

    (59) incremento -> ID INCREMENTO . pto_coma
    (62) pto_coma -> . PUNTCOM

    PUNTCOM         shift and go to state 33

    pto_coma                       shift and go to state 32

state 23

    (60) decremento -> ID DECREMENTO . pto_coma
    (62) pto_coma -> . PUNTCOM

    PUNTCOM         shift and go to state 33

    pto_coma                       shift and go to state 34

state 24

    (38) add_lista -> ID LCORCHETE . NUMBER RCORCHETE EQUALS num_cadena pto_coma
    (53) add_mapa -> ID LCORCHETE . CADENA RCORCHETE EQUALS CADENA pto_coma

    NUMBER          shift and go to state 35
    CADENA          shift and go to state 36


state 25

    (39) add_lista -> ID PTO . ADD LPAREN num_cadena RPAREN pto_coma

    ADD             shift and go to state 37


state 26

    (18) expresionFor -> FOR LPAREN . forParameters RPAREN LCURLYB RCURLYB
    (19) forParameters -> . forIterator PUNTCOM forCondition PUNTCOM forAction
    (20) forIterator -> . INT ID EQUALS NUMBER
    (21) forIterator -> . ID EQUALS NUMBER

    INT             shift and go to state 40
    ID              shift and go to state 41

    forParameters                  shift and go to state 38
    forIterator                    shift and go to state 39

state 27

    (28) expresionWhile -> WHILE LPAREN . booleano RPAREN LCURLYB RCURLYB
    (31) booleano -> . TRUE
    (32) booleano -> . FALSE

    TRUE            shift and go to state 43
    FALSE           shift and go to state 44

    booleano                       shift and go to state 42

state 28

    (50) expMapa -> MAPA ID . EQUALS LCURLYB elementosMapa RCURLYB pto_coma

    EQUALS          shift and go to state 45


state 29

    (29) expresionBool -> VARBOOL ID . EQUALS booleano pto_coma

    EQUALS          shift and go to state 46


state 30

    (9) variable -> VAR ID EQUALS . expresionVar PUNTCOM
    (61) concatenacion -> VAR ID EQUALS . ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN pto_coma
    (35) expLista -> VAR ID EQUALS . NEW LISTA LPAREN NUMBER RPAREN pto_coma
    (36) expLista -> VAR ID EQUALS . NEW LISTA LPAREN RPAREN pto_coma
    (37) expLista -> VAR ID EQUALS . LCORCHETE elementosLista RCORCHETE pto_coma
    (49) expMapa -> VAR ID EQUALS . NEW MAPA LPAREN RPAREN pto_coma
    (30) expresionBool -> VAR ID EQUALS . booleano pto_coma
    (15) expresionVar -> . valorVar
    (16) expresionVar -> . ID
    (17) expresionVar -> . expresionVar operadorA expresionVar
    (31) booleano -> . TRUE
    (32) booleano -> . FALSE
    (12) valorVar -> . NUMBER
    (13) valorVar -> . DOUBLE
    (14) valorVar -> . CADENA

    ID              shift and go to state 47
    NEW             shift and go to state 50
    LCORCHETE       shift and go to state 51
    TRUE            shift and go to state 43
    FALSE           shift and go to state 44
    NUMBER          shift and go to state 49
    DOUBLE          shift and go to state 54
    CADENA          shift and go to state 55

    expresionVar                   shift and go to state 48
    booleano                       shift and go to state 52
    valorVar                       shift and go to state 53

state 31

    (10) variable -> VAR ID PUNTCOM .

    $end            reduce using rule 10 (variable -> VAR ID PUNTCOM .)


state 32

    (59) incremento -> ID INCREMENTO pto_coma .

    $end            reduce using rule 59 (incremento -> ID INCREMENTO pto_coma .)


state 33

    (62) pto_coma -> PUNTCOM .

    $end            reduce using rule 62 (pto_coma -> PUNTCOM .)


state 34

    (60) decremento -> ID DECREMENTO pto_coma .

    $end            reduce using rule 60 (decremento -> ID DECREMENTO pto_coma .)


state 35

    (38) add_lista -> ID LCORCHETE NUMBER . RCORCHETE EQUALS num_cadena pto_coma

    RCORCHETE       shift and go to state 56


state 36

    (53) add_mapa -> ID LCORCHETE CADENA . RCORCHETE EQUALS CADENA pto_coma

    RCORCHETE       shift and go to state 57


state 37

    (39) add_lista -> ID PTO ADD . LPAREN num_cadena RPAREN pto_coma

    LPAREN          shift and go to state 58


state 38

    (18) expresionFor -> FOR LPAREN forParameters . RPAREN LCURLYB RCURLYB

    RPAREN          shift and go to state 59


state 39

    (19) forParameters -> forIterator . PUNTCOM forCondition PUNTCOM forAction

    PUNTCOM         shift and go to state 60


state 40

    (20) forIterator -> INT . ID EQUALS NUMBER

    ID              shift and go to state 61


state 41

    (21) forIterator -> ID . EQUALS NUMBER

    EQUALS          shift and go to state 62


state 42

    (28) expresionWhile -> WHILE LPAREN booleano . RPAREN LCURLYB RCURLYB

    RPAREN          shift and go to state 63


state 43

    (31) booleano -> TRUE .

    RPAREN          reduce using rule 31 (booleano -> TRUE .)
    PUNTCOM         reduce using rule 31 (booleano -> TRUE .)


state 44

    (32) booleano -> FALSE .

    RPAREN          reduce using rule 32 (booleano -> FALSE .)
    PUNTCOM         reduce using rule 32 (booleano -> FALSE .)


state 45

    (50) expMapa -> MAPA ID EQUALS . LCURLYB elementosMapa RCURLYB pto_coma

    LCURLYB         shift and go to state 64


state 46

    (29) expresionBool -> VARBOOL ID EQUALS . booleano pto_coma
    (31) booleano -> . TRUE
    (32) booleano -> . FALSE

    TRUE            shift and go to state 43
    FALSE           shift and go to state 44

    booleano                       shift and go to state 65

state 47

    (61) concatenacion -> VAR ID EQUALS ID . PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN pto_coma
    (16) expresionVar -> ID .

    PTO             shift and go to state 66
    PUNTCOM         reduce using rule 16 (expresionVar -> ID .)
    PLUS            reduce using rule 16 (expresionVar -> ID .)
    MINUS           reduce using rule 16 (expresionVar -> ID .)
    TIMES           reduce using rule 16 (expresionVar -> ID .)
    DIVIDE          reduce using rule 16 (expresionVar -> ID .)
    DIVIDE_E        reduce using rule 16 (expresionVar -> ID .)


state 48

    (9) variable -> VAR ID EQUALS expresionVar . PUNTCOM
    (17) expresionVar -> expresionVar . operadorA expresionVar
    (54) operadorA -> . PLUS
    (55) operadorA -> . MINUS
    (56) operadorA -> . TIMES
    (57) operadorA -> . DIVIDE
    (58) operadorA -> . DIVIDE_E

    PUNTCOM         shift and go to state 67
    PLUS            shift and go to state 69
    MINUS           shift and go to state 70
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 72
    DIVIDE_E        shift and go to state 73

    operadorA                      shift and go to state 68

state 49

    (12) valorVar -> NUMBER .

    PUNTCOM         reduce using rule 12 (valorVar -> NUMBER .)
    PLUS            reduce using rule 12 (valorVar -> NUMBER .)
    MINUS           reduce using rule 12 (valorVar -> NUMBER .)
    TIMES           reduce using rule 12 (valorVar -> NUMBER .)
    DIVIDE          reduce using rule 12 (valorVar -> NUMBER .)
    DIVIDE_E        reduce using rule 12 (valorVar -> NUMBER .)


state 50

    (35) expLista -> VAR ID EQUALS NEW . LISTA LPAREN NUMBER RPAREN pto_coma
    (36) expLista -> VAR ID EQUALS NEW . LISTA LPAREN RPAREN pto_coma
    (49) expMapa -> VAR ID EQUALS NEW . MAPA LPAREN RPAREN pto_coma

    LISTA           shift and go to state 74
    MAPA            shift and go to state 75


state 51

    (37) expLista -> VAR ID EQUALS LCORCHETE . elementosLista RCORCHETE pto_coma
    (42) elementosLista -> . CADENA
    (43) elementosLista -> . NUMBER
    (44) elementosLista -> . CADENA COMA elementosLista
    (45) elementosLista -> . NUMBER COMA elementosLista
    (46) elementosLista -> .

    CADENA          shift and go to state 77
    NUMBER          shift and go to state 78
    RCORCHETE       reduce using rule 46 (elementosLista -> .)

    elementosLista                 shift and go to state 76

state 52

    (30) expresionBool -> VAR ID EQUALS booleano . pto_coma
    (62) pto_coma -> . PUNTCOM

    PUNTCOM         shift and go to state 33

    pto_coma                       shift and go to state 79

state 53

    (15) expresionVar -> valorVar .

    PUNTCOM         reduce using rule 15 (expresionVar -> valorVar .)
    PLUS            reduce using rule 15 (expresionVar -> valorVar .)
    MINUS           reduce using rule 15 (expresionVar -> valorVar .)
    TIMES           reduce using rule 15 (expresionVar -> valorVar .)
    DIVIDE          reduce using rule 15 (expresionVar -> valorVar .)
    DIVIDE_E        reduce using rule 15 (expresionVar -> valorVar .)


state 54

    (13) valorVar -> DOUBLE .

    PUNTCOM         reduce using rule 13 (valorVar -> DOUBLE .)
    PLUS            reduce using rule 13 (valorVar -> DOUBLE .)
    MINUS           reduce using rule 13 (valorVar -> DOUBLE .)
    TIMES           reduce using rule 13 (valorVar -> DOUBLE .)
    DIVIDE          reduce using rule 13 (valorVar -> DOUBLE .)
    DIVIDE_E        reduce using rule 13 (valorVar -> DOUBLE .)


state 55

    (14) valorVar -> CADENA .

    PUNTCOM         reduce using rule 14 (valorVar -> CADENA .)
    PLUS            reduce using rule 14 (valorVar -> CADENA .)
    MINUS           reduce using rule 14 (valorVar -> CADENA .)
    TIMES           reduce using rule 14 (valorVar -> CADENA .)
    DIVIDE          reduce using rule 14 (valorVar -> CADENA .)
    DIVIDE_E        reduce using rule 14 (valorVar -> CADENA .)


state 56

    (38) add_lista -> ID LCORCHETE NUMBER RCORCHETE . EQUALS num_cadena pto_coma

    EQUALS          shift and go to state 80


state 57

    (53) add_mapa -> ID LCORCHETE CADENA RCORCHETE . EQUALS CADENA pto_coma

    EQUALS          shift and go to state 81


state 58

    (39) add_lista -> ID PTO ADD LPAREN . num_cadena RPAREN pto_coma
    (40) num_cadena -> . NUMBER
    (41) num_cadena -> . CADENA

    NUMBER          shift and go to state 83
    CADENA          shift and go to state 84

    num_cadena                     shift and go to state 82

state 59

    (18) expresionFor -> FOR LPAREN forParameters RPAREN . LCURLYB RCURLYB

    LCURLYB         shift and go to state 85


state 60

    (19) forParameters -> forIterator PUNTCOM . forCondition PUNTCOM forAction
    (22) forCondition -> . ID MAYORQUE NUMBER
    (23) forCondition -> . ID MENORQUE NUMBER

    ID              shift and go to state 87

    forCondition                   shift and go to state 86

state 61

    (20) forIterator -> INT ID . EQUALS NUMBER

    EQUALS          shift and go to state 88


state 62

    (21) forIterator -> ID EQUALS . NUMBER

    NUMBER          shift and go to state 89


state 63

    (28) expresionWhile -> WHILE LPAREN booleano RPAREN . LCURLYB RCURLYB

    LCURLYB         shift and go to state 90


state 64

    (50) expMapa -> MAPA ID EQUALS LCURLYB . elementosMapa RCURLYB pto_coma
    (51) elementosMapa -> . num_cadena DOSPTO num_cadena
    (52) elementosMapa -> . num_cadena DOSPTO num_cadena COMA elementosMapa
    (40) num_cadena -> . NUMBER
    (41) num_cadena -> . CADENA

    NUMBER          shift and go to state 83
    CADENA          shift and go to state 84

    elementosMapa                  shift and go to state 91
    num_cadena                     shift and go to state 92

state 65

    (29) expresionBool -> VARBOOL ID EQUALS booleano . pto_coma
    (62) pto_coma -> . PUNTCOM

    PUNTCOM         shift and go to state 33

    pto_coma                       shift and go to state 93

state 66

    (61) concatenacion -> VAR ID EQUALS ID PTO . SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN pto_coma

    SUBSTRING       shift and go to state 94


state 67

    (9) variable -> VAR ID EQUALS expresionVar PUNTCOM .

    $end            reduce using rule 9 (variable -> VAR ID EQUALS expresionVar PUNTCOM .)


state 68

    (17) expresionVar -> expresionVar operadorA . expresionVar
    (15) expresionVar -> . valorVar
    (16) expresionVar -> . ID
    (17) expresionVar -> . expresionVar operadorA expresionVar
    (12) valorVar -> . NUMBER
    (13) valorVar -> . DOUBLE
    (14) valorVar -> . CADENA

    ID              shift and go to state 96
    NUMBER          shift and go to state 49
    DOUBLE          shift and go to state 54
    CADENA          shift and go to state 55

    expresionVar                   shift and go to state 95
    valorVar                       shift and go to state 53

state 69

    (54) operadorA -> PLUS .

    ID              reduce using rule 54 (operadorA -> PLUS .)
    NUMBER          reduce using rule 54 (operadorA -> PLUS .)
    DOUBLE          reduce using rule 54 (operadorA -> PLUS .)
    CADENA          reduce using rule 54 (operadorA -> PLUS .)


state 70

    (55) operadorA -> MINUS .

    ID              reduce using rule 55 (operadorA -> MINUS .)
    NUMBER          reduce using rule 55 (operadorA -> MINUS .)
    DOUBLE          reduce using rule 55 (operadorA -> MINUS .)
    CADENA          reduce using rule 55 (operadorA -> MINUS .)


state 71

    (56) operadorA -> TIMES .

    ID              reduce using rule 56 (operadorA -> TIMES .)
    NUMBER          reduce using rule 56 (operadorA -> TIMES .)
    DOUBLE          reduce using rule 56 (operadorA -> TIMES .)
    CADENA          reduce using rule 56 (operadorA -> TIMES .)


state 72

    (57) operadorA -> DIVIDE .

    ID              reduce using rule 57 (operadorA -> DIVIDE .)
    NUMBER          reduce using rule 57 (operadorA -> DIVIDE .)
    DOUBLE          reduce using rule 57 (operadorA -> DIVIDE .)
    CADENA          reduce using rule 57 (operadorA -> DIVIDE .)


state 73

    (58) operadorA -> DIVIDE_E .

    ID              reduce using rule 58 (operadorA -> DIVIDE_E .)
    NUMBER          reduce using rule 58 (operadorA -> DIVIDE_E .)
    DOUBLE          reduce using rule 58 (operadorA -> DIVIDE_E .)
    CADENA          reduce using rule 58 (operadorA -> DIVIDE_E .)


state 74

    (35) expLista -> VAR ID EQUALS NEW LISTA . LPAREN NUMBER RPAREN pto_coma
    (36) expLista -> VAR ID EQUALS NEW LISTA . LPAREN RPAREN pto_coma

    LPAREN          shift and go to state 97


state 75

    (49) expMapa -> VAR ID EQUALS NEW MAPA . LPAREN RPAREN pto_coma

    LPAREN          shift and go to state 98


state 76

    (37) expLista -> VAR ID EQUALS LCORCHETE elementosLista . RCORCHETE pto_coma

    RCORCHETE       shift and go to state 99


state 77

    (42) elementosLista -> CADENA .
    (44) elementosLista -> CADENA . COMA elementosLista

    RCORCHETE       reduce using rule 42 (elementosLista -> CADENA .)
    COMA            shift and go to state 100


state 78

    (43) elementosLista -> NUMBER .
    (45) elementosLista -> NUMBER . COMA elementosLista

    RCORCHETE       reduce using rule 43 (elementosLista -> NUMBER .)
    COMA            shift and go to state 101


state 79

    (30) expresionBool -> VAR ID EQUALS booleano pto_coma .

    $end            reduce using rule 30 (expresionBool -> VAR ID EQUALS booleano pto_coma .)


state 80

    (38) add_lista -> ID LCORCHETE NUMBER RCORCHETE EQUALS . num_cadena pto_coma
    (40) num_cadena -> . NUMBER
    (41) num_cadena -> . CADENA

    NUMBER          shift and go to state 83
    CADENA          shift and go to state 84

    num_cadena                     shift and go to state 102

state 81

    (53) add_mapa -> ID LCORCHETE CADENA RCORCHETE EQUALS . CADENA pto_coma

    CADENA          shift and go to state 103


state 82

    (39) add_lista -> ID PTO ADD LPAREN num_cadena . RPAREN pto_coma

    RPAREN          shift and go to state 104


state 83

    (40) num_cadena -> NUMBER .

    RPAREN          reduce using rule 40 (num_cadena -> NUMBER .)
    DOSPTO          reduce using rule 40 (num_cadena -> NUMBER .)
    PUNTCOM         reduce using rule 40 (num_cadena -> NUMBER .)
    COMA            reduce using rule 40 (num_cadena -> NUMBER .)
    RCURLYB         reduce using rule 40 (num_cadena -> NUMBER .)


state 84

    (41) num_cadena -> CADENA .

    RPAREN          reduce using rule 41 (num_cadena -> CADENA .)
    DOSPTO          reduce using rule 41 (num_cadena -> CADENA .)
    PUNTCOM         reduce using rule 41 (num_cadena -> CADENA .)
    COMA            reduce using rule 41 (num_cadena -> CADENA .)
    RCURLYB         reduce using rule 41 (num_cadena -> CADENA .)


state 85

    (18) expresionFor -> FOR LPAREN forParameters RPAREN LCURLYB . RCURLYB

    RCURLYB         shift and go to state 105


state 86

    (19) forParameters -> forIterator PUNTCOM forCondition . PUNTCOM forAction

    PUNTCOM         shift and go to state 106


state 87

    (22) forCondition -> ID . MAYORQUE NUMBER
    (23) forCondition -> ID . MENORQUE NUMBER

    MAYORQUE        shift and go to state 107
    MENORQUE        shift and go to state 108


state 88

    (20) forIterator -> INT ID EQUALS . NUMBER

    NUMBER          shift and go to state 109


state 89

    (21) forIterator -> ID EQUALS NUMBER .

    PUNTCOM         reduce using rule 21 (forIterator -> ID EQUALS NUMBER .)


state 90

    (28) expresionWhile -> WHILE LPAREN booleano RPAREN LCURLYB . RCURLYB

    RCURLYB         shift and go to state 110


state 91

    (50) expMapa -> MAPA ID EQUALS LCURLYB elementosMapa . RCURLYB pto_coma

    RCURLYB         shift and go to state 111


state 92

    (51) elementosMapa -> num_cadena . DOSPTO num_cadena
    (52) elementosMapa -> num_cadena . DOSPTO num_cadena COMA elementosMapa

    DOSPTO          shift and go to state 112


state 93

    (29) expresionBool -> VARBOOL ID EQUALS booleano pto_coma .

    $end            reduce using rule 29 (expresionBool -> VARBOOL ID EQUALS booleano pto_coma .)


state 94

    (61) concatenacion -> VAR ID EQUALS ID PTO SUBSTRING . LPAREN NUMBER COMA NUMBER RPAREN pto_coma

    LPAREN          shift and go to state 113


state 95

    (17) expresionVar -> expresionVar operadorA expresionVar .
    (17) expresionVar -> expresionVar . operadorA expresionVar
    (54) operadorA -> . PLUS
    (55) operadorA -> . MINUS
    (56) operadorA -> . TIMES
    (57) operadorA -> . DIVIDE
    (58) operadorA -> . DIVIDE_E

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for DIVIDE_E resolved as shift
    PUNTCOM         reduce using rule 17 (expresionVar -> expresionVar operadorA expresionVar .)
    PLUS            shift and go to state 69
    MINUS           shift and go to state 70
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 72
    DIVIDE_E        shift and go to state 73

  ! PLUS            [ reduce using rule 17 (expresionVar -> expresionVar operadorA expresionVar .) ]
  ! MINUS           [ reduce using rule 17 (expresionVar -> expresionVar operadorA expresionVar .) ]
  ! TIMES           [ reduce using rule 17 (expresionVar -> expresionVar operadorA expresionVar .) ]
  ! DIVIDE          [ reduce using rule 17 (expresionVar -> expresionVar operadorA expresionVar .) ]
  ! DIVIDE_E        [ reduce using rule 17 (expresionVar -> expresionVar operadorA expresionVar .) ]

    operadorA                      shift and go to state 68

state 96

    (16) expresionVar -> ID .

    PLUS            reduce using rule 16 (expresionVar -> ID .)
    MINUS           reduce using rule 16 (expresionVar -> ID .)
    TIMES           reduce using rule 16 (expresionVar -> ID .)
    DIVIDE          reduce using rule 16 (expresionVar -> ID .)
    DIVIDE_E        reduce using rule 16 (expresionVar -> ID .)
    PUNTCOM         reduce using rule 16 (expresionVar -> ID .)


state 97

    (35) expLista -> VAR ID EQUALS NEW LISTA LPAREN . NUMBER RPAREN pto_coma
    (36) expLista -> VAR ID EQUALS NEW LISTA LPAREN . RPAREN pto_coma

    NUMBER          shift and go to state 114
    RPAREN          shift and go to state 115


state 98

    (49) expMapa -> VAR ID EQUALS NEW MAPA LPAREN . RPAREN pto_coma

    RPAREN          shift and go to state 116


state 99

    (37) expLista -> VAR ID EQUALS LCORCHETE elementosLista RCORCHETE . pto_coma
    (62) pto_coma -> . PUNTCOM

    PUNTCOM         shift and go to state 33

    pto_coma                       shift and go to state 117

state 100

    (44) elementosLista -> CADENA COMA . elementosLista
    (42) elementosLista -> . CADENA
    (43) elementosLista -> . NUMBER
    (44) elementosLista -> . CADENA COMA elementosLista
    (45) elementosLista -> . NUMBER COMA elementosLista
    (46) elementosLista -> .

    CADENA          shift and go to state 77
    NUMBER          shift and go to state 78
    RCORCHETE       reduce using rule 46 (elementosLista -> .)

    elementosLista                 shift and go to state 118

state 101

    (45) elementosLista -> NUMBER COMA . elementosLista
    (42) elementosLista -> . CADENA
    (43) elementosLista -> . NUMBER
    (44) elementosLista -> . CADENA COMA elementosLista
    (45) elementosLista -> . NUMBER COMA elementosLista
    (46) elementosLista -> .

    CADENA          shift and go to state 77
    NUMBER          shift and go to state 78
    RCORCHETE       reduce using rule 46 (elementosLista -> .)

    elementosLista                 shift and go to state 119

state 102

    (38) add_lista -> ID LCORCHETE NUMBER RCORCHETE EQUALS num_cadena . pto_coma
    (62) pto_coma -> . PUNTCOM

    PUNTCOM         shift and go to state 33

    pto_coma                       shift and go to state 120

state 103

    (53) add_mapa -> ID LCORCHETE CADENA RCORCHETE EQUALS CADENA . pto_coma
    (62) pto_coma -> . PUNTCOM

    PUNTCOM         shift and go to state 33

    pto_coma                       shift and go to state 121

state 104

    (39) add_lista -> ID PTO ADD LPAREN num_cadena RPAREN . pto_coma
    (62) pto_coma -> . PUNTCOM

    PUNTCOM         shift and go to state 33

    pto_coma                       shift and go to state 122

state 105

    (18) expresionFor -> FOR LPAREN forParameters RPAREN LCURLYB RCURLYB .

    $end            reduce using rule 18 (expresionFor -> FOR LPAREN forParameters RPAREN LCURLYB RCURLYB .)


state 106

    (19) forParameters -> forIterator PUNTCOM forCondition PUNTCOM . forAction
    (24) forAction -> . ID INCREMENTO
    (25) forAction -> . ID DECREMENTO
    (26) forAction -> . INCREMENTO ID
    (27) forAction -> . DECREMENTO ID

    ID              shift and go to state 124
    INCREMENTO      shift and go to state 125
    DECREMENTO      shift and go to state 126

    forAction                      shift and go to state 123

state 107

    (22) forCondition -> ID MAYORQUE . NUMBER

    NUMBER          shift and go to state 127


state 108

    (23) forCondition -> ID MENORQUE . NUMBER

    NUMBER          shift and go to state 128


state 109

    (20) forIterator -> INT ID EQUALS NUMBER .

    PUNTCOM         reduce using rule 20 (forIterator -> INT ID EQUALS NUMBER .)


state 110

    (28) expresionWhile -> WHILE LPAREN booleano RPAREN LCURLYB RCURLYB .

    $end            reduce using rule 28 (expresionWhile -> WHILE LPAREN booleano RPAREN LCURLYB RCURLYB .)


state 111

    (50) expMapa -> MAPA ID EQUALS LCURLYB elementosMapa RCURLYB . pto_coma
    (62) pto_coma -> . PUNTCOM

    PUNTCOM         shift and go to state 33

    pto_coma                       shift and go to state 129

state 112

    (51) elementosMapa -> num_cadena DOSPTO . num_cadena
    (52) elementosMapa -> num_cadena DOSPTO . num_cadena COMA elementosMapa
    (40) num_cadena -> . NUMBER
    (41) num_cadena -> . CADENA

    NUMBER          shift and go to state 83
    CADENA          shift and go to state 84

    num_cadena                     shift and go to state 130

state 113

    (61) concatenacion -> VAR ID EQUALS ID PTO SUBSTRING LPAREN . NUMBER COMA NUMBER RPAREN pto_coma

    NUMBER          shift and go to state 131


state 114

    (35) expLista -> VAR ID EQUALS NEW LISTA LPAREN NUMBER . RPAREN pto_coma

    RPAREN          shift and go to state 132


state 115

    (36) expLista -> VAR ID EQUALS NEW LISTA LPAREN RPAREN . pto_coma
    (62) pto_coma -> . PUNTCOM

    PUNTCOM         shift and go to state 33

    pto_coma                       shift and go to state 133

state 116

    (49) expMapa -> VAR ID EQUALS NEW MAPA LPAREN RPAREN . pto_coma
    (62) pto_coma -> . PUNTCOM

    PUNTCOM         shift and go to state 33

    pto_coma                       shift and go to state 134

state 117

    (37) expLista -> VAR ID EQUALS LCORCHETE elementosLista RCORCHETE pto_coma .

    $end            reduce using rule 37 (expLista -> VAR ID EQUALS LCORCHETE elementosLista RCORCHETE pto_coma .)


state 118

    (44) elementosLista -> CADENA COMA elementosLista .

    RCORCHETE       reduce using rule 44 (elementosLista -> CADENA COMA elementosLista .)


state 119

    (45) elementosLista -> NUMBER COMA elementosLista .

    RCORCHETE       reduce using rule 45 (elementosLista -> NUMBER COMA elementosLista .)


state 120

    (38) add_lista -> ID LCORCHETE NUMBER RCORCHETE EQUALS num_cadena pto_coma .

    $end            reduce using rule 38 (add_lista -> ID LCORCHETE NUMBER RCORCHETE EQUALS num_cadena pto_coma .)


state 121

    (53) add_mapa -> ID LCORCHETE CADENA RCORCHETE EQUALS CADENA pto_coma .

    $end            reduce using rule 53 (add_mapa -> ID LCORCHETE CADENA RCORCHETE EQUALS CADENA pto_coma .)


state 122

    (39) add_lista -> ID PTO ADD LPAREN num_cadena RPAREN pto_coma .

    $end            reduce using rule 39 (add_lista -> ID PTO ADD LPAREN num_cadena RPAREN pto_coma .)


state 123

    (19) forParameters -> forIterator PUNTCOM forCondition PUNTCOM forAction .

    RPAREN          reduce using rule 19 (forParameters -> forIterator PUNTCOM forCondition PUNTCOM forAction .)


state 124

    (24) forAction -> ID . INCREMENTO
    (25) forAction -> ID . DECREMENTO

    INCREMENTO      shift and go to state 135
    DECREMENTO      shift and go to state 136


state 125

    (26) forAction -> INCREMENTO . ID

    ID              shift and go to state 137


state 126

    (27) forAction -> DECREMENTO . ID

    ID              shift and go to state 138


state 127

    (22) forCondition -> ID MAYORQUE NUMBER .

    PUNTCOM         reduce using rule 22 (forCondition -> ID MAYORQUE NUMBER .)


state 128

    (23) forCondition -> ID MENORQUE NUMBER .

    PUNTCOM         reduce using rule 23 (forCondition -> ID MENORQUE NUMBER .)


state 129

    (50) expMapa -> MAPA ID EQUALS LCURLYB elementosMapa RCURLYB pto_coma .

    $end            reduce using rule 50 (expMapa -> MAPA ID EQUALS LCURLYB elementosMapa RCURLYB pto_coma .)


state 130

    (51) elementosMapa -> num_cadena DOSPTO num_cadena .
    (52) elementosMapa -> num_cadena DOSPTO num_cadena . COMA elementosMapa

    RCURLYB         reduce using rule 51 (elementosMapa -> num_cadena DOSPTO num_cadena .)
    COMA            shift and go to state 139


state 131

    (61) concatenacion -> VAR ID EQUALS ID PTO SUBSTRING LPAREN NUMBER . COMA NUMBER RPAREN pto_coma

    COMA            shift and go to state 140


state 132

    (35) expLista -> VAR ID EQUALS NEW LISTA LPAREN NUMBER RPAREN . pto_coma
    (62) pto_coma -> . PUNTCOM

    PUNTCOM         shift and go to state 33

    pto_coma                       shift and go to state 141

state 133

    (36) expLista -> VAR ID EQUALS NEW LISTA LPAREN RPAREN pto_coma .

    $end            reduce using rule 36 (expLista -> VAR ID EQUALS NEW LISTA LPAREN RPAREN pto_coma .)


state 134

    (49) expMapa -> VAR ID EQUALS NEW MAPA LPAREN RPAREN pto_coma .

    $end            reduce using rule 49 (expMapa -> VAR ID EQUALS NEW MAPA LPAREN RPAREN pto_coma .)


state 135

    (24) forAction -> ID INCREMENTO .

    RPAREN          reduce using rule 24 (forAction -> ID INCREMENTO .)


state 136

    (25) forAction -> ID DECREMENTO .

    RPAREN          reduce using rule 25 (forAction -> ID DECREMENTO .)


state 137

    (26) forAction -> INCREMENTO ID .

    RPAREN          reduce using rule 26 (forAction -> INCREMENTO ID .)


state 138

    (27) forAction -> DECREMENTO ID .

    RPAREN          reduce using rule 27 (forAction -> DECREMENTO ID .)


state 139

    (52) elementosMapa -> num_cadena DOSPTO num_cadena COMA . elementosMapa
    (51) elementosMapa -> . num_cadena DOSPTO num_cadena
    (52) elementosMapa -> . num_cadena DOSPTO num_cadena COMA elementosMapa
    (40) num_cadena -> . NUMBER
    (41) num_cadena -> . CADENA

    NUMBER          shift and go to state 83
    CADENA          shift and go to state 84

    num_cadena                     shift and go to state 92
    elementosMapa                  shift and go to state 142

state 140

    (61) concatenacion -> VAR ID EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA . NUMBER RPAREN pto_coma

    NUMBER          shift and go to state 143


state 141

    (35) expLista -> VAR ID EQUALS NEW LISTA LPAREN NUMBER RPAREN pto_coma .

    $end            reduce using rule 35 (expLista -> VAR ID EQUALS NEW LISTA LPAREN NUMBER RPAREN pto_coma .)


state 142

    (52) elementosMapa -> num_cadena DOSPTO num_cadena COMA elementosMapa .

    RCURLYB         reduce using rule 52 (elementosMapa -> num_cadena DOSPTO num_cadena COMA elementosMapa .)


state 143

    (61) concatenacion -> VAR ID EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER . RPAREN pto_coma

    RPAREN          shift and go to state 144


state 144

    (61) concatenacion -> VAR ID EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN . pto_coma
    (62) pto_coma -> . PUNTCOM

    PUNTCOM         shift and go to state 33

    pto_coma                       shift and go to state 145

state 145

    (61) concatenacion -> VAR ID EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN pto_coma .

    $end            reduce using rule 61 (concatenacion -> VAR ID EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN pto_coma .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 95 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 95 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 95 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 95 resolved as shift
WARNING: shift/reduce conflict for DIVIDE_E in state 95 resolved as shift
