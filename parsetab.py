
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ADD AND CADENA COMA DECREMENTO DIVIDE DIVIDE_E DOSPTO DOUBLE EQUALS EQUIVAL FALSE FOR ID IF IFABSENT INCREMENTO INT LCORCHETE LCURLYB LISTA LPAREN MAPA MAYEQ MAYORQUE MENORQUE MINEQ MINUS NEW NOEQUIVAL NOT NUMBER OR PLUS PRINT PTO PUNTCOM PUT RCORCHETE RCURLYB REPLACE RPAREN SUBSTRING TIMES TRUE UPDATE VAR VARBOOL VARDOUBLE VOID WHILEexpresion : lista\n    | mapa\n    | variable\n    | expresionFor\n    | expresionWhile\n    | expresionIf\n    | f_subtring\n    | accPosString\n    | incremento\n    | decremento\n    | print\n    | funcion\n    | concatenar\n    | expresion expresion\n    variable : VAR ID EQUALS expresionVar PUNTCOM\n                | VAR ID PUNTCOM\n                | VAR ID EQUALS expresionBool PUNTCOMvalorVar : NUMBER\n                | DOUBLE\n                | CADENAexpresionVar : valorVar\n                    | ID \n                    | expresionVar operadorA expresionVarexpresionFor : FOR LPAREN forParameters RPAREN LCURLYB expresion RCURLYBforParameters : forIterator PUNTCOM forCondition PUNTCOM forActionforIterator : INT ID EQUALS NUMBER\n                   | ID EQUALS NUMBERforCondition : ID MAYORQUE NUMBER \n                    | ID MENORQUE NUMBER forAction : ID INCREMENTO  \n                 | ID DECREMENTO\n                 | INCREMENTO ID\n                 | DECREMENTO IDexpresionWhile : WHILE LPAREN expresionBool RPAREN LCURLYB expresion RCURLYBexpresionIf : IF LPAREN expresionBool RPAREN LCURLYB expresion RCURLYBexpresionBool : booleano\n                     | ID comparador ID\n                     | ID comparador NUMBER\n                     | NUMBER comparador ID\n                     | NUMBER comparador NUMBER\n                     | NOT ID\n                     | expresionBool comparador expresionBool\n                     | expresionBool EQUIVAL expresionBoolbooleano : TRUE\n                | FALSEcomparador : MAYORQUE \n                  | MENORQUE\n                  | EQUIVAL\n                  | MINEQ\n                  | MAYEQ\n                  | NOEQUIVAL\n                  | AND\n                  | ORlista : expLista\n             | add_lista\n             | replace\n    expLista : VAR ID EQUALS NEW LISTA LPAREN inicializaLista RPAREN PUNTCOM\n                | VAR ID EQUALS LCORCHETE elementosLista RCORCHETE PUNTCOM\n    inicializaLista  : NUMBER\n                        | \n    add_lista : ID LCORCHETE NUMBER RCORCHETE EQUALS num_cadena PUNTCOM\n                 | ID PTO ADD LPAREN elementoAddLista RPAREN PUNTCOM\n    elementoAddLista : num_cadena\n                        | booleano\n    num_cadena : NUMBER\n                | CADENAelementosLista : CADENA\n                      | NUMBER\n                      | CADENA COMA elementosLista\n                      | NUMBER COMA elementosLista\n                      | \n    replace : ID PTO REPLACE LPAREN NUMBER COMA NUMBER COMA LCORCHETE NUMBER RCORCHETE RPAREN PUNTCOM\n    mapa : expMapa\n            | add_mapa\n            | update_mapa\n            | add_mapa_putIfAbsent\n    expMapa : VAR ID EQUALS NEW MAPA LPAREN RPAREN PUNTCOM\n               | MAPA ID EQUALS LCURLYB elementosMapa RCURLYB PUNTCOM\n    elementosMapa : num_cadena DOSPTO num_cadena\n                     | num_cadena DOSPTO num_cadena COMA elementosMapa\n    add_mapa : ID LCORCHETE num_cadena RCORCHETE EQUALS num_cadena PUNTCOM\n    add_mapa_putIfAbsent : ID PTO PUT LPAREN num_cadena COMA LPAREN RPAREN EQUALS MAYORQUE num_cadena RPAREN PUNTCOM\n    update_mapa : ID PTO UPDATE LPAREN CADENA COMA LPAREN VAR ID RPAREN EQUALS MAYORQUE CADENA COMA IFABSENT DOSPTO LPAREN RPAREN EQUALS MAYORQUE CADENA RPAREN PUNTCOM\n    operadorA : PLUS\n                 | MINUS\n                 | TIMES\n                 | DIVIDE\n                 | DIVIDE_E\n    incremento : ID INCREMENTO PUNTCOMdecremento : ID DECREMENTO PUNTCOMf_subtring : VAR ID EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN PUNTCOM\n    accPosString : VAR ID EQUALS ID LCORCHETE NUMBER RCORCHETE PUNTCOM\n    print : PRINT LPAREN printVal RPAREN PUNTCOM\n    printVal : ID\n                | valorVar\n                | expresionBool\n    funcion : VOID ID LPAREN parametroFuncion RPAREN final_key\n    parametroFuncion : VAR ID\n                        | \n    final_key : LCURLYB expresion RCURLYB\n    concatenar : VAR ID EQUALS concatenarRecursivo PUNTCOM\n    concatenarRecursivo : CADENA PLUS CADENA\n                           | PLUS CADENA\n                           | CADENA PLUS concatenarRecursivo\n    '
    
_lr_action_items = {'VAR':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,30,43,44,45,72,115,122,126,140,145,152,153,176,181,182,183,184,189,195,196,197,199,201,208,209,210,211,214,216,224,227,240,244,246,256,],[22,22,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-54,-55,-56,-73,-74,-75,-76,22,-16,-89,-90,111,-15,-17,-101,22,22,22,-93,22,22,22,-97,22,-58,-61,-81,-62,218,-24,-34,-35,22,-78,-92,-77,-100,-57,-91,-72,-82,-83,]),'FOR':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,30,43,44,45,115,122,126,140,145,152,153,176,181,182,183,184,189,195,196,197,201,208,209,210,211,214,216,224,227,240,244,246,256,],[24,24,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-54,-55,-56,-73,-74,-75,-76,24,-16,-89,-90,-15,-17,-101,24,24,24,-93,24,24,24,-97,24,-58,-61,-81,-62,-24,-34,-35,24,-78,-92,-77,-100,-57,-91,-72,-82,-83,]),'WHILE':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,30,43,44,45,115,122,126,140,145,152,153,176,181,182,183,184,189,195,196,197,201,208,209,210,211,214,216,224,227,240,244,246,256,],[25,25,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-54,-55,-56,-73,-74,-75,-76,25,-16,-89,-90,-15,-17,-101,25,25,25,-93,25,25,25,-97,25,-58,-61,-81,-62,-24,-34,-35,25,-78,-92,-77,-100,-57,-91,-72,-82,-83,]),'IF':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,30,43,44,45,115,122,126,140,145,152,153,176,181,182,183,184,189,195,196,197,201,208,209,210,211,214,216,224,227,240,244,246,256,],[26,26,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-54,-55,-56,-73,-74,-75,-76,26,-16,-89,-90,-15,-17,-101,26,26,26,-93,26,26,26,-97,26,-58,-61,-81,-62,-24,-34,-35,26,-78,-92,-77,-100,-57,-91,-72,-82,-83,]),'ID':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,28,29,30,36,37,38,39,42,43,44,45,55,61,91,95,96,97,98,99,100,101,102,103,104,105,106,111,115,116,117,118,119,120,121,122,126,140,145,152,153,176,177,181,182,183,184,189,195,196,197,201,204,205,208,209,210,211,214,216,218,224,227,240,244,246,256,],[23,23,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-54,-55,-56,-73,-74,-75,-76,31,40,41,23,56,59,59,66,74,-16,-89,-90,92,107,142,59,59,-46,-47,-49,-50,-51,-52,-53,148,-48,151,155,-15,161,-84,-85,-86,-87,-88,-17,-101,23,23,23,-93,23,203,23,23,-97,23,-58,-61,-81,-62,-24,222,223,-34,-35,23,-78,-92,-77,229,-100,-57,-91,-72,-82,-83,]),'PRINT':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,30,43,44,45,115,122,126,140,145,152,153,176,181,182,183,184,189,195,196,197,201,208,209,210,211,214,216,224,227,240,244,246,256,],[27,27,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-54,-55,-56,-73,-74,-75,-76,27,-16,-89,-90,-15,-17,-101,27,27,27,-93,27,27,27,-97,27,-58,-61,-81,-62,-24,-34,-35,27,-78,-92,-77,-100,-57,-91,-72,-82,-83,]),'VOID':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,30,43,44,45,115,122,126,140,145,152,153,176,181,182,183,184,189,195,196,197,201,208,209,210,211,214,216,224,227,240,244,246,256,],[28,28,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-54,-55,-56,-73,-74,-75,-76,28,-16,-89,-90,-15,-17,-101,28,28,28,-93,28,28,28,-97,28,-58,-61,-81,-62,-24,-34,-35,28,-78,-92,-77,-100,-57,-91,-72,-82,-83,]),'MAPA':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,30,43,44,45,80,115,122,126,140,145,152,153,176,181,182,183,184,189,195,196,197,201,208,209,210,211,214,216,224,227,240,244,246,256,],[29,29,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-54,-55,-56,-73,-74,-75,-76,29,-16,-89,-90,128,-15,-17,-101,29,29,29,-93,29,29,29,-97,29,-58,-61,-81,-62,-24,-34,-35,29,-78,-92,-77,-100,-57,-91,-72,-82,-83,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,30,43,44,45,115,122,126,153,183,189,195,196,197,201,208,209,211,214,216,224,227,240,244,246,256,],[0,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-54,-55,-56,-73,-74,-75,-76,-14,-16,-89,-90,-15,-17,-101,-93,-97,-58,-61,-81,-62,-24,-34,-35,-78,-92,-77,-100,-57,-91,-72,-82,-83,]),'RCURLYB':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,30,43,44,45,48,115,122,126,136,153,156,176,181,182,183,189,195,196,197,201,208,209,210,211,212,214,216,224,227,231,240,244,246,256,],[-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-54,-55,-56,-73,-74,-75,-76,-14,-16,-89,-90,-66,-15,-17,-101,-65,-93,185,201,208,209,-97,-58,-61,-81,-62,-24,-34,-35,224,-78,-79,-92,-77,-100,-57,-80,-91,-72,-82,-83,]),'INCREMENTO':([23,177,203,],[32,204,220,]),'DECREMENTO':([23,177,203,],[33,205,221,]),'LCORCHETE':([23,42,74,217,],[34,78,114,228,]),'PTO':([23,74,],[35,113,]),'LPAREN':([24,25,26,27,40,49,50,51,52,127,128,158,174,175,249,],[36,37,38,39,72,86,87,88,89,166,167,187,199,200,250,]),'EQUALS':([31,41,56,84,85,92,219,234,251,],[42,73,93,131,132,143,230,238,252,]),'PUNTCOM':([31,32,33,48,54,58,62,63,70,71,74,75,76,77,79,81,82,107,109,130,136,141,144,146,147,148,149,150,151,160,161,162,163,168,169,170,171,172,180,185,188,194,206,207,215,236,241,243,255,],[43,44,45,-66,91,-36,-44,-45,-19,-20,-22,115,122,-18,126,-21,-20,-41,153,-103,-65,177,-27,-42,-43,-37,-38,-40,-39,-23,-22,-18,189,-102,-104,195,196,197,-26,211,214,216,-28,-29,227,240,244,246,256,]),'NUMBER':([34,37,38,39,42,78,86,87,89,93,95,96,97,98,99,100,101,102,103,104,105,106,112,114,116,117,118,119,120,121,131,132,143,164,165,166,173,178,179,186,187,225,226,228,235,],[46,60,60,69,77,125,136,137,136,144,60,60,-46,-47,-49,-50,-51,-52,-53,149,-48,150,136,159,162,-84,-85,-86,-87,-88,136,136,180,125,125,193,198,206,207,136,213,136,232,233,136,]),'CADENA':([34,39,42,78,83,86,88,89,112,116,117,118,119,120,121,129,131,132,164,165,186,225,235,242,253,],[48,71,82,124,130,48,138,48,48,71,-84,-85,-86,-87,-88,168,48,48,124,124,48,48,48,245,254,]),'ADD':([35,],[49,]),'REPLACE':([35,],[50,]),'UPDATE':([35,],[51,]),'PUT':([35,],[52,]),'INT':([36,],[55,]),'NOT':([37,38,39,42,95,96,97,98,99,100,101,102,103,],[61,61,61,61,61,61,-46,-47,-49,-50,-51,-52,-53,]),'TRUE':([37,38,39,42,86,95,96,97,98,99,100,101,102,103,],[62,62,62,62,62,62,62,-46,-47,-49,-50,-51,-52,-53,]),'FALSE':([37,38,39,42,86,95,96,97,98,99,100,101,102,103,],[63,63,63,63,63,63,63,-46,-47,-49,-50,-51,-52,-53,]),'DOUBLE':([39,42,116,117,118,119,120,121,],[70,70,70,-84,-85,-86,-87,-88,]),'NEW':([42,],[80,]),'PLUS':([42,70,71,74,75,77,81,82,129,160,161,162,168,],[83,-19,-20,-22,117,-18,-21,129,83,117,-22,-18,129,]),'RCORCHETE':([46,47,48,78,123,124,125,159,164,165,190,191,233,],[84,85,-66,-71,163,-67,-68,188,-71,-71,-69,-70,237,]),'RPAREN':([48,53,57,58,62,63,64,65,66,67,68,69,70,71,72,107,110,133,134,135,136,146,147,148,149,150,151,155,166,167,192,193,200,202,220,221,222,223,229,232,237,239,250,254,],[-66,90,94,-36,-44,-45,108,109,-94,-95,-96,-18,-19,-20,-99,-41,154,172,-63,-64,-65,-42,-43,-37,-38,-40,-39,-98,-60,194,215,-59,219,-25,-30,-31,-32,-33,234,236,241,243,251,255,]),'COMA':([48,124,125,136,137,138,139,198,212,213,245,],[-66,164,165,-65,173,174,175,217,225,226,247,]),'DOSPTO':([48,136,157,248,],[-66,-65,186,249,]),'EQUIVAL':([57,58,59,60,62,63,64,66,68,69,74,76,77,107,146,147,148,149,150,151,],[96,-36,105,105,-44,-45,96,105,96,105,105,96,105,-41,96,96,-37,-38,-40,-39,]),'MAYORQUE':([57,58,59,60,62,63,64,66,68,69,74,76,77,107,142,146,147,148,149,150,151,230,238,252,],[97,-36,97,97,-44,-45,97,97,97,97,97,97,97,-41,178,97,97,-37,-38,-40,-39,235,242,253,]),'MENORQUE':([57,58,59,60,62,63,64,66,68,69,74,76,77,107,142,146,147,148,149,150,151,],[98,-36,98,98,-44,-45,98,98,98,98,98,98,98,-41,179,98,98,-37,-38,-40,-39,]),'MINEQ':([57,58,59,60,62,63,64,66,68,69,74,76,77,107,146,147,148,149,150,151,],[99,-36,99,99,-44,-45,99,99,99,99,99,99,99,-41,99,99,-37,-38,-40,-39,]),'MAYEQ':([57,58,59,60,62,63,64,66,68,69,74,76,77,107,146,147,148,149,150,151,],[100,-36,100,100,-44,-45,100,100,100,100,100,100,100,-41,100,100,-37,-38,-40,-39,]),'NOEQUIVAL':([57,58,59,60,62,63,64,66,68,69,74,76,77,107,146,147,148,149,150,151,],[101,-36,101,101,-44,-45,101,101,101,101,101,101,101,-41,101,101,-37,-38,-40,-39,]),'AND':([57,58,59,60,62,63,64,66,68,69,74,76,77,107,146,147,148,149,150,151,],[102,-36,102,102,-44,-45,102,102,102,102,102,102,102,-41,102,102,-37,-38,-40,-39,]),'OR':([57,58,59,60,62,63,64,66,68,69,74,76,77,107,146,147,148,149,150,151,],[103,-36,103,103,-44,-45,103,103,103,103,103,103,103,-41,103,103,-37,-38,-40,-39,]),'MINUS':([70,71,74,75,77,81,82,160,161,162,],[-19,-20,-22,118,-18,-21,-20,118,-22,-18,]),'TIMES':([70,71,74,75,77,81,82,160,161,162,],[-19,-20,-22,119,-18,-21,-20,119,-22,-18,]),'DIVIDE':([70,71,74,75,77,81,82,160,161,162,],[-19,-20,-22,120,-18,-21,-20,120,-22,-18,]),'DIVIDE_E':([70,71,74,75,77,81,82,160,161,162,],[-19,-20,-22,121,-18,-21,-20,121,-22,-18,]),'LCURLYB':([73,90,94,108,154,],[112,140,145,152,184,]),'LISTA':([80,],[127,]),'SUBSTRING':([113,],[158,]),'IFABSENT':([247,],[248,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expresion':([0,1,30,140,145,152,176,181,182,184,210,],[1,30,30,176,181,182,30,30,30,210,30,]),'lista':([0,1,30,140,145,152,176,181,182,184,210,],[2,2,2,2,2,2,2,2,2,2,2,]),'mapa':([0,1,30,140,145,152,176,181,182,184,210,],[3,3,3,3,3,3,3,3,3,3,3,]),'variable':([0,1,30,140,145,152,176,181,182,184,210,],[4,4,4,4,4,4,4,4,4,4,4,]),'expresionFor':([0,1,30,140,145,152,176,181,182,184,210,],[5,5,5,5,5,5,5,5,5,5,5,]),'expresionWhile':([0,1,30,140,145,152,176,181,182,184,210,],[6,6,6,6,6,6,6,6,6,6,6,]),'expresionIf':([0,1,30,140,145,152,176,181,182,184,210,],[7,7,7,7,7,7,7,7,7,7,7,]),'f_subtring':([0,1,30,140,145,152,176,181,182,184,210,],[8,8,8,8,8,8,8,8,8,8,8,]),'accPosString':([0,1,30,140,145,152,176,181,182,184,210,],[9,9,9,9,9,9,9,9,9,9,9,]),'incremento':([0,1,30,140,145,152,176,181,182,184,210,],[10,10,10,10,10,10,10,10,10,10,10,]),'decremento':([0,1,30,140,145,152,176,181,182,184,210,],[11,11,11,11,11,11,11,11,11,11,11,]),'print':([0,1,30,140,145,152,176,181,182,184,210,],[12,12,12,12,12,12,12,12,12,12,12,]),'funcion':([0,1,30,140,145,152,176,181,182,184,210,],[13,13,13,13,13,13,13,13,13,13,13,]),'concatenar':([0,1,30,140,145,152,176,181,182,184,210,],[14,14,14,14,14,14,14,14,14,14,14,]),'expLista':([0,1,30,140,145,152,176,181,182,184,210,],[15,15,15,15,15,15,15,15,15,15,15,]),'add_lista':([0,1,30,140,145,152,176,181,182,184,210,],[16,16,16,16,16,16,16,16,16,16,16,]),'replace':([0,1,30,140,145,152,176,181,182,184,210,],[17,17,17,17,17,17,17,17,17,17,17,]),'expMapa':([0,1,30,140,145,152,176,181,182,184,210,],[18,18,18,18,18,18,18,18,18,18,18,]),'add_mapa':([0,1,30,140,145,152,176,181,182,184,210,],[19,19,19,19,19,19,19,19,19,19,19,]),'update_mapa':([0,1,30,140,145,152,176,181,182,184,210,],[20,20,20,20,20,20,20,20,20,20,20,]),'add_mapa_putIfAbsent':([0,1,30,140,145,152,176,181,182,184,210,],[21,21,21,21,21,21,21,21,21,21,21,]),'num_cadena':([34,86,89,112,131,132,186,225,235,],[47,134,139,157,170,171,212,157,239,]),'forParameters':([36,],[53,]),'forIterator':([36,],[54,]),'expresionBool':([37,38,39,42,95,96,],[57,64,68,76,146,147,]),'booleano':([37,38,39,42,86,95,96,],[58,58,58,58,135,58,58,]),'printVal':([39,],[65,]),'valorVar':([39,42,116,],[67,81,81,]),'expresionVar':([42,116,],[75,160,]),'concatenarRecursivo':([42,129,],[79,169,]),'comparador':([57,59,60,64,66,68,69,74,76,77,146,147,],[95,104,106,95,104,95,106,104,95,106,95,95,]),'parametroFuncion':([72,],[110,]),'operadorA':([75,160,],[116,116,]),'elementosLista':([78,164,165,],[123,190,191,]),'elementoAddLista':([86,],[133,]),'forCondition':([91,],[141,]),'elementosMapa':([112,225,],[156,231,]),'final_key':([154,],[183,]),'inicializaLista':([166,],[192,]),'forAction':([177,],[202,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expresion","S'",1,None,None,None),
  ('expresion -> lista','expresion',1,'p_expresion','syntax.py',18),
  ('expresion -> mapa','expresion',1,'p_expresion','syntax.py',19),
  ('expresion -> variable','expresion',1,'p_expresion','syntax.py',20),
  ('expresion -> expresionFor','expresion',1,'p_expresion','syntax.py',21),
  ('expresion -> expresionWhile','expresion',1,'p_expresion','syntax.py',22),
  ('expresion -> expresionIf','expresion',1,'p_expresion','syntax.py',23),
  ('expresion -> f_subtring','expresion',1,'p_expresion','syntax.py',24),
  ('expresion -> accPosString','expresion',1,'p_expresion','syntax.py',25),
  ('expresion -> incremento','expresion',1,'p_expresion','syntax.py',26),
  ('expresion -> decremento','expresion',1,'p_expresion','syntax.py',27),
  ('expresion -> print','expresion',1,'p_expresion','syntax.py',28),
  ('expresion -> funcion','expresion',1,'p_expresion','syntax.py',29),
  ('expresion -> concatenar','expresion',1,'p_expresion','syntax.py',30),
  ('expresion -> expresion expresion','expresion',2,'p_expresion','syntax.py',31),
  ('variable -> VAR ID EQUALS expresionVar PUNTCOM','variable',5,'p_variable','syntax.py',37),
  ('variable -> VAR ID PUNTCOM','variable',3,'p_variable','syntax.py',38),
  ('variable -> VAR ID EQUALS expresionBool PUNTCOM','variable',5,'p_variable','syntax.py',39),
  ('valorVar -> NUMBER','valorVar',1,'p_valorVar','syntax.py',42),
  ('valorVar -> DOUBLE','valorVar',1,'p_valorVar','syntax.py',43),
  ('valorVar -> CADENA','valorVar',1,'p_valorVar','syntax.py',44),
  ('expresionVar -> valorVar','expresionVar',1,'p_expresionVar','syntax.py',48),
  ('expresionVar -> ID','expresionVar',1,'p_expresionVar','syntax.py',49),
  ('expresionVar -> expresionVar operadorA expresionVar','expresionVar',3,'p_expresionVar','syntax.py',50),
  ('expresionFor -> FOR LPAREN forParameters RPAREN LCURLYB expresion RCURLYB','expresionFor',7,'p_expresionFor','syntax.py',55),
  ('forParameters -> forIterator PUNTCOM forCondition PUNTCOM forAction','forParameters',5,'p_forParameters','syntax.py',58),
  ('forIterator -> INT ID EQUALS NUMBER','forIterator',4,'p_forIterator','syntax.py',61),
  ('forIterator -> ID EQUALS NUMBER','forIterator',3,'p_forIterator','syntax.py',62),
  ('forCondition -> ID MAYORQUE NUMBER','forCondition',3,'p_forCondition','syntax.py',65),
  ('forCondition -> ID MENORQUE NUMBER','forCondition',3,'p_forCondition','syntax.py',66),
  ('forAction -> ID INCREMENTO','forAction',2,'p_forAction','syntax.py',69),
  ('forAction -> ID DECREMENTO','forAction',2,'p_forAction','syntax.py',70),
  ('forAction -> INCREMENTO ID','forAction',2,'p_forAction','syntax.py',71),
  ('forAction -> DECREMENTO ID','forAction',2,'p_forAction','syntax.py',72),
  ('expresionWhile -> WHILE LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB','expresionWhile',7,'p_expresionWhile','syntax.py',77),
  ('expresionIf -> IF LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB','expresionIf',7,'p_expresionIf','syntax.py',82),
  ('expresionBool -> booleano','expresionBool',1,'p_expresionBool','syntax.py',87),
  ('expresionBool -> ID comparador ID','expresionBool',3,'p_expresionBool','syntax.py',88),
  ('expresionBool -> ID comparador NUMBER','expresionBool',3,'p_expresionBool','syntax.py',89),
  ('expresionBool -> NUMBER comparador ID','expresionBool',3,'p_expresionBool','syntax.py',90),
  ('expresionBool -> NUMBER comparador NUMBER','expresionBool',3,'p_expresionBool','syntax.py',91),
  ('expresionBool -> NOT ID','expresionBool',2,'p_expresionBool','syntax.py',92),
  ('expresionBool -> expresionBool comparador expresionBool','expresionBool',3,'p_expresionBool','syntax.py',93),
  ('expresionBool -> expresionBool EQUIVAL expresionBool','expresionBool',3,'p_expresionBool','syntax.py',94),
  ('booleano -> TRUE','booleano',1,'p_booleano','syntax.py',97),
  ('booleano -> FALSE','booleano',1,'p_booleano','syntax.py',98),
  ('comparador -> MAYORQUE','comparador',1,'p_comparador','syntax.py',101),
  ('comparador -> MENORQUE','comparador',1,'p_comparador','syntax.py',102),
  ('comparador -> EQUIVAL','comparador',1,'p_comparador','syntax.py',103),
  ('comparador -> MINEQ','comparador',1,'p_comparador','syntax.py',104),
  ('comparador -> MAYEQ','comparador',1,'p_comparador','syntax.py',105),
  ('comparador -> NOEQUIVAL','comparador',1,'p_comparador','syntax.py',106),
  ('comparador -> AND','comparador',1,'p_comparador','syntax.py',107),
  ('comparador -> OR','comparador',1,'p_comparador','syntax.py',108),
  ('lista -> expLista','lista',1,'p_lista','syntax.py',115),
  ('lista -> add_lista','lista',1,'p_lista','syntax.py',116),
  ('lista -> replace','lista',1,'p_lista','syntax.py',117),
  ('expLista -> VAR ID EQUALS NEW LISTA LPAREN inicializaLista RPAREN PUNTCOM','expLista',9,'p_expLista','syntax.py',121),
  ('expLista -> VAR ID EQUALS LCORCHETE elementosLista RCORCHETE PUNTCOM','expLista',7,'p_expLista','syntax.py',122),
  ('inicializaLista -> NUMBER','inicializaLista',1,'p_inicializaLista','syntax.py',126),
  ('inicializaLista -> <empty>','inicializaLista',0,'p_inicializaLista','syntax.py',127),
  ('add_lista -> ID LCORCHETE NUMBER RCORCHETE EQUALS num_cadena PUNTCOM','add_lista',7,'p_add_lista','syntax.py',132),
  ('add_lista -> ID PTO ADD LPAREN elementoAddLista RPAREN PUNTCOM','add_lista',7,'p_add_lista','syntax.py',133),
  ('elementoAddLista -> num_cadena','elementoAddLista',1,'p_elementoAddLista','syntax.py',136),
  ('elementoAddLista -> booleano','elementoAddLista',1,'p_elementoAddLista','syntax.py',137),
  ('num_cadena -> NUMBER','num_cadena',1,'p_num_cadena','syntax.py',141),
  ('num_cadena -> CADENA','num_cadena',1,'p_num_cadena','syntax.py',142),
  ('elementosLista -> CADENA','elementosLista',1,'p_elementosLista','syntax.py',146),
  ('elementosLista -> NUMBER','elementosLista',1,'p_elementosLista','syntax.py',147),
  ('elementosLista -> CADENA COMA elementosLista','elementosLista',3,'p_elementosLista','syntax.py',148),
  ('elementosLista -> NUMBER COMA elementosLista','elementosLista',3,'p_elementosLista','syntax.py',149),
  ('elementosLista -> <empty>','elementosLista',0,'p_elementosLista','syntax.py',150),
  ('replace -> ID PTO REPLACE LPAREN NUMBER COMA NUMBER COMA LCORCHETE NUMBER RCORCHETE RPAREN PUNTCOM','replace',13,'p_replace','syntax.py',155),
  ('mapa -> expMapa','mapa',1,'p_mapa','syntax.py',161),
  ('mapa -> add_mapa','mapa',1,'p_mapa','syntax.py',162),
  ('mapa -> update_mapa','mapa',1,'p_mapa','syntax.py',163),
  ('mapa -> add_mapa_putIfAbsent','mapa',1,'p_mapa','syntax.py',164),
  ('expMapa -> VAR ID EQUALS NEW MAPA LPAREN RPAREN PUNTCOM','expMapa',8,'p_expMapa','syntax.py',168),
  ('expMapa -> MAPA ID EQUALS LCURLYB elementosMapa RCURLYB PUNTCOM','expMapa',7,'p_expMapa','syntax.py',169),
  ('elementosMapa -> num_cadena DOSPTO num_cadena','elementosMapa',3,'p_elementosMapa','syntax.py',174),
  ('elementosMapa -> num_cadena DOSPTO num_cadena COMA elementosMapa','elementosMapa',5,'p_elementosMapa','syntax.py',175),
  ('add_mapa -> ID LCORCHETE num_cadena RCORCHETE EQUALS num_cadena PUNTCOM','add_mapa',7,'p_add_mapa','syntax.py',180),
  ('add_mapa_putIfAbsent -> ID PTO PUT LPAREN num_cadena COMA LPAREN RPAREN EQUALS MAYORQUE num_cadena RPAREN PUNTCOM','add_mapa_putIfAbsent',13,'p_add_mapa_putIfAbsent','syntax.py',184),
  ('update_mapa -> ID PTO UPDATE LPAREN CADENA COMA LPAREN VAR ID RPAREN EQUALS MAYORQUE CADENA COMA IFABSENT DOSPTO LPAREN RPAREN EQUALS MAYORQUE CADENA RPAREN PUNTCOM','update_mapa',23,'p_update_mapa','syntax.py',188),
  ('operadorA -> PLUS','operadorA',1,'p_operadorA','syntax.py',192),
  ('operadorA -> MINUS','operadorA',1,'p_operadorA','syntax.py',193),
  ('operadorA -> TIMES','operadorA',1,'p_operadorA','syntax.py',194),
  ('operadorA -> DIVIDE','operadorA',1,'p_operadorA','syntax.py',195),
  ('operadorA -> DIVIDE_E','operadorA',1,'p_operadorA','syntax.py',196),
  ('incremento -> ID INCREMENTO PUNTCOM','incremento',3,'p_incremento','syntax.py',200),
  ('decremento -> ID DECREMENTO PUNTCOM','decremento',3,'p_decremento','syntax.py',203),
  ('f_subtring -> VAR ID EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN PUNTCOM','f_subtring',12,'p_f_subtring','syntax.py',208),
  ('accPosString -> VAR ID EQUALS ID LCORCHETE NUMBER RCORCHETE PUNTCOM','accPosString',8,'p_accPosString','syntax.py',211),
  ('print -> PRINT LPAREN printVal RPAREN PUNTCOM','print',5,'p_print','syntax.py',216),
  ('printVal -> ID','printVal',1,'p_printVal','syntax.py',220),
  ('printVal -> valorVar','printVal',1,'p_printVal','syntax.py',221),
  ('printVal -> expresionBool','printVal',1,'p_printVal','syntax.py',222),
  ('funcion -> VOID ID LPAREN parametroFuncion RPAREN final_key','funcion',6,'p_funcion','syntax.py',228),
  ('parametroFuncion -> VAR ID','parametroFuncion',2,'p_parametroFuncion','syntax.py',232),
  ('parametroFuncion -> <empty>','parametroFuncion',0,'p_parametroFuncion','syntax.py',233),
  ('final_key -> LCURLYB expresion RCURLYB','final_key',3,'p_final_key','syntax.py',237),
  ('concatenar -> VAR ID EQUALS concatenarRecursivo PUNTCOM','concatenar',5,'p_concatenar','syntax.py',241),
  ('concatenarRecursivo -> CADENA PLUS CADENA','concatenarRecursivo',3,'p_concatenarRecursivo','syntax.py',245),
  ('concatenarRecursivo -> PLUS CADENA','concatenarRecursivo',2,'p_concatenarRecursivo','syntax.py',246),
  ('concatenarRecursivo -> CADENA PLUS concatenarRecursivo','concatenarRecursivo',3,'p_concatenarRecursivo','syntax.py',247),
]
