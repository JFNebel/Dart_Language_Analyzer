
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ADD AND CADENA COMA COMIILLATS COMILLAD COMILLAS COMILLATD DECREMENTO DIVIDE DIVIDE_E DOSPTO DOUBLE EQUALS FALSE FOR ID INCREMENTO INT LCORCHETE LCURLYB LISTA LPAREN MAPA MAYORQUE MENORQUE MINUS NEW NOT NUMBER OR PLUS PRINT PTO PUNTCOM PUT RCORCHETE RCURLYB RPAREN SUBSTRING TIMES TRUE UPDATE VAR VARBOOL VARDOUBLE WHILEexpresion : lista\n    | mapa\n    | variable\n    | icadena\n    | concatenacion\n    | incremento\n    | decremento\n    expresionA : valor operadorA valorvariable : VAR ID EQUALS expresionVar PUNTCOM\n                | VAR ID PUNTCOM\n                | expresionBoolvalorVar : NUMBER\n                | DOUBLE\n                | CADENAexpresionVar : valorVar\n                    | ID \n                    | expresionVar operadorA expresionVarexpresionBool : VARBOOL ID EQUALS booleano pto_coma\n                     | VAR ID EQUALS booleano pto_comabooleano : TRUE\n    | FALSElista : expLista\n    | add_lista\n    expLista : VAR ID EQUALS NEW LISTA LPAREN NUMBER RPAREN pto_coma\n        | VAR ID EQUALS NEW LISTA LPAREN RPAREN pto_coma\n        | VAR ID EQUALS LCORCHETE elementosLista RCORCHETE pto_coma\n        add_lista : ID LCORCHETE NUMBER RCORCHETE EQUALS NUMBER pto_coma\n    |   ID PTO ADD LPAREN NUMBER RPAREN pto_coma\n    | ID PTO ADD LPAREN ID RPAREN pto_coma\n    elementosLista : COMILLAS ID COMILLAS\n        | COMILLAS ID COMILLAS COMA elementosLista\n        | COMILLAS NUMBER COMILLAS\n        | COMILLAS NUMBER COMILLAS COMA elementosLista\n        | \n    mapa : expMapa\n    | add_mapa\n    expMapa : VAR ID EQUALS NEW MAPA LPAREN RPAREN pto_coma\n    | MAPA ID EQUALS LCURLYB elementosMapa RCURLYB pto_coma\n    elementosMapa : COMILLAS valor COMILLAS DOSPTO COMILLAS valor COMILLAS\n    | COMILLAS valor COMILLAS DOSPTO COMILLAS valor COMILLAS COMA elementosMapa\n    | COMILLAS valor COMILLAS DOSPTO NUMBER\n    | COMILLAS valor COMILLAS DOSPTO NUMBER COMA elementosMapa\n    | NUMBER DOSPTO COMILLAS valor COMILLAS \n    | NUMBER DOSPTO COMILLAS valor COMILLAS COMA elementosMapa\n    | NUMBER DOSPTO NUMBER\n    | NUMBER DOSPTO NUMBER COMA elementosMapa\n    add_mapa : ID LCORCHETE COMILLAS ID COMILLAS RCORCHETE EQUALS COMILLAS ID COMILLAS pto_coma\n    operadorA : PLUS\n    | MINUS\n    | TIMES\n    | DIVIDE\n    | DIVIDE_E\n    incremento : ID INCREMENTO pto_comadecremento : ID DECREMENTO pto_comaicadena : VAR ID EQUALS cadenas pto_coma\n    valor : ID \n    | NUMBER\n    concatenacion : VAR ID EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN pto_coma\n    cadenas : COMILLAS ID COMILLAS\n    | COMILLAD ID COMILLAD\n    | COMIILLATS ID COMIILLATS\n    | COMILLATD ID COMILLATD\n    pto_coma : PUNTCOM'
    
_lr_action_items = {'VAR':([0,],[13,]),'ID':([0,13,16,17,25,31,43,44,45,46,53,58,59,60,61,62,63,68,79,117,124,133,],[14,18,23,24,35,52,70,71,72,73,76,84,-48,-49,-50,-51,-52,88,101,101,132,101,]),'MAPA':([0,39,],[16,66,]),'VARBOOL':([0,],[17,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,15,26,27,28,29,57,64,69,81,107,110,112,113,114,120,121,129,143,147,],[0,-1,-2,-3,-4,-5,-6,-7,-22,-23,-35,-36,-11,-10,-53,-63,-54,-9,-55,-19,-18,-26,-27,-29,-28,-38,-25,-37,-24,-47,-58,]),'INCREMENTO':([14,],[19,]),'DECREMENTO':([14,],[20,]),'LCORCHETE':([14,25,],[21,40,]),'PTO':([14,35,],[22,56,]),'EQUALS':([18,23,24,51,95,],[25,33,34,74,111,]),'PUNTCOM':([18,19,20,35,36,37,38,41,42,47,48,49,50,55,83,84,87,90,91,92,93,94,96,97,98,105,106,119,138,142,],[26,28,28,-16,57,28,-12,28,-15,-20,-21,-13,-14,28,-17,-16,28,-59,-60,-61,-62,28,28,28,28,28,28,28,28,28,]),'NUMBER':([21,25,53,54,58,59,60,61,62,63,68,74,79,85,102,103,117,125,126,128,133,140,141,148,],[30,38,77,80,38,-48,-49,-50,-51,-52,89,94,100,104,116,118,100,134,80,137,100,80,80,80,]),'COMILLAS':([21,25,40,52,54,70,88,89,99,100,101,102,111,122,123,125,126,127,132,139,140,141,148,],[31,43,68,75,79,90,108,109,115,-57,-56,117,124,68,68,133,79,136,138,144,79,79,79,]),'ADD':([22,],[32,]),'NEW':([25,],[39,]),'COMILLAD':([25,71,],[44,91,]),'COMIILLATS':([25,72,],[45,92,]),'COMILLATD':([25,73,],[46,93,]),'TRUE':([25,34,],[47,47,]),'FALSE':([25,34,],[48,48,]),'DOUBLE':([25,58,59,60,61,62,63,],[49,49,-48,-49,-50,-51,-52,]),'CADENA':([25,58,59,60,61,62,63,],[50,50,-48,-49,-50,-51,-52,]),'RCORCHETE':([30,40,67,75,108,109,122,123,130,131,],[51,-34,87,95,-30,-32,-34,-34,-31,-33,]),'LPAREN':([32,65,66,82,],[53,85,86,103,]),'LCURLYB':([33,],[54,]),'PLUS':([35,36,38,42,49,50,83,84,],[-16,59,-12,-15,-13,-14,59,-16,]),'MINUS':([35,36,38,42,49,50,83,84,],[-16,60,-12,-15,-13,-14,60,-16,]),'TIMES':([35,36,38,42,49,50,83,84,],[-16,61,-12,-15,-13,-14,61,-16,]),'DIVIDE':([35,36,38,42,49,50,83,84,],[-16,62,-12,-15,-13,-14,62,-16,]),'DIVIDE_E':([35,36,38,42,49,50,83,84,],[-16,63,-12,-15,-13,-14,63,-16,]),'LISTA':([39,],[65,]),'SUBSTRING':([56,],[82,]),'RPAREN':([76,77,85,86,104,137,],[96,97,105,106,119,142,]),'RCURLYB':([78,116,134,135,136,144,145,146,149,],[98,-45,-41,-46,-43,-39,-42,-44,-40,]),'DOSPTO':([80,115,],[102,125,]),'COMA':([108,109,116,118,134,136,144,],[122,123,126,128,140,141,148,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expresion':([0,],[1,]),'lista':([0,],[2,]),'mapa':([0,],[3,]),'variable':([0,],[4,]),'icadena':([0,],[5,]),'concatenacion':([0,],[6,]),'incremento':([0,],[7,]),'decremento':([0,],[8,]),'expLista':([0,],[9,]),'add_lista':([0,],[10,]),'expMapa':([0,],[11,]),'add_mapa':([0,],[12,]),'expresionBool':([0,],[15,]),'pto_coma':([19,20,37,41,55,87,94,96,97,98,105,106,119,138,142,],[27,29,64,69,81,107,110,112,113,114,120,121,129,143,147,]),'expresionVar':([25,58,],[36,83,]),'cadenas':([25,],[37,]),'booleano':([25,34,],[41,55,]),'valorVar':([25,58,],[42,42,]),'operadorA':([36,83,],[58,58,]),'elementosLista':([40,122,123,],[67,130,131,]),'elementosMapa':([54,126,140,141,148,],[78,135,145,146,149,]),'valor':([79,117,133,],[99,127,139,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expresion","S'",1,None,None,None),
  ('expresion -> lista','expresion',1,'p_expresion','parser.py',6),
  ('expresion -> mapa','expresion',1,'p_expresion','parser.py',7),
  ('expresion -> variable','expresion',1,'p_expresion','parser.py',8),
  ('expresion -> icadena','expresion',1,'p_expresion','parser.py',9),
  ('expresion -> concatenacion','expresion',1,'p_expresion','parser.py',10),
  ('expresion -> incremento','expresion',1,'p_expresion','parser.py',11),
  ('expresion -> decremento','expresion',1,'p_expresion','parser.py',12),
  ('expresionA -> valor operadorA valor','expresionA',3,'p_expresionA','parser.py',16),
  ('variable -> VAR ID EQUALS expresionVar PUNTCOM','variable',5,'p_variable','parser.py',21),
  ('variable -> VAR ID PUNTCOM','variable',3,'p_variable','parser.py',22),
  ('variable -> expresionBool','variable',1,'p_variable','parser.py',23),
  ('valorVar -> NUMBER','valorVar',1,'p_valorVar','parser.py',26),
  ('valorVar -> DOUBLE','valorVar',1,'p_valorVar','parser.py',27),
  ('valorVar -> CADENA','valorVar',1,'p_valorVar','parser.py',28),
  ('expresionVar -> valorVar','expresionVar',1,'p_expresionVar','parser.py',31),
  ('expresionVar -> ID','expresionVar',1,'p_expresionVar','parser.py',32),
  ('expresionVar -> expresionVar operadorA expresionVar','expresionVar',3,'p_expresionVar','parser.py',33),
  ('expresionBool -> VARBOOL ID EQUALS booleano pto_coma','expresionBool',5,'p_expresionBool','parser.py',37),
  ('expresionBool -> VAR ID EQUALS booleano pto_coma','expresionBool',5,'p_expresionBool','parser.py',38),
  ('booleano -> TRUE','booleano',1,'p_booleano','parser.py',41),
  ('booleano -> FALSE','booleano',1,'p_booleano','parser.py',42),
  ('lista -> expLista','lista',1,'p_lista','parser.py',46),
  ('lista -> add_lista','lista',1,'p_lista','parser.py',47),
  ('expLista -> VAR ID EQUALS NEW LISTA LPAREN NUMBER RPAREN pto_coma','expLista',9,'p_expLista','parser.py',51),
  ('expLista -> VAR ID EQUALS NEW LISTA LPAREN RPAREN pto_coma','expLista',8,'p_expLista','parser.py',52),
  ('expLista -> VAR ID EQUALS LCORCHETE elementosLista RCORCHETE pto_coma','expLista',7,'p_expLista','parser.py',53),
  ('add_lista -> ID LCORCHETE NUMBER RCORCHETE EQUALS NUMBER pto_coma','add_lista',7,'p_add_lista','parser.py',58),
  ('add_lista -> ID PTO ADD LPAREN NUMBER RPAREN pto_coma','add_lista',7,'p_add_lista','parser.py',59),
  ('add_lista -> ID PTO ADD LPAREN ID RPAREN pto_coma','add_lista',7,'p_add_lista','parser.py',60),
  ('elementosLista -> COMILLAS ID COMILLAS','elementosLista',3,'p_elementosLista','parser.py',64),
  ('elementosLista -> COMILLAS ID COMILLAS COMA elementosLista','elementosLista',5,'p_elementosLista','parser.py',65),
  ('elementosLista -> COMILLAS NUMBER COMILLAS','elementosLista',3,'p_elementosLista','parser.py',66),
  ('elementosLista -> COMILLAS NUMBER COMILLAS COMA elementosLista','elementosLista',5,'p_elementosLista','parser.py',67),
  ('elementosLista -> <empty>','elementosLista',0,'p_elementosLista','parser.py',68),
  ('mapa -> expMapa','mapa',1,'p_mapa','parser.py',72),
  ('mapa -> add_mapa','mapa',1,'p_mapa','parser.py',73),
  ('expMapa -> VAR ID EQUALS NEW MAPA LPAREN RPAREN pto_coma','expMapa',8,'p_expMapa','parser.py',77),
  ('expMapa -> MAPA ID EQUALS LCURLYB elementosMapa RCURLYB pto_coma','expMapa',7,'p_expMapa','parser.py',78),
  ('elementosMapa -> COMILLAS valor COMILLAS DOSPTO COMILLAS valor COMILLAS','elementosMapa',7,'p_elementosMapa','parser.py',83),
  ('elementosMapa -> COMILLAS valor COMILLAS DOSPTO COMILLAS valor COMILLAS COMA elementosMapa','elementosMapa',9,'p_elementosMapa','parser.py',84),
  ('elementosMapa -> COMILLAS valor COMILLAS DOSPTO NUMBER','elementosMapa',5,'p_elementosMapa','parser.py',85),
  ('elementosMapa -> COMILLAS valor COMILLAS DOSPTO NUMBER COMA elementosMapa','elementosMapa',7,'p_elementosMapa','parser.py',86),
  ('elementosMapa -> NUMBER DOSPTO COMILLAS valor COMILLAS','elementosMapa',5,'p_elementosMapa','parser.py',87),
  ('elementosMapa -> NUMBER DOSPTO COMILLAS valor COMILLAS COMA elementosMapa','elementosMapa',7,'p_elementosMapa','parser.py',88),
  ('elementosMapa -> NUMBER DOSPTO NUMBER','elementosMapa',3,'p_elementosMapa','parser.py',89),
  ('elementosMapa -> NUMBER DOSPTO NUMBER COMA elementosMapa','elementosMapa',5,'p_elementosMapa','parser.py',90),
  ('add_mapa -> ID LCORCHETE COMILLAS ID COMILLAS RCORCHETE EQUALS COMILLAS ID COMILLAS pto_coma','add_mapa',11,'p_add_mapa','parser.py',95),
  ('operadorA -> PLUS','operadorA',1,'p_operadorA','parser.py',99),
  ('operadorA -> MINUS','operadorA',1,'p_operadorA','parser.py',100),
  ('operadorA -> TIMES','operadorA',1,'p_operadorA','parser.py',101),
  ('operadorA -> DIVIDE','operadorA',1,'p_operadorA','parser.py',102),
  ('operadorA -> DIVIDE_E','operadorA',1,'p_operadorA','parser.py',103),
  ('incremento -> ID INCREMENTO pto_coma','incremento',3,'p_incremento','parser.py',107),
  ('decremento -> ID DECREMENTO pto_coma','decremento',3,'p_decremento','parser.py',110),
  ('icadena -> VAR ID EQUALS cadenas pto_coma','icadena',5,'p_i_cadena','parser.py',114),
  ('valor -> ID','valor',1,'p_valor','parser.py',118),
  ('valor -> NUMBER','valor',1,'p_valor','parser.py',119),
  ('concatenacion -> VAR ID EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN pto_coma','concatenacion',12,'p_concatenacion','parser.py',123),
  ('cadenas -> COMILLAS ID COMILLAS','cadenas',3,'p_cadenas','parser.py',127),
  ('cadenas -> COMILLAD ID COMILLAD','cadenas',3,'p_cadenas','parser.py',128),
  ('cadenas -> COMIILLATS ID COMIILLATS','cadenas',3,'p_cadenas','parser.py',129),
  ('cadenas -> COMILLATD ID COMILLATD','cadenas',3,'p_cadenas','parser.py',130),
  ('pto_coma -> PUNTCOM','pto_coma',1,'p_pto_coma','parser.py',134),
]
