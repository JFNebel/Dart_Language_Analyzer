
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ADD AND CADENA COMA COMIILLATS COMILLAD COMILLAS COMILLATD DECREMENTO DIVIDE DIVIDE_E DOSPTO DOUBLE EQUALS EQUIVAL FALSE FOR ID IF INCREMENTO INT LCORCHETE LCURLYB LISTA LPAREN MAPA MAYEQ MAYORQUE MENORQUE MINEQ MINUS NEW NOT NUMBER OR PLUS PRINT PTO PUNTCOM PUT RCORCHETE RCURLYB RPAREN SUBSTRING TIMES TRUE UPDATE VAR VARBOOL VARDOUBLE WHILEexpresion : lista\n    | mapa\n    | variable\n    | expresionFor\n    | expresionWhile\n    | expresionIf\n    | concatenacion\n    | incremento\n    | decremento\n    | expresion expresion\n    variable : VAR ID EQUALS expresionVar PUNTCOM\n                | VAR ID PUNTCOM\n                | VAR ID EQUALS expresionBool PUNTCOMvalorVar : NUMBER\n                | DOUBLE\n                | CADENAexpresionVar : valorVar\n                    | ID \n                    | expresionVar operadorA expresionVarexpresionFor : FOR LPAREN forParameters RPAREN LCURLYB expresion RCURLYBforParameters : forIterator PUNTCOM forCondition PUNTCOM forActionforIterator : INT ID EQUALS NUMBER\n                   | ID EQUALS NUMBERforCondition : ID MAYORQUE NUMBER \n                    | ID MENORQUE NUMBER forAction : ID INCREMENTO  \n                 | ID DECREMENTO\n                 | INCREMENTO ID\n                 | DECREMENTO IDexpresionWhile : WHILE LPAREN expresionBool RPAREN LCURLYB expresion RCURLYBexpresionIf : IF LPAREN expresionBool RPAREN LCURLYB expresion RCURLYBexpresionBool : booleano\n                     | ID comparador ID\n                     | ID comparador NUMBER\n                     | NUMBER comparador ID\n                     | NUMBER comparador NUMBER\n                     | expresionBool EQUIVAL expresionBoolbooleano : TRUE\n                | FALSEcomparador : MAYORQUE \n                  | MENORQUE\n                  | EQUIVAL\n                  | MINEQ\n                  | MAYEQlista : expLista\n    | add_lista\n    expLista : VAR ID EQUALS NEW LISTA LPAREN NUMBER RPAREN pto_coma\n        | VAR ID EQUALS NEW LISTA LPAREN RPAREN pto_coma\n        | VAR ID EQUALS LCORCHETE elementosLista RCORCHETE pto_coma\n        add_lista : ID LCORCHETE NUMBER RCORCHETE EQUALS num_cadena pto_coma\n    | ID PTO ADD LPAREN num_cadena RPAREN pto_coma\n    num_cadena : NUMBER\n    | CADENAelementosLista : CADENA\n        | NUMBER\n        | CADENA COMA elementosLista\n        | NUMBER COMA elementosLista\n        |\n    mapa : expMapa\n    | add_mapa\n    expMapa : VAR ID EQUALS NEW MAPA LPAREN RPAREN pto_coma\n    | MAPA ID EQUALS LCURLYB elementosMapa RCURLYB pto_coma\n    elementosMapa : num_cadena DOSPTO num_cadena\n    | num_cadena DOSPTO num_cadena COMA elementosMapa\n    add_mapa : ID LCORCHETE CADENA RCORCHETE EQUALS CADENA pto_coma\n    operadorA : PLUS\n    | MINUS\n    | TIMES\n    | DIVIDE\n    | DIVIDE_E\n    incremento : ID INCREMENTO pto_comadecremento : ID DECREMENTO pto_comaconcatenacion : VAR ID EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN pto_coma\n    pto_coma : PUNTCOM'
    
_lr_action_items = {'VAR':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,21,32,33,34,35,79,86,97,102,108,123,128,129,136,139,140,141,142,149,150,151,155,156,163,167,],[15,15,-1,-2,-3,-4,-5,-6,-7,-8,-9,-45,-46,-59,-60,15,-12,-71,-74,-72,-11,-13,15,15,15,15,15,15,-49,-50,-65,-51,-20,-30,-31,-62,-48,-61,-47,-73,]),'FOR':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,21,32,33,34,35,79,86,97,102,108,123,128,129,136,139,140,141,142,149,150,151,155,156,163,167,],[17,17,-1,-2,-3,-4,-5,-6,-7,-8,-9,-45,-46,-59,-60,17,-12,-71,-74,-72,-11,-13,17,17,17,17,17,17,-49,-50,-65,-51,-20,-30,-31,-62,-48,-61,-47,-73,]),'WHILE':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,21,32,33,34,35,79,86,97,102,108,123,128,129,136,139,140,141,142,149,150,151,155,156,163,167,],[18,18,-1,-2,-3,-4,-5,-6,-7,-8,-9,-45,-46,-59,-60,18,-12,-71,-74,-72,-11,-13,18,18,18,18,18,18,-49,-50,-65,-51,-20,-30,-31,-62,-48,-61,-47,-73,]),'IF':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,21,32,33,34,35,79,86,97,102,108,123,128,129,136,139,140,141,142,149,150,151,155,156,163,167,],[19,19,-1,-2,-3,-4,-5,-6,-7,-8,-9,-45,-46,-59,-60,19,-12,-71,-74,-72,-11,-13,19,19,19,19,19,19,-49,-50,-65,-51,-20,-30,-31,-62,-48,-61,-47,-73,]),'ID':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,20,21,27,28,29,31,32,33,34,35,41,64,68,69,70,71,72,73,74,75,79,80,81,82,83,84,85,86,97,102,108,123,124,128,129,136,139,140,141,142,145,146,149,150,151,155,156,163,167,],[16,16,-1,-2,-3,-4,-5,-6,-7,-8,-9,-45,-46,-59,-60,22,30,16,42,45,45,51,-12,-71,-74,-72,65,99,45,104,-40,-41,-42,-43,-44,107,-11,113,-66,-67,-68,-69,-70,-13,16,16,16,16,144,16,16,-49,-50,-65,-51,-20,159,160,-30,-31,-62,-48,-61,-47,-73,]),'MAPA':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,21,32,33,34,35,55,79,86,97,102,108,123,128,129,136,139,140,141,142,149,150,151,155,156,163,167,],[20,20,-1,-2,-3,-4,-5,-6,-7,-8,-9,-45,-46,-59,-60,20,-12,-71,-74,-72,88,-11,-13,20,20,20,20,20,20,-49,-50,-65,-51,-20,-30,-31,-62,-48,-61,-47,-73,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,21,32,33,34,35,79,86,136,139,140,141,142,149,150,151,155,156,163,167,],[0,-1,-2,-3,-4,-5,-6,-7,-8,-9,-45,-46,-59,-60,-10,-12,-71,-74,-72,-11,-13,-49,-50,-65,-51,-20,-30,-31,-62,-48,-61,-47,-73,]),'RCURLYB':([2,3,4,5,6,7,8,9,10,11,12,13,14,21,32,33,34,35,79,86,95,96,109,123,128,129,136,139,140,141,142,149,150,151,152,155,156,163,164,167,],[-1,-2,-3,-4,-5,-6,-7,-8,-9,-45,-46,-59,-60,-10,-12,-71,-74,-72,-11,-13,-52,-53,130,142,149,150,-49,-50,-65,-51,-20,-30,-31,-62,-63,-48,-61,-47,-64,-73,]),'INCREMENTO':([16,124,144,],[23,145,157,]),'DECREMENTO':([16,124,144,],[24,146,158,]),'LCORCHETE':([16,31,],[25,56,]),'PTO':([16,51,],[26,78,]),'LPAREN':([17,18,19,38,87,88,111,],[27,28,29,62,115,116,132,]),'EQUALS':([22,30,42,60,61,65,],[31,50,66,92,93,100,]),'PUNTCOM':([22,23,24,40,44,47,48,51,52,53,54,57,58,59,95,96,98,101,103,104,105,106,107,112,113,114,117,120,121,122,127,130,134,135,147,148,154,166,],[32,34,34,64,-32,-38,-39,-18,79,86,-14,-17,-15,-16,-52,-53,124,-23,-37,-33,-34,-36,-35,-19,-18,-14,34,34,34,34,-22,34,34,34,-24,-25,34,34,]),'NUMBER':([25,28,29,31,56,62,66,68,69,70,71,72,73,74,75,77,80,81,82,83,84,85,92,100,115,118,119,125,126,131,132,161,162,],[36,46,46,54,91,95,101,46,105,-40,-41,-42,-43,-44,106,95,114,-66,-67,-68,-69,-70,95,127,133,91,91,147,148,95,153,95,165,]),'CADENA':([25,31,56,62,77,80,81,82,83,84,85,92,93,118,119,131,161,],[37,59,90,96,96,59,-66,-67,-68,-69,-70,96,121,90,90,96,96,]),'ADD':([26,],[38,]),'INT':([27,],[41,]),'TRUE':([28,29,31,68,],[47,47,47,47,]),'FALSE':([28,29,31,68,],[48,48,48,48,]),'NEW':([31,],[55,]),'DOUBLE':([31,80,81,82,83,84,85,],[58,58,-66,-67,-68,-69,-70,]),'RCORCHETE':([36,37,56,89,90,91,118,119,137,138,],[60,61,-58,117,-54,-55,-58,-58,-56,-57,]),'RPAREN':([39,43,44,47,48,49,94,95,96,103,104,105,106,107,115,116,133,143,157,158,159,160,165,],[63,67,-32,-38,-39,76,122,-52,-53,-37,-33,-34,-36,-35,134,135,154,-21,-26,-27,-28,-29,166,]),'EQUIVAL':([43,44,45,46,47,48,49,51,53,54,103,104,105,106,107,],[68,-32,72,72,-38,-39,68,72,68,72,68,-33,-34,-36,-35,]),'MAYORQUE':([45,46,51,54,99,],[70,70,70,70,125,]),'MENORQUE':([45,46,51,54,99,],[71,71,71,71,126,]),'MINEQ':([45,46,51,54,],[73,73,73,73,]),'MAYEQ':([45,46,51,54,],[74,74,74,74,]),'LCURLYB':([50,63,67,76,],[77,97,102,108,]),'PLUS':([51,52,54,57,58,59,112,113,114,],[-18,81,-14,-17,-15,-16,81,-18,-14,]),'MINUS':([51,52,54,57,58,59,112,113,114,],[-18,82,-14,-17,-15,-16,82,-18,-14,]),'TIMES':([51,52,54,57,58,59,112,113,114,],[-18,83,-14,-17,-15,-16,83,-18,-14,]),'DIVIDE':([51,52,54,57,58,59,112,113,114,],[-18,84,-14,-17,-15,-16,84,-18,-14,]),'DIVIDE_E':([51,52,54,57,58,59,112,113,114,],[-18,85,-14,-17,-15,-16,85,-18,-14,]),'LISTA':([55,],[87,]),'SUBSTRING':([78,],[111,]),'COMA':([90,91,95,96,152,153,],[118,119,-52,-53,161,162,]),'DOSPTO':([95,96,110,],[-52,-53,131,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expresion':([0,1,21,97,102,108,123,128,129,],[1,21,21,123,128,129,21,21,21,]),'lista':([0,1,21,97,102,108,123,128,129,],[2,2,2,2,2,2,2,2,2,]),'mapa':([0,1,21,97,102,108,123,128,129,],[3,3,3,3,3,3,3,3,3,]),'variable':([0,1,21,97,102,108,123,128,129,],[4,4,4,4,4,4,4,4,4,]),'expresionFor':([0,1,21,97,102,108,123,128,129,],[5,5,5,5,5,5,5,5,5,]),'expresionWhile':([0,1,21,97,102,108,123,128,129,],[6,6,6,6,6,6,6,6,6,]),'expresionIf':([0,1,21,97,102,108,123,128,129,],[7,7,7,7,7,7,7,7,7,]),'concatenacion':([0,1,21,97,102,108,123,128,129,],[8,8,8,8,8,8,8,8,8,]),'incremento':([0,1,21,97,102,108,123,128,129,],[9,9,9,9,9,9,9,9,9,]),'decremento':([0,1,21,97,102,108,123,128,129,],[10,10,10,10,10,10,10,10,10,]),'expLista':([0,1,21,97,102,108,123,128,129,],[11,11,11,11,11,11,11,11,11,]),'add_lista':([0,1,21,97,102,108,123,128,129,],[12,12,12,12,12,12,12,12,12,]),'expMapa':([0,1,21,97,102,108,123,128,129,],[13,13,13,13,13,13,13,13,13,]),'add_mapa':([0,1,21,97,102,108,123,128,129,],[14,14,14,14,14,14,14,14,14,]),'pto_coma':([23,24,117,120,121,122,130,134,135,154,166,],[33,35,136,139,140,141,151,155,156,163,167,]),'forParameters':([27,],[39,]),'forIterator':([27,],[40,]),'expresionBool':([28,29,31,68,],[43,49,53,103,]),'booleano':([28,29,31,68,],[44,44,44,44,]),'expresionVar':([31,80,],[52,112,]),'valorVar':([31,80,],[57,57,]),'comparador':([45,46,51,54,],[69,75,69,75,]),'operadorA':([52,112,],[80,80,]),'elementosLista':([56,118,119,],[89,137,138,]),'num_cadena':([62,77,92,131,161,],[94,110,120,152,110,]),'forCondition':([64,],[98,]),'elementosMapa':([77,161,],[109,164,]),'forAction':([124,],[143,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expresion","S'",1,None,None,None),
  ('expresion -> lista','expresion',1,'p_expresion','parser.py',15),
  ('expresion -> mapa','expresion',1,'p_expresion','parser.py',16),
  ('expresion -> variable','expresion',1,'p_expresion','parser.py',17),
  ('expresion -> expresionFor','expresion',1,'p_expresion','parser.py',18),
  ('expresion -> expresionWhile','expresion',1,'p_expresion','parser.py',19),
  ('expresion -> expresionIf','expresion',1,'p_expresion','parser.py',20),
  ('expresion -> concatenacion','expresion',1,'p_expresion','parser.py',21),
  ('expresion -> incremento','expresion',1,'p_expresion','parser.py',22),
  ('expresion -> decremento','expresion',1,'p_expresion','parser.py',23),
  ('expresion -> expresion expresion','expresion',2,'p_expresion','parser.py',24),
  ('variable -> VAR ID EQUALS expresionVar PUNTCOM','variable',5,'p_variable','parser.py',30),
  ('variable -> VAR ID PUNTCOM','variable',3,'p_variable','parser.py',31),
  ('variable -> VAR ID EQUALS expresionBool PUNTCOM','variable',5,'p_variable','parser.py',32),
  ('valorVar -> NUMBER','valorVar',1,'p_valorVar','parser.py',35),
  ('valorVar -> DOUBLE','valorVar',1,'p_valorVar','parser.py',36),
  ('valorVar -> CADENA','valorVar',1,'p_valorVar','parser.py',37),
  ('expresionVar -> valorVar','expresionVar',1,'p_expresionVar','parser.py',40),
  ('expresionVar -> ID','expresionVar',1,'p_expresionVar','parser.py',41),
  ('expresionVar -> expresionVar operadorA expresionVar','expresionVar',3,'p_expresionVar','parser.py',42),
  ('expresionFor -> FOR LPAREN forParameters RPAREN LCURLYB expresion RCURLYB','expresionFor',7,'p_expresionFor','parser.py',47),
  ('forParameters -> forIterator PUNTCOM forCondition PUNTCOM forAction','forParameters',5,'p_forParameters','parser.py',50),
  ('forIterator -> INT ID EQUALS NUMBER','forIterator',4,'p_forIterator','parser.py',53),
  ('forIterator -> ID EQUALS NUMBER','forIterator',3,'p_forIterator','parser.py',54),
  ('forCondition -> ID MAYORQUE NUMBER','forCondition',3,'p_forCondition','parser.py',57),
  ('forCondition -> ID MENORQUE NUMBER','forCondition',3,'p_forCondition','parser.py',58),
  ('forAction -> ID INCREMENTO','forAction',2,'p_forAction','parser.py',61),
  ('forAction -> ID DECREMENTO','forAction',2,'p_forAction','parser.py',62),
  ('forAction -> INCREMENTO ID','forAction',2,'p_forAction','parser.py',63),
  ('forAction -> DECREMENTO ID','forAction',2,'p_forAction','parser.py',64),
  ('expresionWhile -> WHILE LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB','expresionWhile',7,'p_expresionWhile','parser.py',69),
  ('expresionIf -> IF LPAREN expresionBool RPAREN LCURLYB expresion RCURLYB','expresionIf',7,'p_expresionIf','parser.py',74),
  ('expresionBool -> booleano','expresionBool',1,'p_expresionBool','parser.py',79),
  ('expresionBool -> ID comparador ID','expresionBool',3,'p_expresionBool','parser.py',80),
  ('expresionBool -> ID comparador NUMBER','expresionBool',3,'p_expresionBool','parser.py',81),
  ('expresionBool -> NUMBER comparador ID','expresionBool',3,'p_expresionBool','parser.py',82),
  ('expresionBool -> NUMBER comparador NUMBER','expresionBool',3,'p_expresionBool','parser.py',83),
  ('expresionBool -> expresionBool EQUIVAL expresionBool','expresionBool',3,'p_expresionBool','parser.py',84),
  ('booleano -> TRUE','booleano',1,'p_booleano','parser.py',87),
  ('booleano -> FALSE','booleano',1,'p_booleano','parser.py',88),
  ('comparador -> MAYORQUE','comparador',1,'p_comparador','parser.py',91),
  ('comparador -> MENORQUE','comparador',1,'p_comparador','parser.py',92),
  ('comparador -> EQUIVAL','comparador',1,'p_comparador','parser.py',93),
  ('comparador -> MINEQ','comparador',1,'p_comparador','parser.py',94),
  ('comparador -> MAYEQ','comparador',1,'p_comparador','parser.py',95),
  ('lista -> expLista','lista',1,'p_lista','parser.py',110),
  ('lista -> add_lista','lista',1,'p_lista','parser.py',111),
  ('expLista -> VAR ID EQUALS NEW LISTA LPAREN NUMBER RPAREN pto_coma','expLista',9,'p_expLista','parser.py',115),
  ('expLista -> VAR ID EQUALS NEW LISTA LPAREN RPAREN pto_coma','expLista',8,'p_expLista','parser.py',116),
  ('expLista -> VAR ID EQUALS LCORCHETE elementosLista RCORCHETE pto_coma','expLista',7,'p_expLista','parser.py',117),
  ('add_lista -> ID LCORCHETE NUMBER RCORCHETE EQUALS num_cadena pto_coma','add_lista',7,'p_add_lista','parser.py',122),
  ('add_lista -> ID PTO ADD LPAREN num_cadena RPAREN pto_coma','add_lista',7,'p_add_lista','parser.py',123),
  ('num_cadena -> NUMBER','num_cadena',1,'p_num_cadena','parser.py',127),
  ('num_cadena -> CADENA','num_cadena',1,'p_num_cadena','parser.py',128),
  ('elementosLista -> CADENA','elementosLista',1,'p_elementosLista','parser.py',132),
  ('elementosLista -> NUMBER','elementosLista',1,'p_elementosLista','parser.py',133),
  ('elementosLista -> CADENA COMA elementosLista','elementosLista',3,'p_elementosLista','parser.py',134),
  ('elementosLista -> NUMBER COMA elementosLista','elementosLista',3,'p_elementosLista','parser.py',135),
  ('elementosLista -> <empty>','elementosLista',0,'p_elementosLista','parser.py',136),
  ('mapa -> expMapa','mapa',1,'p_mapa','parser.py',140),
  ('mapa -> add_mapa','mapa',1,'p_mapa','parser.py',141),
  ('expMapa -> VAR ID EQUALS NEW MAPA LPAREN RPAREN pto_coma','expMapa',8,'p_expMapa','parser.py',145),
  ('expMapa -> MAPA ID EQUALS LCURLYB elementosMapa RCURLYB pto_coma','expMapa',7,'p_expMapa','parser.py',146),
  ('elementosMapa -> num_cadena DOSPTO num_cadena','elementosMapa',3,'p_elementosMapa','parser.py',151),
  ('elementosMapa -> num_cadena DOSPTO num_cadena COMA elementosMapa','elementosMapa',5,'p_elementosMapa','parser.py',152),
  ('add_mapa -> ID LCORCHETE CADENA RCORCHETE EQUALS CADENA pto_coma','add_mapa',7,'p_add_mapa','parser.py',157),
  ('operadorA -> PLUS','operadorA',1,'p_operadorA','parser.py',161),
  ('operadorA -> MINUS','operadorA',1,'p_operadorA','parser.py',162),
  ('operadorA -> TIMES','operadorA',1,'p_operadorA','parser.py',163),
  ('operadorA -> DIVIDE','operadorA',1,'p_operadorA','parser.py',164),
  ('operadorA -> DIVIDE_E','operadorA',1,'p_operadorA','parser.py',165),
  ('incremento -> ID INCREMENTO pto_coma','incremento',3,'p_incremento','parser.py',169),
  ('decremento -> ID DECREMENTO pto_coma','decremento',3,'p_decremento','parser.py',172),
  ('concatenacion -> VAR ID EQUALS ID PTO SUBSTRING LPAREN NUMBER COMA NUMBER RPAREN pto_coma','concatenacion',12,'p_concatenacion','parser.py',177),
  ('pto_coma -> PUNTCOM','pto_coma',1,'p_pto_coma','parser.py',183),
]
